{"mappings":"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","sources":["src/index.ts"],"sourcesContent":["// ===============================================\n// https://www.npmjs.com/package/get-random-values\n// ===============================================\nimport { default as getRandomValues } from 'get-random-values';\n\nexport type FixedLengthString<Length extends number> = string & { __fixedLength: Length };\nexport type ComponentId = FixedLengthString<12>;\nexport type Segment = FixedLengthString<4>;\nexport type ParentSegementId = `${Segment}-${Segment}-${Segment}`;\nexport type CollectionId = FixedLengthString<12>;\nexport type HUID = `${ComponentId}-${ParentSegementId}-${CollectionId}`;\n\n/** \n * Interface pour les options de l'UUID hiérarchique.\n */\nexport interface HierarchicalUUIDOptions {\n  /** \n   * Identifiant parent (optionnel). \n   */\n  parentId?: FixedLengthString<12>;\n\n  /**\n   * Identifiant de collection (optionnel).\n   */\n  collectionId?: FixedLengthString<12>;\n}\n\n/** \n * Classe _HUID pour manipuler les UUID hiérarchiques.\n*/\nexport class _HUID extends String{\n\n  /**\n   * Obtient l'identifiant de composant en extrayant la première partie de l'UUID.\n   * @returns L'identifiant de composant.\n   * @example\n   * ```typescript\n   *  const uuid = new _HUID('123456789012-1234-5678-90ab-abcdefabcdef');\n   *  console.log(uuid.componentId); // '123456789012'\n   * ```\n  */\n  get componentId(){ return this.split('-')[0] as ComponentId; }\n\n  /**\n   * Obtient la première section de l'UUID après division par '-'.\n   * @returns La première section de l'UUID.\n   * @example\n   * ```typescript\n   *  const uuid = new _HUID('123456789012-1234-5678-90ab-abcdefabcdef');\n   *  console.log(uuid.section1); // '1234'\n   * ```\n  */\n  get section1(){ return this.split('-')[1] as Segment; }\n\n  /**\n   * Obtient la deuxième section de l'UUID après division par '-'.\n   * @returns La deuxième section de l'UUID.\n   * @example\n   * ```typescipt\n   *  const uuid = new _HUID('123456789012-1234-5678-90ab-abcdefabcdef');\n   *  console.log(uuid.section2); // '5678'\n   * ```\n  */\n  get section2(){ return this.split('-')[2] as Segment; }\n\n  /**\n   * Obtient la troisième section de l'UUID après division par '-'.\n   * @returns La troisième section de l'UUID.\n   * @example\n   * ```typescript\n   *  const uuid = new _HUID('123456789012-1234-5678-90ab-abcdefabcdef');\n   *  console.log(uuid.section3); // '90ab'\n   * ```\n  */\n  get section3(){ return this.split('-')[3] as Segment; }\n\n  /**\n   * Obtient l'identifiant de collection en extrayant la cinquième partie de l'UUID.\n   * @returns L'identifiant de collection.\n   * @example\n   * ```typescript\n   *  const uuid = new _HUID('123456789012-1234-5678-90ab-abcdefabcdef');\n   *  console.log(uuid.collectionId); // 'abcdefabcdef'\n   * ```\n  */\n  get collectionId(){ return this.split('-')[4] as CollectionId; }\n\n  /**\n   * Obtient l'identifiant parent en concaténant les sections 1, 2 et 3.\n   * @returns L'identifiant parent.\n   * @example\n   * ```typescript\n   *  const uuid = new _HUID('123456789012-1234-5678-90ab-abcdefabcdef');\n   *  console.log(uuid.parentId); // '1234567890ab'\n   * ```\n  */\n  get parentId(){ return [this.section1,this.section2,this.section3].join('') as FixedLengthString<12>; }\n\n  /**\n   * Étend l'UUID hiérarchique avec des options personnalisées.\n   * @param {HierarchicalUUIDOptions} [options] - Options pour personnaliser l'UUID.\n   * @returns Un nouvel UUID hiérarchique (_HUID).\n   * @example\n   * ```typescript\n   *  const uuid = new _HUID('123456789012-1234-5678-90ab-abcdefabcdef');\n   *  const extendedUUID = uuid.extend({ parentId: '098765432109', collectionId: 'abcdefabcdef' });\n   *  console.log(extendedUUID); // Un nouvel _HUID avec les sections mises à jour.\n   * ```\n  */\n  extend(options?:HierarchicalUUIDOptions){\n\n    return uuid.hv1({\n      parentId : this.componentId,\n      collectionId : this.collectionId,\n    })\n\n  }\n\n}\n\n/** \n * Classe pour générer des UUID.\n*/\nexport class uuid{\n\n  /**\n   * Obtient une valeur par défaut pour l'identifiant de composant.\n   * @returns '000000000000' en tant que ComponentId.\n  */\n  static get componentId(){ return '000000000000' as ComponentId; }\n\n  /**\n   * Obtient une valeur par défaut pour la première section de l'UUID.\n   * @returns '0000' en tant que Segment.\n  */\n  static get segment1(){ return '0000' as Segment; }\n\n  /**\n   * Obtient une valeur par défaut pour la deuxième section de l'UUID.\n   * @returns '0000' en tant que Segment.\n  */\n  static get segment2(){ return '0000' as Segment; }\n\n  /**\n   * Obtient une valeur par défaut pour la troisième section de l'UUID.\n   * @returns '0000' en tant que Segment.\n  */\n  static get segment3(){ return '0000' as Segment; }\n\n  /**\n   * Obtient une valeur par défaut pour l'identifiant de collection.\n   * @returns '000000000000' en tant que CollectionId.\n  */\n  static get collectionId(){ return '000000000000' as CollectionId; }\n\n  /**\n   * Obtient un UUID NIL (null) par défaut.\n   * @returns L'UUID NIL sous forme de chaîne.\n  */\n  static get NIL(){ return new _HUID(`${uuid.componentId}-${uuid.segment1}-${uuid.segment2}-${uuid.segment3}-${uuid.collectionId}`); }\n\n  /**\n   * Encode une chaîne de longueur fixe en remplaçant certains caractères par des valeurs hexadécimales aléatoires.\n   * @param chaine - Une chaîne de longueur fixe.\n   * @returns Une chaîne de longueur fixe avec des valeurs hexadécimales aléatoires.\n   * @example\n   * ```typescript\n   *  const encoded = uuid.encode('123456789012');\n   *  console.log(encoded); // '1a2b3c4d5e6f'\n   * ```\n  */\n  static encode< N extends number = 4 | 12 >( chaine:FixedLengthString<N> ){\n    return chaine.replace(/[018]/g, (c:any) =>\n    {\n      return (c ^ getRandomValues(new Uint8Array(1))[0] & 15 >> c / 4).toString(16)\n    }) as FixedLengthString<N> | FixedLengthString<N>\n  }\n\n  /**\n   * Génère un UUID de version 4 en utilisant des valeurs aléatoires.\n   * @returns Un UUID de version 4 sous forme de chaîne.\n   * @example\n   * ```typescript\n   *  const uuidV4 = uuid.v4();\n   *  console.log(uuidV4); // Un UUID de version 4.\n   * ```\n  */\n  static v4(  ) {\n\n    return uuid.NIL.replace(/[018]/g, (c:any) =>\n      {\n        return (c ^ getRandomValues(new Uint8Array(1))[0] & 15 >> c / 4).toString(16)\n      }\n    ) as `${string}-${string}-${string}-${string}-${string}`;\n\n  }\n\n  /**\n   * Génère un UUID hiérarchique en fonction des options fournies.\n   * @param {HierarchicalUUIDOptions} [options] - Options pour personnaliser l'UUID.\n   * @returns Un nouvel UUID hiérarchique (_HUID).\n   * @example\n   * ```typescript\n   *  const hierarchicalUUID = uuid.hv1({ parentId: '123456789012', collectionId: 'abcdefabcdef' });\n   *  console.log(hierarchicalUUID); // Un nouvel UUID hiérarchique (_HUID).\n   * ```\n  */\n  static hv1( options?:HierarchicalUUIDOptions ) {\n\n    if(!options)options = {\n      parentId : null,\n      collectionId : null\n    };\n\n    let componentId = uuid.encode( uuid.componentId );\n    let segment1 = uuid.encode( uuid.segment1 );\n    let segment2 = uuid.encode( uuid.segment2 );\n    let segment3 = uuid.encode( uuid.segment3 );\n    let collectionId = uuid.encode( uuid.collectionId );\n\n    if(options.parentId && options.parentId.length == 12){\n      segment1 = options.parentId.slice(0,4) as FixedLengthString<4>;\n      segment2 = options.parentId.slice(4,8) as FixedLengthString<4>;\n      segment3 = options.parentId.slice(8,12) as FixedLengthString<4>;\n    }\n    else console.error( 'parentId.length exeded 12 char length.' )\n\n    if(options.collectionId)collectionId = options.collectionId;\n\n    return new _HUID(`${ componentId }-${ segment1 }-${ segment2 }-${ segment3 }-${ collectionId }`);\n\n  }\n\n}"],"names":["default","getRandomValues","FixedLengthString","__fixedLength","Length","ComponentId","Segment","ParentSegementId","CollectionId","HUID","HierarchicalUUIDOptions","parentId","collectionId","_HUID","String","componentId","split","section1","section2","section3","join","extend","options","uuid","hv1","segment1","segment2","segment3","NIL","encode","chaine","N","replace","c","Uint8Array","toString","v4","length","slice","console","error"],"version":3,"file":"module.js.map"}