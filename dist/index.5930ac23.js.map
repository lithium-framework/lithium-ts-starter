{"mappings":"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","sources":["<anon>","src/index.ts","../../core/dist/module.js","../../core/src/index.ts","../../core/src/dom/index.ts","../../core/src/utils/observable-object/index.ts","../../core/src/utils/observable-object/models.ts","../../core/src/decorators/index.ts","../../core/src/decorators/attributeState.ts","../../core/src/decorators/state.ts","../../core/src/directives/index.ts","../../core/src/directives/assyncAppend.ts","../../core/src/directives/ref.ts","../../core/src/directives/state.ts","../../core/src/directives/style.ts","../../core/src/directives/until.ts","../../core/src/utils/index.ts","../../core/src/webComponent/index.ts","../../core/src/webComponent/model.ts","../../core/node_modules/@microsoft/fast-element/dist/esm/observation/observable.js","../../core/node_modules/@microsoft/fast-element/dist/esm/interfaces.js","../../core/node_modules/@microsoft/fast-element/dist/esm/platform.js","../../core/node_modules/@microsoft/fast-element/dist/esm/polyfills.js","../../core/node_modules/@microsoft/fast-element/dist/esm/observation/update-queue.js","../../core/node_modules/@microsoft/fast-element/dist/esm/observation/notifier.js","../../core/node_modules/@microsoft/fast-element/dist/esm/components/attributes.js","../../core/node_modules/@microsoft/fast-element/dist/esm/dom.js","../../core/node_modules/@microsoft/fast-element/dist/esm/binding/binding.js","../../core/node_modules/@microsoft/fast-element/dist/esm/templating/children.js","../../core/node_modules/@microsoft/fast-element/dist/esm/templating/html-directive.js","../../core/node_modules/@microsoft/fast-element/dist/esm/templating/markup.js","../../core/node_modules/@microsoft/fast-element/dist/esm/templating/node-observation.js","../../core/node_modules/@microsoft/fast-element/dist/esm/styles/css.js","../../core/node_modules/@microsoft/fast-element/dist/esm/binding/one-way.js","../../core/node_modules/@microsoft/fast-element/dist/esm/styles/css-directive.js","../../core/node_modules/@microsoft/fast-element/dist/esm/styles/element-styles.js","../../core/node_modules/@microsoft/fast-element/dist/esm/styles/css-binding-directive.js","../../core/node_modules/@microsoft/fast-element/dist/esm/components/fast-element.js","../../core/node_modules/@microsoft/fast-element/dist/esm/components/element-controller.js","../../core/node_modules/@microsoft/fast-element/dist/esm/components/fast-definitions.js","../../core/node_modules/@microsoft/fast-element/dist/esm/templating/template.js","../../core/node_modules/@microsoft/fast-element/dist/esm/binding/one-time.js","../../core/node_modules/@microsoft/fast-element/dist/esm/templating/html-binding-directive.js","../../core/node_modules/@microsoft/fast-element/dist/esm/templating/compiler.js","../../core/node_modules/@microsoft/fast-element/dist/esm/templating/view.js","../../core/node_modules/@microsoft/fast-element/dist/esm/templating/repeat.js","../../core/node_modules/@microsoft/fast-element/dist/esm/observation/arrays.js","../../core/node_modules/@microsoft/fast-element/dist/esm/binding/normalize.js","../../core/node_modules/@microsoft/fast-element/dist/esm/templating/slotted.js","../../core/node_modules/@microsoft/fast-element/dist/esm/templating/when.js","../../core/node_modules/@lithium-framework/state/dist/module.js","../../core/node_modules/@lithium-framework/state/dist/src/index.ts","../../core/node_modules/@lithium-framework/state/dist/src/models/state.ts","../../core/node_modules/@lithium-framework/state/dist/src/createState.ts","../../core/node_modules/@lithium-framework/context/dist/module.js","../../core/node_modules/@lithium-framework/context/dist/src/index.ts","../../core/node_modules/@lithium-framework/context/dist/src/create-storage.ts","../../core/node_modules/@lithium-framework/context/dist/src/models/storage.ts","../../core/node_modules/@lithium-framework/huid/dist/module.js","../../core/node_modules/@lithium-framework/huid/dist/src/index.ts","../../core/node_modules/get-random-values/index.js","../../core/node_modules/global/window.js","node_modules/@parcel/node-resolver-core/lib/_empty.js","src/components/hello-world/index.ts","src/components/navigator-informations/index.ts"],"sourcesContent":["\n      var $parcel$global = globalThis;\n    \nfunction $parcel$interopDefault(a) {\n  return a && a.__esModule ? a.default : a;\n}\nlet $3b68c0e8977f93f3$var$kernelMode;\nconst $3b68c0e8977f93f3$var$kernelAttr = \"fast-kernel\";\ntry {\n    if (document.currentScript) $3b68c0e8977f93f3$var$kernelMode = document.currentScript.getAttribute($3b68c0e8977f93f3$var$kernelAttr);\n    else {\n        const scripts = document.getElementsByTagName(\"script\");\n        const currentScript = scripts[scripts.length - 1];\n        $3b68c0e8977f93f3$var$kernelMode = currentScript.getAttribute($3b68c0e8977f93f3$var$kernelAttr);\n    }\n} catch (e) {\n    $3b68c0e8977f93f3$var$kernelMode = \"isolate\";\n}\nlet $3b68c0e8977f93f3$export$f2080b9a9a32b8d3;\nswitch($3b68c0e8977f93f3$var$kernelMode){\n    case \"share\":\n        $3b68c0e8977f93f3$export$f2080b9a9a32b8d3 = Object.freeze({\n            updateQueue: 1,\n            observable: 2,\n            contextEvent: 3,\n            elementRegistry: 4\n        });\n        break;\n    case \"share-v2\":\n        $3b68c0e8977f93f3$export$f2080b9a9a32b8d3 = Object.freeze({\n            updateQueue: 1.2,\n            observable: 2.2,\n            contextEvent: 3.2,\n            elementRegistry: 4.2\n        });\n        break;\n    default:\n        // fully isolate the kernel from all other FAST instances\n        const postfix = `-${Math.random().toString(36).substring(2, 8)}`;\n        $3b68c0e8977f93f3$export$f2080b9a9a32b8d3 = Object.freeze({\n            updateQueue: `1.2${postfix}`,\n            observable: `2.2${postfix}`,\n            contextEvent: `3.2${postfix}`,\n            elementRegistry: `4.2${postfix}`\n        });\n        break;\n}\nconst $3b68c0e8977f93f3$export$f6e2535fb5126e54 = (object)=>typeof object === \"function\";\nconst $3b68c0e8977f93f3$export$844ec244b1367d54 = (object)=>typeof object === \"string\";\nconst $3b68c0e8977f93f3$export$8793edee2d425525 = ()=>void 0;\n\n\n\n/* eslint-disable @typescript-eslint/ban-ts-comment */ (function ensureGlobalThis() {\n    if (typeof globalThis !== \"undefined\") // We're running in a modern environment.\n    return;\n    // @ts-ignore\n    if (typeof $parcel$global !== \"undefined\") // We're running in NodeJS\n    // @ts-ignore\n    $parcel$global.globalThis = $parcel$global;\n    else if (typeof self !== \"undefined\") self.globalThis = self;\n    else if (typeof window !== \"undefined\") // We're running in the browser's main thread.\n    window.globalThis = window;\n    else {\n        // Hopefully we never get here...\n        // Not all environments allow eval and Function. Use only as a last resort:\n        // eslint-disable-next-line no-new-func\n        const result = new Function(\"return this\")();\n        result.globalThis = result;\n    }\n})();\n\n\n// ensure FAST global - duplicated debug.ts\nconst $3cd519730db4770f$var$propConfig = {\n    configurable: false,\n    enumerable: false,\n    writable: false\n};\nif (globalThis.FAST === void 0) Reflect.defineProperty(globalThis, \"FAST\", Object.assign({\n    value: Object.create(null)\n}, $3cd519730db4770f$var$propConfig));\nconst $3cd519730db4770f$export$360e186c37756536 = globalThis.FAST;\nif ($3cd519730db4770f$export$360e186c37756536.getById === void 0) {\n    const storage = Object.create(null);\n    Reflect.defineProperty($3cd519730db4770f$export$360e186c37756536, \"getById\", Object.assign({\n        value (id, initialize) {\n            let found = storage[id];\n            if (found === void 0) found = initialize ? storage[id] = initialize() : null;\n            return found;\n        }\n    }, $3cd519730db4770f$var$propConfig));\n}\nif ($3cd519730db4770f$export$360e186c37756536.error === void 0) Object.assign($3cd519730db4770f$export$360e186c37756536, {\n    warn () {},\n    error (code) {\n        return new Error(`Error ${code}`);\n    },\n    addMessages () {}\n});\nconst $3cd519730db4770f$export$d3ae4127996a91af = Object.freeze([]);\nfunction $3cd519730db4770f$export$a31396a98752ddb5() {\n    const typeToDefinition = new Map();\n    return Object.freeze({\n        register (definition) {\n            if (typeToDefinition.has(definition.type)) return false;\n            typeToDefinition.set(definition.type, definition);\n            return true;\n        },\n        getByType (key) {\n            return typeToDefinition.get(key);\n        },\n        getForInstance (object) {\n            if (object === null || object === void 0) return void 0;\n            return typeToDefinition.get(object.constructor);\n        }\n    });\n}\nfunction $3cd519730db4770f$export$df500aa24c905daf() {\n    const metadataLookup = new WeakMap();\n    return function(target) {\n        let metadata = metadataLookup.get(target);\n        if (metadata === void 0) {\n            let currentTarget = Reflect.getPrototypeOf(target);\n            while(metadata === void 0 && currentTarget !== null){\n                metadata = metadataLookup.get(currentTarget);\n                currentTarget = Reflect.getPrototypeOf(currentTarget);\n            }\n            metadata = metadata === void 0 ? [] : metadata.slice(0);\n            metadataLookup.set(target, metadata);\n        }\n        return metadata;\n    };\n}\nfunction $3cd519730db4770f$export$997c5e5ecebc1b61(type) {\n    type.prototype.toJSON = (0, $3b68c0e8977f93f3$export$8793edee2d425525);\n}\n\n\n\n\nconst $d0b09140ab7069d2$export$26ef613a0934aa5f = (0, $3cd519730db4770f$export$360e186c37756536).getById((0, $3b68c0e8977f93f3$export$f2080b9a9a32b8d3).updateQueue, ()=>{\n    const tasks = [];\n    const pendingErrors = [];\n    const rAF = globalThis.requestAnimationFrame;\n    let updateAsync = true;\n    function throwFirstError() {\n        if (pendingErrors.length) throw pendingErrors.shift();\n    }\n    function tryRunTask(task) {\n        try {\n            task.call();\n        } catch (error) {\n            if (updateAsync) {\n                pendingErrors.push(error);\n                setTimeout(throwFirstError, 0);\n            } else {\n                tasks.length = 0;\n                throw error;\n            }\n        }\n    }\n    function process() {\n        const capacity = 1024;\n        let index = 0;\n        while(index < tasks.length){\n            tryRunTask(tasks[index]);\n            index++;\n            // Prevent leaking memory for long chains of recursive calls to `enqueue`.\n            // If we call `enqueue` within a task scheduled by `enqueue`, the queue will\n            // grow, but to avoid an O(n) walk for every task we execute, we don't\n            // shift tasks off the queue after they have been executed.\n            // Instead, we periodically shift 1024 tasks off the queue.\n            if (index > capacity) {\n                // Manually shift all values starting at the index back to the\n                // beginning of the queue.\n                for(let scan = 0, newLength = tasks.length - index; scan < newLength; scan++)tasks[scan] = tasks[scan + index];\n                tasks.length -= index;\n                index = 0;\n            }\n        }\n        tasks.length = 0;\n    }\n    function enqueue(callable) {\n        tasks.push(callable);\n        if (tasks.length < 2) updateAsync ? rAF(process) : process();\n    }\n    return Object.freeze({\n        enqueue: enqueue,\n        next: ()=>new Promise(enqueue),\n        process: process,\n        setMode: (isAsync)=>updateAsync = isAsync\n    });\n});\n\n\n/**\n * An implementation of {@link Notifier} that efficiently keeps track of\n * subscribers interested in a specific change notification on an\n * observable subject.\n *\n * @remarks\n * This set is optimized for the most common scenario of 1 or 2 subscribers.\n * With this in mind, it can store a subscriber in an internal field, allowing it to avoid Array#push operations.\n * If the set ever exceeds two subscribers, it upgrades to an array automatically.\n * @public\n */ class $0d21722c4bcdf3f6$export$f35d03caf9a2ecdf {\n    /**\n     * Creates an instance of SubscriberSet for the specified subject.\n     * @param subject - The subject that subscribers will receive notifications from.\n     * @param initialSubscriber - An initial subscriber to changes.\n     */ constructor(subject, initialSubscriber){\n        this.sub1 = void 0;\n        this.sub2 = void 0;\n        this.spillover = void 0;\n        this.subject = subject;\n        this.sub1 = initialSubscriber;\n    }\n    /**\n     * Checks whether the provided subscriber has been added to this set.\n     * @param subscriber - The subscriber to test for inclusion in this set.\n     */ has(subscriber) {\n        return this.spillover === void 0 ? this.sub1 === subscriber || this.sub2 === subscriber : this.spillover.indexOf(subscriber) !== -1;\n    }\n    /**\n     * Subscribes to notification of changes in an object's state.\n     * @param subscriber - The object that is subscribing for change notification.\n     */ subscribe(subscriber) {\n        const spillover = this.spillover;\n        if (spillover === void 0) {\n            if (this.has(subscriber)) return;\n            if (this.sub1 === void 0) {\n                this.sub1 = subscriber;\n                return;\n            }\n            if (this.sub2 === void 0) {\n                this.sub2 = subscriber;\n                return;\n            }\n            this.spillover = [\n                this.sub1,\n                this.sub2,\n                subscriber\n            ];\n            this.sub1 = void 0;\n            this.sub2 = void 0;\n        } else {\n            const index = spillover.indexOf(subscriber);\n            if (index === -1) spillover.push(subscriber);\n        }\n    }\n    /**\n     * Unsubscribes from notification of changes in an object's state.\n     * @param subscriber - The object that is unsubscribing from change notification.\n     */ unsubscribe(subscriber) {\n        const spillover = this.spillover;\n        if (spillover === void 0) {\n            if (this.sub1 === subscriber) this.sub1 = void 0;\n            else if (this.sub2 === subscriber) this.sub2 = void 0;\n        } else {\n            const index = spillover.indexOf(subscriber);\n            if (index !== -1) spillover.splice(index, 1);\n        }\n    }\n    /**\n     * Notifies all subscribers.\n     * @param args - Data passed along to subscribers during notification.\n     */ notify(args) {\n        const spillover = this.spillover;\n        const subject = this.subject;\n        if (spillover === void 0) {\n            const sub1 = this.sub1;\n            const sub2 = this.sub2;\n            if (sub1 !== void 0) sub1.handleChange(subject, args);\n            if (sub2 !== void 0) sub2.handleChange(subject, args);\n        } else for(let i = 0, ii = spillover.length; i < ii; ++i)spillover[i].handleChange(subject, args);\n    }\n}\nclass $0d21722c4bcdf3f6$export$af6e57f0938b1389 {\n    /**\n     * Creates an instance of PropertyChangeNotifier for the specified subject.\n     * @param subject - The object that subscribers will receive notifications for.\n     */ constructor(subject){\n        this.subscribers = {};\n        this.subjectSubscribers = null;\n        this.subject = subject;\n    }\n    /**\n     * Notifies all subscribers, based on the specified property.\n     * @param propertyName - The property name, passed along to subscribers during notification.\n     */ notify(propertyName) {\n        var _a, _b;\n        (_a = this.subscribers[propertyName]) === null || _a === void 0 || _a.notify(propertyName);\n        (_b = this.subjectSubscribers) === null || _b === void 0 || _b.notify(propertyName);\n    }\n    /**\n     * Subscribes to notification of changes in an object's state.\n     * @param subscriber - The object that is subscribing for change notification.\n     * @param propertyToWatch - The name of the property that the subscriber is interested in watching for changes.\n     */ subscribe(subscriber, propertyToWatch) {\n        var _a, _b;\n        let subscribers;\n        if (propertyToWatch) subscribers = (_a = this.subscribers[propertyToWatch]) !== null && _a !== void 0 ? _a : this.subscribers[propertyToWatch] = new $0d21722c4bcdf3f6$export$f35d03caf9a2ecdf(this.subject);\n        else subscribers = (_b = this.subjectSubscribers) !== null && _b !== void 0 ? _b : this.subjectSubscribers = new $0d21722c4bcdf3f6$export$f35d03caf9a2ecdf(this.subject);\n        subscribers.subscribe(subscriber);\n    }\n    /**\n     * Unsubscribes from notification of changes in an object's state.\n     * @param subscriber - The object that is unsubscribing from change notification.\n     * @param propertyToUnwatch - The name of the property that the subscriber is no longer interested in watching.\n     */ unsubscribe(subscriber, propertyToUnwatch) {\n        var _a, _b;\n        if (propertyToUnwatch) (_a = this.subscribers[propertyToUnwatch]) === null || _a === void 0 || _a.unsubscribe(subscriber);\n        else (_b = this.subjectSubscribers) === null || _b === void 0 || _b.unsubscribe(subscriber);\n    }\n}\n\n\nconst $11afc8bee2de7865$export$9a9eae009eb8780f = Object.freeze({\n    /**\n     * The source to controller lifetime relationship is unknown.\n     */ unknown: void 0,\n    /**\n     * The source and controller lifetimes are coupled to one another.\n     * They can/will be GC'd together.\n     */ coupled: 1\n});\nconst $11afc8bee2de7865$export$77cea355fa80b5f4 = (0, $3cd519730db4770f$export$360e186c37756536).getById((0, $3b68c0e8977f93f3$export$f2080b9a9a32b8d3).observable, ()=>{\n    const queueUpdate = (0, $d0b09140ab7069d2$export$26ef613a0934aa5f).enqueue;\n    const volatileRegex = /(:|&&|\\|\\||if|\\?\\.)/;\n    const notifierLookup = new WeakMap();\n    let watcher = void 0;\n    let createArrayObserver = (array)=>{\n        throw (0, $3cd519730db4770f$export$360e186c37756536).error(1101 /* Message.needsArrayObservation */ );\n    };\n    function getNotifier(source) {\n        var _a;\n        let found = (_a = source.$fastController) !== null && _a !== void 0 ? _a : notifierLookup.get(source);\n        if (found === void 0) Array.isArray(source) ? found = createArrayObserver(source) : notifierLookup.set(source, found = new (0, $0d21722c4bcdf3f6$export$af6e57f0938b1389)(source));\n        return found;\n    }\n    const getAccessors = (0, $3cd519730db4770f$export$df500aa24c905daf)();\n    class DefaultObservableAccessor {\n        constructor(name){\n            this.name = name;\n            this.field = `_${name}`;\n            this.callback = `${name}Changed`;\n        }\n        getValue(source) {\n            if (watcher !== void 0) watcher.watch(source, this.name);\n            return source[this.field];\n        }\n        setValue(source, newValue) {\n            const field = this.field;\n            const oldValue = source[field];\n            if (oldValue !== newValue) {\n                source[field] = newValue;\n                const callback = source[this.callback];\n                if ((0, $3b68c0e8977f93f3$export$f6e2535fb5126e54)(callback)) callback.call(source, oldValue, newValue);\n                getNotifier(source).notify(this.name);\n            }\n        }\n    }\n    class ExpressionNotifierImplementation extends (0, $0d21722c4bcdf3f6$export$f35d03caf9a2ecdf) {\n        constructor(expression, initialSubscriber, isVolatileBinding = false){\n            super(expression, initialSubscriber);\n            this.expression = expression;\n            this.isVolatileBinding = isVolatileBinding;\n            this.needsRefresh = true;\n            this.needsQueue = true;\n            this.isAsync = true;\n            this.first = this;\n            this.last = null;\n            this.propertySource = void 0;\n            this.propertyName = void 0;\n            this.notifier = void 0;\n            this.next = void 0;\n        }\n        setMode(isAsync) {\n            this.isAsync = this.needsQueue = isAsync;\n        }\n        bind(controller) {\n            this.controller = controller;\n            const value = this.observe(controller.source, controller.context);\n            if (!controller.isBound && this.requiresUnbind(controller)) controller.onUnbind(this);\n            return value;\n        }\n        requiresUnbind(controller) {\n            return controller.sourceLifetime !== $11afc8bee2de7865$export$9a9eae009eb8780f.coupled || this.first !== this.last || this.first.propertySource !== controller.source;\n        }\n        unbind(controller) {\n            this.dispose();\n        }\n        observe(source, context) {\n            if (this.needsRefresh && this.last !== null) this.dispose();\n            const previousWatcher = watcher;\n            watcher = this.needsRefresh ? this : void 0;\n            this.needsRefresh = this.isVolatileBinding;\n            let result;\n            try {\n                result = this.expression(source, context);\n            } finally{\n                watcher = previousWatcher;\n            }\n            return result;\n        }\n        // backwards compat with v1 kernel\n        disconnect() {\n            this.dispose();\n        }\n        dispose() {\n            if (this.last !== null) {\n                let current = this.first;\n                while(current !== void 0){\n                    current.notifier.unsubscribe(this, current.propertyName);\n                    current = current.next;\n                }\n                this.last = null;\n                this.needsRefresh = this.needsQueue = this.isAsync;\n            }\n        }\n        watch(propertySource, propertyName) {\n            const prev = this.last;\n            const notifier = getNotifier(propertySource);\n            const current = prev === null ? this.first : {};\n            current.propertySource = propertySource;\n            current.propertyName = propertyName;\n            current.notifier = notifier;\n            notifier.subscribe(this, propertyName);\n            if (prev !== null) {\n                if (!this.needsRefresh) {\n                    // Declaring the variable prior to assignment below circumvents\n                    // a bug in Angular's optimization process causing infinite recursion\n                    // of this watch() method. Details https://github.com/microsoft/fast/issues/4969\n                    let prevValue;\n                    watcher = void 0;\n                    /* eslint-disable-next-line */ prevValue = prev.propertySource[prev.propertyName];\n                    /* eslint-disable-next-line */ watcher = this;\n                    if (propertySource === prevValue) this.needsRefresh = true;\n                }\n                prev.next = current;\n            }\n            this.last = current;\n        }\n        handleChange() {\n            if (this.needsQueue) {\n                this.needsQueue = false;\n                queueUpdate(this);\n            } else if (!this.isAsync) this.call();\n        }\n        call() {\n            if (this.last !== null) {\n                this.needsQueue = this.isAsync;\n                this.notify(this);\n            }\n        }\n        *records() {\n            let next = this.first;\n            while(next !== void 0){\n                yield next;\n                next = next.next;\n            }\n        }\n    }\n    (0, $3cd519730db4770f$export$997c5e5ecebc1b61)(ExpressionNotifierImplementation);\n    return Object.freeze({\n        /**\n         * @internal\n         * @param factory - The factory used to create array observers.\n         */ setArrayObserverFactory (factory) {\n            createArrayObserver = factory;\n        },\n        getNotifier: /**\n         * Gets a notifier for an object or Array.\n         * @param source - The object or Array to get the notifier for.\n         */ getNotifier,\n        /**\n         * Records a property change for a source object.\n         * @param source - The object to record the change against.\n         * @param propertyName - The property to track as changed.\n         */ track (source, propertyName) {\n            watcher && watcher.watch(source, propertyName);\n        },\n        /**\n         * Notifies watchers that the currently executing property getter or function is volatile\n         * with respect to its observable dependencies.\n         */ trackVolatile () {\n            watcher && (watcher.needsRefresh = true);\n        },\n        /**\n         * Notifies subscribers of a source object of changes.\n         * @param source - the object to notify of changes.\n         * @param args - The change args to pass to subscribers.\n         */ notify (source, args) {\n            /* eslint-disable-next-line @typescript-eslint/no-use-before-define */ getNotifier(source).notify(args);\n        },\n        /**\n         * Defines an observable property on an object or prototype.\n         * @param target - The target object to define the observable on.\n         * @param nameOrAccessor - The name of the property to define as observable;\n         * or a custom accessor that specifies the property name and accessor implementation.\n         */ defineProperty (target, nameOrAccessor) {\n            if ((0, $3b68c0e8977f93f3$export$844ec244b1367d54)(nameOrAccessor)) nameOrAccessor = new DefaultObservableAccessor(nameOrAccessor);\n            getAccessors(target).push(nameOrAccessor);\n            Reflect.defineProperty(target, nameOrAccessor.name, {\n                enumerable: true,\n                get () {\n                    return nameOrAccessor.getValue(this);\n                },\n                set (newValue) {\n                    nameOrAccessor.setValue(this, newValue);\n                }\n            });\n        },\n        getAccessors: /**\n         * Finds all the observable accessors defined on the target,\n         * including its prototype chain.\n         * @param target - The target object to search for accessor on.\n         */ getAccessors,\n        /**\n         * Creates a {@link ExpressionNotifier} that can watch the\n         * provided {@link Expression} for changes.\n         * @param expression - The binding to observe.\n         * @param initialSubscriber - An initial subscriber to changes in the binding value.\n         * @param isVolatileBinding - Indicates whether the binding's dependency list must be re-evaluated on every value evaluation.\n         */ binding (expression, initialSubscriber, isVolatileBinding = this.isVolatileBinding(expression)) {\n            return new ExpressionNotifierImplementation(expression, initialSubscriber, isVolatileBinding);\n        },\n        /**\n         * Determines whether a binding expression is volatile and needs to have its dependency list re-evaluated\n         * on every evaluation of the value.\n         * @param expression - The binding to inspect.\n         */ isVolatileBinding (expression) {\n            return volatileRegex.test(expression.toString());\n        }\n    });\n});\nfunction $11afc8bee2de7865$export$5ab46cbf6120b33a(target, nameOrAccessor) {\n    $11afc8bee2de7865$export$77cea355fa80b5f4.defineProperty(target, nameOrAccessor);\n}\nfunction $11afc8bee2de7865$export$e338fff42eed603a(target, name, descriptor) {\n    return Object.assign({}, descriptor, {\n        get () {\n            $11afc8bee2de7865$export$77cea355fa80b5f4.trackVolatile();\n            return descriptor.get.apply(this);\n        }\n    });\n}\nconst $11afc8bee2de7865$var$contextEvent = (0, $3cd519730db4770f$export$360e186c37756536).getById((0, $3b68c0e8977f93f3$export$f2080b9a9a32b8d3).contextEvent, ()=>{\n    let current = null;\n    return {\n        get () {\n            return current;\n        },\n        set (event) {\n            current = event;\n        }\n    };\n});\nconst $11afc8bee2de7865$export$f7c638676c8af91d = Object.freeze({\n    /**\n     * A default execution context.\n     */ default: {\n        index: 0,\n        length: 0,\n        get event () {\n            return $11afc8bee2de7865$export$f7c638676c8af91d.getEvent();\n        },\n        eventDetail () {\n            return this.event.detail;\n        },\n        eventTarget () {\n            return this.event.target;\n        }\n    },\n    /**\n     * Gets the current event.\n     * @returns An event object.\n     */ getEvent () {\n        return $11afc8bee2de7865$var$contextEvent.get();\n    },\n    /**\n     * Sets the current event.\n     * @param event - An event object.\n     */ setEvent (event) {\n        $11afc8bee2de7865$var$contextEvent.set(event);\n    }\n});\n\n\n\n\n\n\n\nconst $a73d76e1ed9a350a$export$b0076a1a9e24da9 = Object.freeze({\n    /**\n     * Not aspected.\n     */ none: 0,\n    /**\n     * An attribute.\n     */ attribute: 1,\n    /**\n     * A boolean attribute.\n     */ booleanAttribute: 2,\n    /**\n     * A property.\n     */ property: 3,\n    /**\n     * Content\n     */ content: 4,\n    /**\n     * A token list.\n     */ tokenList: 5,\n    /**\n     * An event.\n     */ event: 6\n});\nconst $a73d76e1ed9a350a$var$createHTML = (html)=>html;\nconst $a73d76e1ed9a350a$var$fastTrustedType = globalThis.trustedTypes ? globalThis.trustedTypes.createPolicy(\"fast-html\", {\n    createHTML: $a73d76e1ed9a350a$var$createHTML\n}) : {\n    createHTML: $a73d76e1ed9a350a$var$createHTML\n};\nlet $a73d76e1ed9a350a$var$defaultPolicy = Object.freeze({\n    createHTML (value) {\n        return $a73d76e1ed9a350a$var$fastTrustedType.createHTML(value);\n    },\n    protect (tagName, aspect, aspectName, sink) {\n        return sink;\n    }\n});\nconst $a73d76e1ed9a350a$var$fastPolicy = $a73d76e1ed9a350a$var$defaultPolicy;\nconst $a73d76e1ed9a350a$export$cb0933279c36a66b = Object.freeze({\n    /**\n     * Gets the dom policy used by the templating system.\n     */ get policy () {\n        return $a73d76e1ed9a350a$var$defaultPolicy;\n    },\n    /**\n     * Sets the dom policy used by the templating system.\n     * @param policy - The policy to set.\n     * @remarks\n     * This API can only be called once, for security reasons. It should be\n     * called by the application developer at the start of their program.\n     */ setPolicy (value) {\n        if ($a73d76e1ed9a350a$var$defaultPolicy !== $a73d76e1ed9a350a$var$fastPolicy) throw (0, $3cd519730db4770f$export$360e186c37756536).error(1201 /* Message.onlySetDOMPolicyOnce */ );\n        $a73d76e1ed9a350a$var$defaultPolicy = value;\n    },\n    /**\n     * Sets an attribute value on an element.\n     * @param element - The element to set the attribute value on.\n     * @param attributeName - The attribute name to set.\n     * @param value - The value of the attribute to set.\n     * @remarks\n     * If the value is `null` or `undefined`, the attribute is removed, otherwise\n     * it is set to the provided value using the standard `setAttribute` API.\n     */ setAttribute (element, attributeName, value) {\n        value === null || value === undefined ? element.removeAttribute(attributeName) : element.setAttribute(attributeName, value);\n    },\n    /**\n     * Sets a boolean attribute value.\n     * @param element - The element to set the boolean attribute value on.\n     * @param attributeName - The attribute name to set.\n     * @param value - The value of the attribute to set.\n     * @remarks\n     * If the value is true, the attribute is added; otherwise it is removed.\n     */ setBooleanAttribute (element, attributeName, value) {\n        value ? element.setAttribute(attributeName, \"\") : element.removeAttribute(attributeName);\n    }\n});\n\n\n\nconst $d78e6668348adb99$var$booleanMode = \"boolean\";\nconst $d78e6668348adb99$var$reflectMode = \"reflect\";\nconst $d78e6668348adb99$export$8b80b92e472f3c0a = Object.freeze({\n    /**\n     * Locates all attribute configurations associated with a type.\n     */ locate: (0, $3cd519730db4770f$export$df500aa24c905daf)()\n});\nconst $d78e6668348adb99$export$2aee1c8d7bab360b = {\n    toView (value) {\n        return value ? \"true\" : \"false\";\n    },\n    fromView (value) {\n        return value === null || value === void 0 || value === \"false\" || value === false || value === 0 ? false : true;\n    }\n};\nconst $d78e6668348adb99$export$c195e92e334d543a = {\n    toView (value) {\n        return typeof value === \"boolean\" ? value.toString() : \"\";\n    },\n    fromView (value) {\n        return [\n            null,\n            undefined,\n            void 0\n        ].includes(value) ? null : $d78e6668348adb99$export$2aee1c8d7bab360b.fromView(value);\n    }\n};\nfunction $d78e6668348adb99$var$toNumber(value) {\n    if (value === null || value === undefined) return null;\n    const number = value * 1;\n    return isNaN(number) ? null : number;\n}\nconst $d78e6668348adb99$export$b8946e3c7da4292e = {\n    toView (value) {\n        const output = $d78e6668348adb99$var$toNumber(value);\n        return output ? output.toString() : output;\n    },\n    fromView: $d78e6668348adb99$var$toNumber\n};\nclass $d78e6668348adb99$export$722ab06c0d846d74 {\n    /**\n     * Creates an instance of AttributeDefinition.\n     * @param Owner - The class constructor that owns this attribute.\n     * @param name - The name of the property associated with the attribute.\n     * @param attribute - The name of the attribute in HTML.\n     * @param mode - The {@link AttributeMode} that describes the behavior of this attribute.\n     * @param converter - A {@link ValueConverter} that integrates with the property getter/setter\n     * to convert values to and from a DOM string.\n     */ constructor(Owner, name, attribute = name.toLowerCase(), mode = $d78e6668348adb99$var$reflectMode, converter){\n        this.guards = new Set();\n        this.Owner = Owner;\n        this.name = name;\n        this.attribute = attribute;\n        this.mode = mode;\n        this.converter = converter;\n        this.fieldName = `_${name}`;\n        this.callbackName = `${name}Changed`;\n        this.hasCallback = this.callbackName in Owner.prototype;\n        if (mode === $d78e6668348adb99$var$booleanMode && converter === void 0) this.converter = $d78e6668348adb99$export$2aee1c8d7bab360b;\n    }\n    /**\n     * Sets the value of the attribute/property on the source element.\n     * @param source - The source element to access.\n     * @param value - The value to set the attribute/property to.\n     */ setValue(source, newValue) {\n        const oldValue = source[this.fieldName];\n        const converter = this.converter;\n        if (converter !== void 0) newValue = converter.fromView(newValue);\n        if (oldValue !== newValue) {\n            source[this.fieldName] = newValue;\n            this.tryReflectToAttribute(source);\n            if (this.hasCallback) source[this.callbackName](oldValue, newValue);\n            source.$fastController.notify(this.name);\n        }\n    }\n    /**\n     * Gets the value of the attribute/property on the source element.\n     * @param source - The source element to access.\n     */ getValue(source) {\n        (0, $11afc8bee2de7865$export$77cea355fa80b5f4).track(source, this.name);\n        return source[this.fieldName];\n    }\n    /** @internal */ onAttributeChangedCallback(element, value) {\n        if (this.guards.has(element)) return;\n        this.guards.add(element);\n        this.setValue(element, value);\n        this.guards.delete(element);\n    }\n    tryReflectToAttribute(element) {\n        const mode = this.mode;\n        const guards = this.guards;\n        if (guards.has(element) || mode === \"fromView\") return;\n        (0, $d0b09140ab7069d2$export$26ef613a0934aa5f).enqueue(()=>{\n            guards.add(element);\n            const latestValue = element[this.fieldName];\n            switch(mode){\n                case $d78e6668348adb99$var$reflectMode:\n                    const converter = this.converter;\n                    (0, $a73d76e1ed9a350a$export$cb0933279c36a66b).setAttribute(element, this.attribute, converter !== void 0 ? converter.toView(latestValue) : latestValue);\n                    break;\n                case $d78e6668348adb99$var$booleanMode:\n                    (0, $a73d76e1ed9a350a$export$cb0933279c36a66b).setBooleanAttribute(element, this.attribute, latestValue);\n                    break;\n            }\n            guards.delete(element);\n        });\n    }\n    /**\n     * Collects all attribute definitions associated with the owner.\n     * @param Owner - The class constructor to collect attribute for.\n     * @param attributeLists - Any existing attributes to collect and merge with those associated with the owner.\n     * @internal\n     */ static collect(Owner, ...attributeLists) {\n        const attributes = [];\n        attributeLists.push($d78e6668348adb99$export$8b80b92e472f3c0a.locate(Owner));\n        for(let i = 0, ii = attributeLists.length; i < ii; ++i){\n            const list = attributeLists[i];\n            if (list === void 0) continue;\n            for(let j = 0, jj = list.length; j < jj; ++j){\n                const config = list[j];\n                if ((0, $3b68c0e8977f93f3$export$844ec244b1367d54)(config)) attributes.push(new $d78e6668348adb99$export$722ab06c0d846d74(Owner, config));\n                else attributes.push(new $d78e6668348adb99$export$722ab06c0d846d74(Owner, config.property, config.attribute, config.mode, config.converter));\n            }\n        }\n        return attributes;\n    }\n}\nfunction $d78e6668348adb99$export$7aabe8b3a840d2fd(configOrTarget, prop) {\n    let config;\n    function decorator($target, $prop) {\n        if (arguments.length > 1) // Non invocation:\n        // - @attr\n        // Invocation with or w/o opts:\n        // - @attr()\n        // - @attr({...opts})\n        config.property = $prop;\n        $d78e6668348adb99$export$8b80b92e472f3c0a.locate($target.constructor).push(config);\n    }\n    if (arguments.length > 1) {\n        // Non invocation:\n        // - @attr\n        config = {};\n        decorator(configOrTarget, prop);\n        return;\n    }\n    // Invocation with or w/o opts:\n    // - @attr()\n    // - @attr({...opts})\n    config = configOrTarget === void 0 ? {} : configOrTarget;\n    return decorator;\n}\n\n/**\n * Captures a binding expression along with related information and capabilities.\n *\n * @public\n */ class $90d39a98aede8ee9$export$f4f50f872cf9bd86 {\n    /**\n     * Creates a binding.\n     * @param evaluate - Evaluates the binding.\n     * @param policy - The security policy to associate with this binding.\n     * @param isVolatile - Indicates whether the binding is volatile.\n     */ constructor(evaluate, policy, isVolatile = false){\n        this.evaluate = evaluate;\n        this.policy = policy;\n        this.isVolatile = isVolatile;\n    }\n}\n\n\n\n\nconst $b65473616eab8774$var$marker = `fast-${Math.random().toString(36).substring(2, 8)}`;\nconst $b65473616eab8774$var$interpolationStart = `${$b65473616eab8774$var$marker}{`;\nconst $b65473616eab8774$var$interpolationEnd = `}${$b65473616eab8774$var$marker}`;\nconst $b65473616eab8774$var$interpolationEndLength = $b65473616eab8774$var$interpolationEnd.length;\nlet $b65473616eab8774$var$id = 0;\nconst $b65473616eab8774$export$79a1817568da084b = ()=>`${$b65473616eab8774$var$marker}-${++$b65473616eab8774$var$id}`;\nconst $b65473616eab8774$export$b925b7ba50a6200f = Object.freeze({\n    /**\n     * Creates a placeholder string suitable for marking out a location *within*\n     * an attribute value or HTML content.\n     * @param index - The directive index to create the placeholder for.\n     * @remarks\n     * Used internally by binding directives.\n     */ interpolation: (id)=>`${$b65473616eab8774$var$interpolationStart}${id}${$b65473616eab8774$var$interpolationEnd}`,\n    /**\n     * Creates a placeholder that manifests itself as an attribute on an\n     * element.\n     * @param attributeName - The name of the custom attribute.\n     * @param index - The directive index to create the placeholder for.\n     * @remarks\n     * Used internally by attribute directives such as `ref`, `slotted`, and `children`.\n     */ attribute: (id)=>`${$b65473616eab8774$export$79a1817568da084b()}=\"${$b65473616eab8774$var$interpolationStart}${id}${$b65473616eab8774$var$interpolationEnd}\"`,\n    /**\n     * Creates a placeholder that manifests itself as a marker within the DOM structure.\n     * @param index - The directive index to create the placeholder for.\n     * @remarks\n     * Used internally by structural directives such as `repeat`.\n     */ comment: (id)=>`<!--${$b65473616eab8774$var$interpolationStart}${id}${$b65473616eab8774$var$interpolationEnd}-->`\n});\nconst $b65473616eab8774$export$7acfa6ed01010e37 = Object.freeze({\n    /**\n     * Parses text content or HTML attribute content, separating out the static strings\n     * from the directives.\n     * @param value - The content or attribute string to parse.\n     * @param factories - A list of directives to search for in the string.\n     * @returns A heterogeneous array of static strings interspersed with\n     * directives or null if no directives are found in the string.\n     */ parse (value, factories) {\n        const parts = value.split($b65473616eab8774$var$interpolationStart);\n        if (parts.length === 1) return null;\n        const result = [];\n        for(let i = 0, ii = parts.length; i < ii; ++i){\n            const current = parts[i];\n            const index = current.indexOf($b65473616eab8774$var$interpolationEnd);\n            let literal;\n            if (index === -1) literal = current;\n            else {\n                const factoryId = current.substring(0, index);\n                result.push(factories[factoryId]);\n                literal = current.substring(index + $b65473616eab8774$var$interpolationEndLength);\n            }\n            if (literal !== \"\") result.push(literal);\n        }\n        return result;\n    }\n});\n\n\nconst $cc34801bb3d5b869$var$registry = (0, $3cd519730db4770f$export$a31396a98752ddb5)();\nconst $cc34801bb3d5b869$export$3b3d5ef3c555d599 = Object.freeze({\n    /**\n     * Gets the directive definition associated with the instance.\n     * @param instance - The directive instance to retrieve the definition for.\n     */ getForInstance: $cc34801bb3d5b869$var$registry.getForInstance,\n    /**\n     * Gets the directive definition associated with the specified type.\n     * @param type - The directive type to retrieve the definition for.\n     */ getByType: $cc34801bb3d5b869$var$registry.getByType,\n    /**\n     * Defines an HTMLDirective based on the options.\n     * @param type - The type to define as a directive.\n     * @param options - Options that specify the directive's application.\n     */ define (type, options) {\n        options = options || {};\n        options.type = type;\n        $cc34801bb3d5b869$var$registry.register(options);\n        return type;\n    },\n    /**\n     *\n     * @param directive - The directive to assign the aspect to.\n     * @param value - The value to base the aspect determination on.\n     * @remarks\n     * If a falsy value is provided, then the content aspect will be assigned.\n     */ assignAspect (directive, value) {\n        if (!value) {\n            directive.aspectType = (0, $a73d76e1ed9a350a$export$b0076a1a9e24da9).content;\n            return;\n        }\n        directive.sourceAspect = value;\n        switch(value[0]){\n            case \":\":\n                directive.targetAspect = value.substring(1);\n                directive.aspectType = directive.targetAspect === \"classList\" ? (0, $a73d76e1ed9a350a$export$b0076a1a9e24da9).tokenList : (0, $a73d76e1ed9a350a$export$b0076a1a9e24da9).property;\n                break;\n            case \"?\":\n                directive.targetAspect = value.substring(1);\n                directive.aspectType = (0, $a73d76e1ed9a350a$export$b0076a1a9e24da9).booleanAttribute;\n                break;\n            case \"@\":\n                directive.targetAspect = value.substring(1);\n                directive.aspectType = (0, $a73d76e1ed9a350a$export$b0076a1a9e24da9).event;\n                break;\n            default:\n                directive.targetAspect = value;\n                directive.aspectType = (0, $a73d76e1ed9a350a$export$b0076a1a9e24da9).attribute;\n                break;\n        }\n    }\n});\nfunction $cc34801bb3d5b869$export$9ec0abe690dab1c4(options) {\n    /* eslint-disable-next-line @typescript-eslint/explicit-function-return-type */ return function(type) {\n        $cc34801bb3d5b869$export$3b3d5ef3c555d599.define(type, options);\n    };\n}\nclass $cc34801bb3d5b869$export$683728dd3b823b8d {\n    /**\n     * Creates an instance of RefDirective.\n     * @param options - The options to use in configuring the directive.\n     */ constructor(options){\n        this.options = options;\n    }\n    /**\n     * Creates a placeholder string based on the directive's index within the template.\n     * @param index - The index of the directive within the template.\n     * @remarks\n     * Creates a custom attribute placeholder.\n     */ createHTML(add) {\n        return (0, $b65473616eab8774$export$b925b7ba50a6200f).attribute(add(this));\n    }\n    /**\n     * Creates a behavior.\n     * @param targets - The targets available for behaviors to be attached to.\n     */ createBehavior() {\n        return this;\n    }\n}\n(0, $3cd519730db4770f$export$997c5e5ecebc1b61)($cc34801bb3d5b869$export$683728dd3b823b8d);\n\n\n\n\nconst $cd46e5ddbf9444c5$var$selectElements = (value)=>value.nodeType === 1;\nconst $cd46e5ddbf9444c5$export$7a5d735b2ab6389d = (selector)=>selector ? (value)=>value.nodeType === 1 && value.matches(selector) : $cd46e5ddbf9444c5$var$selectElements;\nclass $cd46e5ddbf9444c5$export$755ec928f38200a4 extends (0, $cc34801bb3d5b869$export$683728dd3b823b8d) {\n    /**\n     * The unique id of the factory.\n     */ get id() {\n        return this._id;\n    }\n    set id(value) {\n        this._id = value;\n        this._controllerProperty = `${value}-c`;\n    }\n    /**\n     * Bind this behavior to the source.\n     * @param source - The source to bind to.\n     * @param context - The execution context that the binding is operating within.\n     * @param targets - The targets that behaviors in a view can attach to.\n     */ bind(controller) {\n        const target = controller.targets[this.targetNodeId];\n        target[this._controllerProperty] = controller;\n        this.updateTarget(controller.source, this.computeNodes(target));\n        this.observe(target);\n        controller.onUnbind(this);\n    }\n    /**\n     * Unbinds this behavior from the source.\n     * @param source - The source to unbind from.\n     * @param context - The execution context that the binding is operating within.\n     * @param targets - The targets that behaviors in a view can attach to.\n     */ unbind(controller) {\n        const target = controller.targets[this.targetNodeId];\n        this.updateTarget(controller.source, (0, $3cd519730db4770f$export$d3ae4127996a91af));\n        this.disconnect(target);\n        target[this._controllerProperty] = null;\n    }\n    /**\n     * Gets the data source for the target.\n     * @param target - The target to get the source for.\n     * @returns The source.\n     */ getSource(target) {\n        return target[this._controllerProperty].source;\n    }\n    /**\n     * Updates the source property with the computed nodes.\n     * @param source - The source object to assign the nodes property to.\n     * @param value - The nodes to assign to the source object property.\n     */ updateTarget(source, value) {\n        source[this.options.property] = value;\n    }\n    /**\n     * Computes the set of nodes that should be assigned to the source property.\n     * @param target - The target to compute the nodes for.\n     * @returns The computed nodes.\n     * @remarks\n     * Applies filters if provided.\n     */ computeNodes(target) {\n        let nodes = this.getNodes(target);\n        if (\"filter\" in this.options) nodes = nodes.filter(this.options.filter);\n        return nodes;\n    }\n}\n\n\nclass $355868edc94eec3f$export$8e0d942365449f1b extends (0, $cd46e5ddbf9444c5$export$755ec928f38200a4) {\n    /**\n     * Creates an instance of ChildrenDirective.\n     * @param options - The options to use in configuring the child observation behavior.\n     */ constructor(options){\n        super(options);\n        this.observerProperty = Symbol();\n        this.handleEvent = (mutations, observer)=>{\n            const target = observer.target;\n            this.updateTarget(this.getSource(target), this.computeNodes(target));\n        };\n        options.childList = true;\n    }\n    /**\n     * Begins observation of the nodes.\n     * @param target - The target to observe.\n     */ observe(target) {\n        let observer = target[this.observerProperty];\n        if (!observer) {\n            observer = new MutationObserver(this.handleEvent);\n            observer.toJSON = (0, $3b68c0e8977f93f3$export$8793edee2d425525);\n            target[this.observerProperty] = observer;\n        }\n        observer.target = target;\n        observer.observe(target, this.options);\n    }\n    /**\n     * Disconnects observation of the nodes.\n     * @param target - The target to unobserve.\n     */ disconnect(target) {\n        const observer = target[this.observerProperty];\n        observer.target = null;\n        observer.disconnect();\n    }\n    /**\n     * Retrieves the raw nodes that should be assigned to the source property.\n     * @param target - The target to get the node to.\n     */ getNodes(target) {\n        if (\"selector\" in this.options) return Array.from(target.querySelectorAll(this.options.selector));\n        return Array.from(target.childNodes);\n    }\n}\n(0, $cc34801bb3d5b869$export$3b3d5ef3c555d599).define($355868edc94eec3f$export$8e0d942365449f1b);\nfunction $355868edc94eec3f$export$bacb5cc5a11aef16(propertyOrOptions) {\n    if ((0, $3b68c0e8977f93f3$export$844ec244b1367d54)(propertyOrOptions)) propertyOrOptions = {\n        property: propertyOrOptions\n    };\n    return new $355868edc94eec3f$export$8e0d942365449f1b(propertyOrOptions);\n}\n\n\n\n\n\nclass $e5081770006036c8$var$OneWayBinding extends (0, $90d39a98aede8ee9$export$f4f50f872cf9bd86) {\n    createObserver(subscriber) {\n        return (0, $11afc8bee2de7865$export$77cea355fa80b5f4).binding(this.evaluate, subscriber, this.isVolatile);\n    }\n}\nfunction $e5081770006036c8$export$d013c21e6c7cf47e(expression, policy, isVolatile = (0, $11afc8bee2de7865$export$77cea355fa80b5f4).isVolatileBinding(expression)) {\n    return new $e5081770006036c8$var$OneWayBinding(expression, policy, isVolatile);\n}\nfunction $e5081770006036c8$export$ef13bcb366f2e9af(expression, options) {\n    const config = new $e5081770006036c8$var$OneWayBinding(expression);\n    config.options = options;\n    return config;\n}\n\n\n\nconst $edde11c6a7f3b16f$var$registry = (0, $3cd519730db4770f$export$a31396a98752ddb5)();\nconst $edde11c6a7f3b16f$export$c6882ecf5b9a1390 = Object.freeze({\n    /**\n     * Gets the directive definition associated with the instance.\n     * @param instance - The directive instance to retrieve the definition for.\n     */ getForInstance: $edde11c6a7f3b16f$var$registry.getForInstance,\n    /**\n     * Gets the directive definition associated with the specified type.\n     * @param type - The directive type to retrieve the definition for.\n     */ getByType: $edde11c6a7f3b16f$var$registry.getByType,\n    /**\n     * Defines a CSSDirective.\n     * @param type - The type to define as a directive.\n     */ define (type) {\n        $edde11c6a7f3b16f$var$registry.register({\n            type: type\n        });\n        return type;\n    }\n});\nfunction $edde11c6a7f3b16f$export$1d63d97c95a198b2() {\n    /* eslint-disable-next-line @typescript-eslint/explicit-function-return-type */ return function(type) {\n        $edde11c6a7f3b16f$export$c6882ecf5b9a1390.define(type);\n    };\n}\n\n\nlet $d0c4de69aef7cbef$var$DefaultStyleStrategy;\nfunction $d0c4de69aef7cbef$var$reduceStyles(styles) {\n    return styles.map((x)=>x instanceof $d0c4de69aef7cbef$export$5cb32fda821782e2 ? $d0c4de69aef7cbef$var$reduceStyles(x.styles) : [\n            x\n        ]).reduce((prev, curr)=>prev.concat(curr), []);\n}\nclass $d0c4de69aef7cbef$export$5cb32fda821782e2 {\n    /**\n     * Creates an instance of ElementStyles.\n     * @param styles - The styles that will be associated with elements.\n     */ constructor(styles){\n        this.styles = styles;\n        this.targets = new WeakSet();\n        this._strategy = null;\n        this.behaviors = styles.map((x)=>x instanceof $d0c4de69aef7cbef$export$5cb32fda821782e2 ? x.behaviors : null).reduce((prev, curr)=>curr === null ? prev : prev === null ? curr : prev.concat(curr), null);\n    }\n    /**\n     * Gets the StyleStrategy associated with these element styles.\n     */ get strategy() {\n        if (this._strategy === null) this.withStrategy($d0c4de69aef7cbef$var$DefaultStyleStrategy);\n        return this._strategy;\n    }\n    /** @internal */ addStylesTo(target) {\n        this.strategy.addStylesTo(target);\n        this.targets.add(target);\n    }\n    /** @internal */ removeStylesFrom(target) {\n        this.strategy.removeStylesFrom(target);\n        this.targets.delete(target);\n    }\n    /** @internal */ isAttachedTo(target) {\n        return this.targets.has(target);\n    }\n    /**\n     * Associates behaviors with this set of styles.\n     * @param behaviors - The behaviors to associate.\n     */ withBehaviors(...behaviors) {\n        this.behaviors = this.behaviors === null ? behaviors : this.behaviors.concat(behaviors);\n        return this;\n    }\n    /**\n     * Sets the strategy that handles adding/removing these styles for an element.\n     * @param strategy - The strategy to use.\n     */ withStrategy(Strategy) {\n        this._strategy = new Strategy($d0c4de69aef7cbef$var$reduceStyles(this.styles));\n        return this;\n    }\n    /**\n     * Sets the default strategy type to use when creating style strategies.\n     * @param Strategy - The strategy type to construct.\n     */ static setDefaultStrategy(Strategy) {\n        $d0c4de69aef7cbef$var$DefaultStyleStrategy = Strategy;\n    }\n    /**\n     * Normalizes a set of composable style options.\n     * @param styles - The style options to normalize.\n     * @returns A singular ElementStyles instance or undefined.\n     */ static normalize(styles) {\n        return styles === void 0 ? void 0 : Array.isArray(styles) ? new $d0c4de69aef7cbef$export$5cb32fda821782e2(styles) : styles instanceof $d0c4de69aef7cbef$export$5cb32fda821782e2 ? styles : new $d0c4de69aef7cbef$export$5cb32fda821782e2([\n            styles\n        ]);\n    }\n}\n/**\n * Indicates whether the DOM supports the adoptedStyleSheets feature.\n */ $d0c4de69aef7cbef$export$5cb32fda821782e2.supportsAdoptedStyleSheets = Array.isArray(document.adoptedStyleSheets) && \"replace\" in CSSStyleSheet.prototype;\n\n\n\nfunction $8a2daa2cdb630d6b$var$handleChange(directive, controller, observer) {\n    controller.source.style.setProperty(directive.targetAspect, observer.bind(controller));\n}\nclass $8a2daa2cdb630d6b$export$a4f733160e5c8f6c {\n    /**\n     * Creates an instance of CSSBindingDirective.\n     * @param dataBinding - The binding to use in CSS.\n     * @param targetAspect - The CSS property to target.\n     */ constructor(dataBinding, targetAspect){\n        this.dataBinding = dataBinding;\n        this.targetAspect = targetAspect;\n    }\n    /**\n     * Creates a CSS fragment to interpolate into the CSS document.\n     * @returns - the string to interpolate into CSS\n     */ createCSS(add) {\n        add(this);\n        return `var(${this.targetAspect})`;\n    }\n    /**\n     * Executed when this behavior is attached to a controller.\n     * @param controller - Controls the behavior lifecycle.\n     */ addedCallback(controller) {\n        var _a;\n        const element = controller.source;\n        if (!element.$cssBindings) {\n            element.$cssBindings = new Map();\n            const setAttribute = element.setAttribute;\n            element.setAttribute = (attr, value)=>{\n                setAttribute.call(element, attr, value);\n                if (attr === \"style\") element.$cssBindings.forEach((v, k)=>$8a2daa2cdb630d6b$var$handleChange(k, v.controller, v.observer));\n            };\n        }\n        const observer = (_a = controller[this.targetAspect]) !== null && _a !== void 0 ? _a : controller[this.targetAspect] = this.dataBinding.createObserver(this, this);\n        observer.controller = controller;\n        controller.source.$cssBindings.set(this, {\n            controller: controller,\n            observer: observer\n        });\n    }\n    /**\n     * Executed when this behavior's host is connected.\n     * @param controller - Controls the behavior lifecycle.\n     */ connectedCallback(controller) {\n        $8a2daa2cdb630d6b$var$handleChange(this, controller, controller[this.targetAspect]);\n    }\n    /**\n     * Executed when this behavior is detached from a controller.\n     * @param controller - Controls the behavior lifecycle.\n     */ removedCallback(controller) {\n        if (controller.source.$cssBindings) controller.source.$cssBindings.delete(this);\n    }\n    /**\n     * Called when a subject this instance has subscribed to changes.\n     * @param subject - The subject of the change.\n     * @param args - The event args detailing the change that occurred.\n     *\n     * @internal\n     */ handleChange(_, observer) {\n        $8a2daa2cdb630d6b$var$handleChange(this, observer.controller, observer);\n    }\n}\n(0, $edde11c6a7f3b16f$export$c6882ecf5b9a1390).define($8a2daa2cdb630d6b$export$a4f733160e5c8f6c);\n\n\nconst $980f24b602662b21$var$marker = `${Math.random().toString(36).substring(2, 8)}`;\nlet $980f24b602662b21$var$varId = 0;\nconst $980f24b602662b21$var$nextCSSVariable = ()=>`--v${$980f24b602662b21$var$marker}${++$980f24b602662b21$var$varId}`;\nfunction $980f24b602662b21$var$collectStyles(strings, values) {\n    const styles = [];\n    let cssString = \"\";\n    const behaviors = [];\n    const add = (behavior)=>{\n        behaviors.push(behavior);\n    };\n    for(let i = 0, ii = strings.length - 1; i < ii; ++i){\n        cssString += strings[i];\n        let value = values[i];\n        if ((0, $3b68c0e8977f93f3$export$f6e2535fb5126e54)(value)) value = new (0, $8a2daa2cdb630d6b$export$a4f733160e5c8f6c)((0, $e5081770006036c8$export$d013c21e6c7cf47e)(value), $980f24b602662b21$var$nextCSSVariable()).createCSS(add);\n        else if (value instanceof (0, $90d39a98aede8ee9$export$f4f50f872cf9bd86)) value = new (0, $8a2daa2cdb630d6b$export$a4f733160e5c8f6c)(value, $980f24b602662b21$var$nextCSSVariable()).createCSS(add);\n        else if ((0, $edde11c6a7f3b16f$export$c6882ecf5b9a1390).getForInstance(value) !== void 0) value = value.createCSS(add);\n        if (value instanceof (0, $d0c4de69aef7cbef$export$5cb32fda821782e2) || value instanceof CSSStyleSheet) {\n            if (cssString.trim() !== \"\") {\n                styles.push(cssString);\n                cssString = \"\";\n            }\n            styles.push(value);\n        } else cssString += value;\n    }\n    cssString += strings[strings.length - 1];\n    if (cssString.trim() !== \"\") styles.push(cssString);\n    return {\n        styles: styles,\n        behaviors: behaviors\n    };\n}\nconst $980f24b602662b21$export$dbf350e5966cf602 = (strings, ...values)=>{\n    const { styles: styles, behaviors: behaviors } = $980f24b602662b21$var$collectStyles(strings, values);\n    const elementStyles = new (0, $d0c4de69aef7cbef$export$5cb32fda821782e2)(styles);\n    return behaviors.length ? elementStyles.withBehaviors(...behaviors) : elementStyles;\n};\nclass $980f24b602662b21$var$CSSPartial {\n    constructor(styles, behaviors){\n        this.behaviors = behaviors;\n        this.css = \"\";\n        const stylesheets = styles.reduce((accumulated, current)=>{\n            if ((0, $3b68c0e8977f93f3$export$844ec244b1367d54)(current)) this.css += current;\n            else accumulated.push(current);\n            return accumulated;\n        }, []);\n        if (stylesheets.length) this.styles = new (0, $d0c4de69aef7cbef$export$5cb32fda821782e2)(stylesheets);\n    }\n    createCSS(add) {\n        this.behaviors.forEach(add);\n        if (this.styles) add(this);\n        return this.css;\n    }\n    addedCallback(controller) {\n        controller.addStyles(this.styles);\n    }\n    removedCallback(controller) {\n        controller.removeStyles(this.styles);\n    }\n}\n(0, $edde11c6a7f3b16f$export$c6882ecf5b9a1390).define($980f24b602662b21$var$CSSPartial);\n$980f24b602662b21$export$dbf350e5966cf602.partial = (strings, ...values)=>{\n    const { styles: styles, behaviors: behaviors } = $980f24b602662b21$var$collectStyles(strings, values);\n    return new $980f24b602662b21$var$CSSPartial(styles, behaviors);\n};\n\n\n\n\n\n\n\n\n\n\n\n\nconst $86847ab2171a29a7$var$defaultShadowOptions = {\n    mode: \"open\"\n};\nconst $86847ab2171a29a7$var$defaultElementOptions = {};\nconst $86847ab2171a29a7$var$fastElementBaseTypes = new Set();\nconst $86847ab2171a29a7$var$fastElementRegistry = (0, $3cd519730db4770f$export$360e186c37756536).getById((0, $3b68c0e8977f93f3$export$f2080b9a9a32b8d3).elementRegistry, ()=>(0, $3cd519730db4770f$export$a31396a98752ddb5)());\nclass $86847ab2171a29a7$export$dbb8b6d358bc70ba {\n    constructor(type, nameOrConfig = type.definition){\n        var _a;\n        this.platformDefined = false;\n        if ((0, $3b68c0e8977f93f3$export$844ec244b1367d54)(nameOrConfig)) nameOrConfig = {\n            name: nameOrConfig\n        };\n        this.type = type;\n        this.name = nameOrConfig.name;\n        this.template = nameOrConfig.template;\n        this.registry = (_a = nameOrConfig.registry) !== null && _a !== void 0 ? _a : customElements;\n        const proto = type.prototype;\n        const attributes = (0, $d78e6668348adb99$export$722ab06c0d846d74).collect(type, nameOrConfig.attributes);\n        const observedAttributes = new Array(attributes.length);\n        const propertyLookup = {};\n        const attributeLookup = {};\n        for(let i = 0, ii = attributes.length; i < ii; ++i){\n            const current = attributes[i];\n            observedAttributes[i] = current.attribute;\n            propertyLookup[current.name] = current;\n            attributeLookup[current.attribute] = current;\n            (0, $11afc8bee2de7865$export$77cea355fa80b5f4).defineProperty(proto, current);\n        }\n        Reflect.defineProperty(type, \"observedAttributes\", {\n            value: observedAttributes,\n            enumerable: true\n        });\n        this.attributes = attributes;\n        this.propertyLookup = propertyLookup;\n        this.attributeLookup = attributeLookup;\n        this.shadowOptions = nameOrConfig.shadowOptions === void 0 ? $86847ab2171a29a7$var$defaultShadowOptions : nameOrConfig.shadowOptions === null ? void 0 : Object.assign(Object.assign({}, $86847ab2171a29a7$var$defaultShadowOptions), nameOrConfig.shadowOptions);\n        this.elementOptions = nameOrConfig.elementOptions === void 0 ? $86847ab2171a29a7$var$defaultElementOptions : Object.assign(Object.assign({}, $86847ab2171a29a7$var$defaultElementOptions), nameOrConfig.elementOptions);\n        this.styles = (0, $d0c4de69aef7cbef$export$5cb32fda821782e2).normalize(nameOrConfig.styles);\n        $86847ab2171a29a7$var$fastElementRegistry.register(this);\n    }\n    /**\n     * Indicates if this element has been defined in at least one registry.\n     */ get isDefined() {\n        return this.platformDefined;\n    }\n    /**\n     * Defines a custom element based on this definition.\n     * @param registry - The element registry to define the element in.\n     * @remarks\n     * This operation is idempotent per registry.\n     */ define(registry = this.registry) {\n        const type = this.type;\n        if (!registry.get(this.name)) {\n            this.platformDefined = true;\n            registry.define(this.name, type, this.elementOptions);\n        }\n        return this;\n    }\n    /**\n     * Creates an instance of FASTElementDefinition.\n     * @param type - The type this definition is being created for.\n     * @param nameOrDef - The name of the element to define or a config object\n     * that describes the element to define.\n     */ static compose(type, nameOrDef) {\n        if ($86847ab2171a29a7$var$fastElementBaseTypes.has(type) || $86847ab2171a29a7$var$fastElementRegistry.getByType(type)) return new $86847ab2171a29a7$export$dbb8b6d358bc70ba(class extends type {\n        }, nameOrDef);\n        return new $86847ab2171a29a7$export$dbb8b6d358bc70ba(type, nameOrDef);\n    }\n    /**\n     * Registers a FASTElement base type.\n     * @param type - The type to register as a base type.\n     * @internal\n     */ static registerBaseType(type) {\n        $86847ab2171a29a7$var$fastElementBaseTypes.add(type);\n    }\n}\n/**\n * Gets the element definition associated with the specified type.\n * @param type - The custom element type to retrieve the definition for.\n */ $86847ab2171a29a7$export$dbb8b6d358bc70ba.getByType = $86847ab2171a29a7$var$fastElementRegistry.getByType;\n/**\n * Gets the element definition associated with the instance.\n * @param instance - The custom element instance to retrieve the definition for.\n */ $86847ab2171a29a7$export$dbb8b6d358bc70ba.getForInstance = $86847ab2171a29a7$var$fastElementRegistry.getForInstance;\n\n\nconst $900ecc1621c31c17$var$defaultEventOptions = {\n    bubbles: true,\n    composed: true,\n    cancelable: true\n};\nconst $900ecc1621c31c17$var$isConnectedPropertyName = \"isConnected\";\nconst $900ecc1621c31c17$var$shadowRoots = new WeakMap();\nfunction $900ecc1621c31c17$var$getShadowRoot(element) {\n    var _a, _b;\n    return (_b = (_a = element.shadowRoot) !== null && _a !== void 0 ? _a : $900ecc1621c31c17$var$shadowRoots.get(element)) !== null && _b !== void 0 ? _b : null;\n}\nlet $900ecc1621c31c17$var$elementControllerStrategy;\nclass $900ecc1621c31c17$export$c72c0f72b4b26c7e extends (0, $0d21722c4bcdf3f6$export$af6e57f0938b1389) {\n    /**\n     * Creates a Controller to control the specified element.\n     * @param element - The element to be controlled by this controller.\n     * @param definition - The element definition metadata that instructs this\n     * controller in how to handle rendering and other platform integrations.\n     * @internal\n     */ constructor(element, definition){\n        super(element);\n        this.boundObservables = null;\n        this.needsInitialization = true;\n        this.hasExistingShadowRoot = false;\n        this._template = null;\n        this.stage = 3 /* Stages.disconnected */ ;\n        /**\n         * A guard against connecting behaviors multiple times\n         * during connect in scenarios where a behavior adds\n         * another behavior during it's connectedCallback\n         */ this.guardBehaviorConnection = false;\n        this.behaviors = null;\n        this._mainStyles = null;\n        /**\n         * This allows Observable.getNotifier(...) to return the Controller\n         * when the notifier for the Controller itself is being requested. The\n         * result is that the Observable system does not need to create a separate\n         * instance of Notifier for observables on the Controller. The component and\n         * the controller will now share the same notifier, removing one-object construct\n         * per web component instance.\n         */ this.$fastController = this;\n        /**\n         * The view associated with the custom element.\n         * @remarks\n         * If `null` then the element is managing its own rendering.\n         */ this.view = null;\n        this.source = element;\n        this.definition = definition;\n        const shadowOptions = definition.shadowOptions;\n        if (shadowOptions !== void 0) {\n            let shadowRoot = element.shadowRoot;\n            if (shadowRoot) this.hasExistingShadowRoot = true;\n            else {\n                shadowRoot = element.attachShadow(shadowOptions);\n                if (shadowOptions.mode === \"closed\") $900ecc1621c31c17$var$shadowRoots.set(element, shadowRoot);\n            }\n        }\n        // Capture any observable values that were set by the binding engine before\n        // the browser upgraded the element. Then delete the property since it will\n        // shadow the getter/setter that is required to make the observable operate.\n        // Later, in the connect callback, we'll re-apply the values.\n        const accessors = (0, $11afc8bee2de7865$export$77cea355fa80b5f4).getAccessors(element);\n        if (accessors.length > 0) {\n            const boundObservables = this.boundObservables = Object.create(null);\n            for(let i = 0, ii = accessors.length; i < ii; ++i){\n                const propertyName = accessors[i].name;\n                const value = element[propertyName];\n                if (value !== void 0) {\n                    delete element[propertyName];\n                    boundObservables[propertyName] = value;\n                }\n            }\n        }\n    }\n    /**\n     * Indicates whether or not the custom element has been\n     * connected to the document.\n     */ get isConnected() {\n        (0, $11afc8bee2de7865$export$77cea355fa80b5f4).track(this, $900ecc1621c31c17$var$isConnectedPropertyName);\n        return this.stage === 1 /* Stages.connected */ ;\n    }\n    /**\n     * The context the expression is evaluated against.\n     */ get context() {\n        var _a, _b;\n        return (_b = (_a = this.view) === null || _a === void 0 ? void 0 : _a.context) !== null && _b !== void 0 ? _b : (0, $11afc8bee2de7865$export$f7c638676c8af91d).default;\n    }\n    /**\n     * Indicates whether the controller is bound.\n     */ get isBound() {\n        var _a, _b;\n        return (_b = (_a = this.view) === null || _a === void 0 ? void 0 : _a.isBound) !== null && _b !== void 0 ? _b : false;\n    }\n    /**\n     * Indicates how the source's lifetime relates to the controller's lifetime.\n     */ get sourceLifetime() {\n        var _a;\n        return (_a = this.view) === null || _a === void 0 ? void 0 : _a.sourceLifetime;\n    }\n    /**\n     * Gets/sets the template used to render the component.\n     * @remarks\n     * This value can only be accurately read after connect but can be set at any time.\n     */ get template() {\n        var _a;\n        // 1. Template overrides take top precedence.\n        if (this._template === null) {\n            const definition = this.definition;\n            if (this.source.resolveTemplate) // 2. Allow for element instance overrides next.\n            this._template = this.source.resolveTemplate();\n            else if (definition.template) // 3. Default to the static definition.\n            this._template = (_a = definition.template) !== null && _a !== void 0 ? _a : null;\n        }\n        return this._template;\n    }\n    set template(value) {\n        if (this._template === value) return;\n        this._template = value;\n        if (!this.needsInitialization) this.renderTemplate(value);\n    }\n    /**\n     * The main set of styles used for the component, independent\n     * of any dynamically added styles.\n     */ get mainStyles() {\n        var _a;\n        // 1. Styles overrides take top precedence.\n        if (this._mainStyles === null) {\n            const definition = this.definition;\n            if (this.source.resolveStyles) // 2. Allow for element instance overrides next.\n            this._mainStyles = this.source.resolveStyles();\n            else if (definition.styles) // 3. Default to the static definition.\n            this._mainStyles = (_a = definition.styles) !== null && _a !== void 0 ? _a : null;\n        }\n        return this._mainStyles;\n    }\n    set mainStyles(value) {\n        if (this._mainStyles === value) return;\n        if (this._mainStyles !== null) this.removeStyles(this._mainStyles);\n        this._mainStyles = value;\n        if (!this.needsInitialization) this.addStyles(value);\n    }\n    /**\n     * Registers an unbind handler with the controller.\n     * @param behavior - An object to call when the controller unbinds.\n     */ onUnbind(behavior) {\n        var _a;\n        (_a = this.view) === null || _a === void 0 || _a.onUnbind(behavior);\n    }\n    /**\n     * Adds the behavior to the component.\n     * @param behavior - The behavior to add.\n     */ addBehavior(behavior) {\n        var _a, _b;\n        const targetBehaviors = (_a = this.behaviors) !== null && _a !== void 0 ? _a : this.behaviors = new Map();\n        const count = (_b = targetBehaviors.get(behavior)) !== null && _b !== void 0 ? _b : 0;\n        if (count === 0) {\n            targetBehaviors.set(behavior, 1);\n            behavior.addedCallback && behavior.addedCallback(this);\n            if (behavior.connectedCallback && !this.guardBehaviorConnection && (this.stage === 1 /* Stages.connected */  || this.stage === 0 /* Stages.connecting */ )) behavior.connectedCallback(this);\n        } else targetBehaviors.set(behavior, count + 1);\n    }\n    /**\n     * Removes the behavior from the component.\n     * @param behavior - The behavior to remove.\n     * @param force - Forces removal even if this behavior was added more than once.\n     */ removeBehavior(behavior, force = false) {\n        const targetBehaviors = this.behaviors;\n        if (targetBehaviors === null) return;\n        const count = targetBehaviors.get(behavior);\n        if (count === void 0) return;\n        if (count === 1 || force) {\n            targetBehaviors.delete(behavior);\n            if (behavior.disconnectedCallback && this.stage !== 3 /* Stages.disconnected */ ) behavior.disconnectedCallback(this);\n            behavior.removedCallback && behavior.removedCallback(this);\n        } else targetBehaviors.set(behavior, count - 1);\n    }\n    /**\n     * Adds styles to this element. Providing an HTMLStyleElement will attach the element instance to the shadowRoot.\n     * @param styles - The styles to add.\n     */ addStyles(styles) {\n        var _a;\n        if (!styles) return;\n        const source = this.source;\n        if (styles instanceof HTMLElement) {\n            const target = (_a = $900ecc1621c31c17$var$getShadowRoot(source)) !== null && _a !== void 0 ? _a : this.source;\n            target.append(styles);\n        } else if (!styles.isAttachedTo(source)) {\n            const sourceBehaviors = styles.behaviors;\n            styles.addStylesTo(source);\n            if (sourceBehaviors !== null) for(let i = 0, ii = sourceBehaviors.length; i < ii; ++i)this.addBehavior(sourceBehaviors[i]);\n        }\n    }\n    /**\n     * Removes styles from this element. Providing an HTMLStyleElement will detach the element instance from the shadowRoot.\n     * @param styles - the styles to remove.\n     */ removeStyles(styles) {\n        var _a;\n        if (!styles) return;\n        const source = this.source;\n        if (styles instanceof HTMLElement) {\n            const target = (_a = $900ecc1621c31c17$var$getShadowRoot(source)) !== null && _a !== void 0 ? _a : source;\n            target.removeChild(styles);\n        } else if (styles.isAttachedTo(source)) {\n            const sourceBehaviors = styles.behaviors;\n            styles.removeStylesFrom(source);\n            if (sourceBehaviors !== null) for(let i = 0, ii = sourceBehaviors.length; i < ii; ++i)this.removeBehavior(sourceBehaviors[i]);\n        }\n    }\n    /**\n     * Runs connected lifecycle behavior on the associated element.\n     */ connect() {\n        if (this.stage !== 3 /* Stages.disconnected */ ) return;\n        this.stage = 0 /* Stages.connecting */ ;\n        // If we have any observables that were bound, re-apply their values.\n        if (this.boundObservables !== null) {\n            const element = this.source;\n            const boundObservables = this.boundObservables;\n            const propertyNames = Object.keys(boundObservables);\n            for(let i = 0, ii = propertyNames.length; i < ii; ++i){\n                const propertyName = propertyNames[i];\n                element[propertyName] = boundObservables[propertyName];\n            }\n            this.boundObservables = null;\n        }\n        const behaviors = this.behaviors;\n        if (behaviors !== null) {\n            this.guardBehaviorConnection = true;\n            for (const key of behaviors.keys())key.connectedCallback && key.connectedCallback(this);\n            this.guardBehaviorConnection = false;\n        }\n        if (this.needsInitialization) {\n            this.renderTemplate(this.template);\n            this.addStyles(this.mainStyles);\n            this.needsInitialization = false;\n        } else if (this.view !== null) this.view.bind(this.source);\n        this.stage = 1 /* Stages.connected */ ;\n        (0, $11afc8bee2de7865$export$77cea355fa80b5f4).notify(this, $900ecc1621c31c17$var$isConnectedPropertyName);\n    }\n    /**\n     * Runs disconnected lifecycle behavior on the associated element.\n     */ disconnect() {\n        if (this.stage !== 1 /* Stages.connected */ ) return;\n        this.stage = 2 /* Stages.disconnecting */ ;\n        (0, $11afc8bee2de7865$export$77cea355fa80b5f4).notify(this, $900ecc1621c31c17$var$isConnectedPropertyName);\n        if (this.view !== null) this.view.unbind();\n        const behaviors = this.behaviors;\n        if (behaviors !== null) for (const key of behaviors.keys())key.disconnectedCallback && key.disconnectedCallback(this);\n        this.stage = 3 /* Stages.disconnected */ ;\n    }\n    /**\n     * Runs the attribute changed callback for the associated element.\n     * @param name - The name of the attribute that changed.\n     * @param oldValue - The previous value of the attribute.\n     * @param newValue - The new value of the attribute.\n     */ onAttributeChangedCallback(name, oldValue, newValue) {\n        const attrDef = this.definition.attributeLookup[name];\n        if (attrDef !== void 0) attrDef.onAttributeChangedCallback(this.source, newValue);\n    }\n    /**\n     * Emits a custom HTML event.\n     * @param type - The type name of the event.\n     * @param detail - The event detail object to send with the event.\n     * @param options - The event options. By default bubbles and composed.\n     * @remarks\n     * Only emits events if connected.\n     */ emit(type, detail, options) {\n        if (this.stage === 1 /* Stages.connected */ ) return this.source.dispatchEvent(new CustomEvent(type, Object.assign(Object.assign({\n            detail: detail\n        }, $900ecc1621c31c17$var$defaultEventOptions), options)));\n        return false;\n    }\n    renderTemplate(template) {\n        var _a;\n        // When getting the host to render to, we start by looking\n        // up the shadow root. If there isn't one, then that means\n        // we're doing a Light DOM render to the element's direct children.\n        const element = this.source;\n        const host = (_a = $900ecc1621c31c17$var$getShadowRoot(element)) !== null && _a !== void 0 ? _a : element;\n        if (this.view !== null) {\n            // If there's already a view, we need to unbind and remove through dispose.\n            this.view.dispose();\n            this.view = null;\n        } else if (!this.needsInitialization || this.hasExistingShadowRoot) {\n            this.hasExistingShadowRoot = false;\n            // If there was previous custom rendering, we need to clear out the host.\n            for(let child = host.firstChild; child !== null; child = host.firstChild)host.removeChild(child);\n        }\n        if (template) {\n            // If a new template was provided, render it.\n            this.view = template.render(element, host, element);\n            this.view.sourceLifetime = (0, $11afc8bee2de7865$export$9a9eae009eb8780f).coupled;\n        }\n    }\n    /**\n     * Locates or creates a controller for the specified element.\n     * @param element - The element to return the controller for.\n     * @remarks\n     * The specified element must have a {@link FASTElementDefinition}\n     * registered either through the use of the {@link customElement}\n     * decorator or a call to `FASTElement.define`.\n     */ static forCustomElement(element) {\n        const controller = element.$fastController;\n        if (controller !== void 0) return controller;\n        const definition = (0, $86847ab2171a29a7$export$dbb8b6d358bc70ba).getForInstance(element);\n        if (definition === void 0) throw (0, $3cd519730db4770f$export$360e186c37756536).error(1401 /* Message.missingElementDefinition */ );\n        return element.$fastController = new $900ecc1621c31c17$var$elementControllerStrategy(element, definition);\n    }\n    /**\n     * Sets the strategy that ElementController.forCustomElement uses to construct\n     * ElementController instances for an element.\n     * @param strategy - The strategy to use.\n     */ static setStrategy(strategy) {\n        $900ecc1621c31c17$var$elementControllerStrategy = strategy;\n    }\n}\n(0, $3cd519730db4770f$export$997c5e5ecebc1b61)($900ecc1621c31c17$export$c72c0f72b4b26c7e);\n// Set default strategy for ElementController\n$900ecc1621c31c17$export$c72c0f72b4b26c7e.setStrategy($900ecc1621c31c17$export$c72c0f72b4b26c7e);\n/**\n * Converts a styleTarget into the operative target. When the provided target is an Element\n * that is a FASTElement, the function will return the ShadowRoot for that element. Otherwise,\n * it will return the root node for the element.\n * @param target\n * @returns\n */ function $900ecc1621c31c17$var$normalizeStyleTarget(target) {\n    var _a;\n    if (\"adoptedStyleSheets\" in target) return target;\n    else return (_a = $900ecc1621c31c17$var$getShadowRoot(target)) !== null && _a !== void 0 ? _a : target.getRootNode();\n}\nclass $900ecc1621c31c17$export$ff9a4b215f625f9a {\n    constructor(styles){\n        const styleSheetCache = $900ecc1621c31c17$export$ff9a4b215f625f9a.styleSheetCache;\n        this.sheets = styles.map((x)=>{\n            if (x instanceof CSSStyleSheet) return x;\n            let sheet = styleSheetCache.get(x);\n            if (sheet === void 0) {\n                sheet = new CSSStyleSheet();\n                sheet.replaceSync(x);\n                styleSheetCache.set(x, sheet);\n            }\n            return sheet;\n        });\n    }\n    addStylesTo(target) {\n        $900ecc1621c31c17$var$addAdoptedStyleSheets($900ecc1621c31c17$var$normalizeStyleTarget(target), this.sheets);\n    }\n    removeStylesFrom(target) {\n        $900ecc1621c31c17$var$removeAdoptedStyleSheets($900ecc1621c31c17$var$normalizeStyleTarget(target), this.sheets);\n    }\n}\n$900ecc1621c31c17$export$ff9a4b215f625f9a.styleSheetCache = new Map();\nlet $900ecc1621c31c17$var$id = 0;\nconst $900ecc1621c31c17$var$nextStyleId = ()=>`fast-${++$900ecc1621c31c17$var$id}`;\nfunction $900ecc1621c31c17$var$usableStyleTarget(target) {\n    return target === document ? document.body : target;\n}\nclass $900ecc1621c31c17$export$e1686a201ec21b22 {\n    constructor(styles){\n        this.styles = styles;\n        this.styleClass = $900ecc1621c31c17$var$nextStyleId();\n    }\n    addStylesTo(target) {\n        target = $900ecc1621c31c17$var$usableStyleTarget($900ecc1621c31c17$var$normalizeStyleTarget(target));\n        const styles = this.styles;\n        const styleClass = this.styleClass;\n        for(let i = 0; i < styles.length; i++){\n            const element = document.createElement(\"style\");\n            element.innerHTML = styles[i];\n            element.className = styleClass;\n            target.append(element);\n        }\n    }\n    removeStylesFrom(target) {\n        target = $900ecc1621c31c17$var$usableStyleTarget($900ecc1621c31c17$var$normalizeStyleTarget(target));\n        const styles = target.querySelectorAll(`.${this.styleClass}`);\n        for(let i = 0, ii = styles.length; i < ii; ++i)target.removeChild(styles[i]);\n    }\n}\nlet $900ecc1621c31c17$var$addAdoptedStyleSheets = (target, sheets)=>{\n    target.adoptedStyleSheets = [\n        ...target.adoptedStyleSheets,\n        ...sheets\n    ];\n};\nlet $900ecc1621c31c17$var$removeAdoptedStyleSheets = (target, sheets)=>{\n    target.adoptedStyleSheets = target.adoptedStyleSheets.filter((x)=>sheets.indexOf(x) === -1);\n};\nif ((0, $d0c4de69aef7cbef$export$5cb32fda821782e2).supportsAdoptedStyleSheets) {\n    try {\n        // Test if browser implementation uses FrozenArray.\n        // If not, use push / splice to alter the stylesheets\n        // in place. This circumvents a bug in Safari 16.4 where\n        // periodically, assigning the array would previously\n        // cause sheets to be removed.\n        document.adoptedStyleSheets.push();\n        document.adoptedStyleSheets.splice();\n        $900ecc1621c31c17$var$addAdoptedStyleSheets = (target, sheets)=>{\n            target.adoptedStyleSheets.push(...sheets);\n        };\n        $900ecc1621c31c17$var$removeAdoptedStyleSheets = (target, sheets)=>{\n            for (const sheet of sheets){\n                const index = target.adoptedStyleSheets.indexOf(sheet);\n                if (index !== -1) target.adoptedStyleSheets.splice(index, 1);\n            }\n        };\n    } catch (e) {\n    // Do nothing if an error is thrown, the default\n    // case handles FrozenArray.\n    }\n    (0, $d0c4de69aef7cbef$export$5cb32fda821782e2).setDefaultStrategy($900ecc1621c31c17$export$ff9a4b215f625f9a);\n} else (0, $d0c4de69aef7cbef$export$5cb32fda821782e2).setDefaultStrategy($900ecc1621c31c17$export$e1686a201ec21b22);\n\n\n\n/* eslint-disable-next-line @typescript-eslint/explicit-function-return-type */ function $718243fe498ffbb9$var$createFASTElement(BaseType) {\n    const type = class extends BaseType {\n        constructor(){\n            /* eslint-disable-next-line */ super();\n            (0, $900ecc1621c31c17$export$c72c0f72b4b26c7e).forCustomElement(this);\n        }\n        $emit(type, detail, options) {\n            return this.$fastController.emit(type, detail, options);\n        }\n        connectedCallback() {\n            this.$fastController.connect();\n        }\n        disconnectedCallback() {\n            this.$fastController.disconnect();\n        }\n        attributeChangedCallback(name, oldValue, newValue) {\n            this.$fastController.onAttributeChangedCallback(name, oldValue, newValue);\n        }\n    };\n    (0, $86847ab2171a29a7$export$dbb8b6d358bc70ba).registerBaseType(type);\n    return type;\n}\nfunction $718243fe498ffbb9$var$compose(type, nameOrDef) {\n    if ((0, $3b68c0e8977f93f3$export$f6e2535fb5126e54)(type)) return (0, $86847ab2171a29a7$export$dbb8b6d358bc70ba).compose(type, nameOrDef);\n    return (0, $86847ab2171a29a7$export$dbb8b6d358bc70ba).compose(this, type);\n}\nfunction $718243fe498ffbb9$var$define(type, nameOrDef) {\n    if ((0, $3b68c0e8977f93f3$export$f6e2535fb5126e54)(type)) return (0, $86847ab2171a29a7$export$dbb8b6d358bc70ba).compose(type, nameOrDef).define().type;\n    return (0, $86847ab2171a29a7$export$dbb8b6d358bc70ba).compose(this, type).define().type;\n}\nfunction $718243fe498ffbb9$var$from(BaseType) {\n    return $718243fe498ffbb9$var$createFASTElement(BaseType);\n}\nconst $718243fe498ffbb9$export$904ba5187827962e = Object.assign($718243fe498ffbb9$var$createFASTElement(HTMLElement), {\n    from: /**\n     * Creates a new FASTElement base class inherited from the\n     * provided base type.\n     * @param BaseType - The base element type to inherit from.\n     */ $718243fe498ffbb9$var$from,\n    define: /**\n     * Defines a platform custom element based on the provided type and definition.\n     * @param type - The custom element type to define.\n     * @param nameOrDef - The name of the element to define or a definition object\n     * that describes the element to define.\n     */ $718243fe498ffbb9$var$define,\n    compose: /**\n     * Defines metadata for a FASTElement which can be used to later define the element.\n     * @public\n     */ $718243fe498ffbb9$var$compose\n});\nfunction $718243fe498ffbb9$export$da64fc29f17f9d0e(nameOrDef) {\n    /* eslint-disable-next-line @typescript-eslint/explicit-function-return-type */ return function(type) {\n        $718243fe498ffbb9$var$define(type, nameOrDef);\n    };\n}\n\n\n\n\n\n\n\nclass $1cb9f88fe9a2a07c$var$OneTimeBinding extends (0, $90d39a98aede8ee9$export$f4f50f872cf9bd86) {\n    createObserver() {\n        return this;\n    }\n    bind(controller) {\n        return this.evaluate(controller.source, controller.context);\n    }\n}\n(0, $3cd519730db4770f$export$997c5e5ecebc1b61)($1cb9f88fe9a2a07c$var$OneTimeBinding);\nfunction $1cb9f88fe9a2a07c$export$62b137a205137697(expression, policy) {\n    return new $1cb9f88fe9a2a07c$var$OneTimeBinding(expression, policy);\n}\n\n\n\n\n\n\n\n\nfunction $3302dfbf2f7c135c$var$updateContent(target, aspect, value, controller) {\n    // If there's no actual value, then this equates to the\n    // empty string for the purposes of content bindings.\n    if (value === null || value === undefined) value = \"\";\n    // If the value has a \"create\" method, then it's a ContentTemplate.\n    if (value.create) {\n        target.textContent = \"\";\n        let view = target.$fastView;\n        // If there's no previous view that we might be able to\n        // reuse then create a new view from the template.\n        if (view === void 0) view = value.create();\n        else // If there is a previous view, but it wasn't created\n        // from the same template as the new value, then we\n        // need to remove the old view if it's still in the DOM\n        // and create a new view from the template.\n        if (target.$fastTemplate !== value) {\n            if (view.isComposed) {\n                view.remove();\n                view.unbind();\n            }\n            view = value.create();\n        }\n        // It's possible that the value is the same as the previous template\n        // and that there's actually no need to compose it.\n        if (!view.isComposed) {\n            view.isComposed = true;\n            view.bind(controller.source, controller.context);\n            view.insertBefore(target);\n            target.$fastView = view;\n            target.$fastTemplate = value;\n        } else if (view.needsBindOnly) {\n            view.needsBindOnly = false;\n            view.bind(controller.source, controller.context);\n        }\n    } else {\n        const view = target.$fastView;\n        // If there is a view and it's currently composed into\n        // the DOM, then we need to remove it.\n        if (view !== void 0 && view.isComposed) {\n            view.isComposed = false;\n            view.remove();\n            if (view.needsBindOnly) view.needsBindOnly = false;\n            else view.unbind();\n        }\n        target.textContent = value;\n    }\n}\nfunction $3302dfbf2f7c135c$var$updateTokenList(target, aspect, value) {\n    var _a;\n    const lookup = `${this.id}-t`;\n    const state = (_a = target[lookup]) !== null && _a !== void 0 ? _a : target[lookup] = {\n        v: 0,\n        cv: Object.create(null)\n    };\n    const classVersions = state.cv;\n    let version = state.v;\n    const tokenList = target[aspect];\n    // Add the classes, tracking the version at which they were added.\n    if (value !== null && value !== undefined && value.length) {\n        const names = value.split(/\\s+/);\n        for(let i = 0, ii = names.length; i < ii; ++i){\n            const currentName = names[i];\n            if (currentName === \"\") continue;\n            classVersions[currentName] = version;\n            tokenList.add(currentName);\n        }\n    }\n    state.v = version + 1;\n    // If this is the first call to add classes, there's no need to remove old ones.\n    if (version === 0) return;\n    // Remove classes from the previous version.\n    version -= 1;\n    for(const name in classVersions)if (classVersions[name] === version) tokenList.remove(name);\n}\nconst $3302dfbf2f7c135c$var$sinkLookup = {\n    [(0, $a73d76e1ed9a350a$export$b0076a1a9e24da9).attribute]: (0, $a73d76e1ed9a350a$export$cb0933279c36a66b).setAttribute,\n    [(0, $a73d76e1ed9a350a$export$b0076a1a9e24da9).booleanAttribute]: (0, $a73d76e1ed9a350a$export$cb0933279c36a66b).setBooleanAttribute,\n    [(0, $a73d76e1ed9a350a$export$b0076a1a9e24da9).property]: (t, a, v)=>t[a] = v,\n    [(0, $a73d76e1ed9a350a$export$b0076a1a9e24da9).content]: $3302dfbf2f7c135c$var$updateContent,\n    [(0, $a73d76e1ed9a350a$export$b0076a1a9e24da9).tokenList]: $3302dfbf2f7c135c$var$updateTokenList,\n    [(0, $a73d76e1ed9a350a$export$b0076a1a9e24da9).event]: ()=>void 0\n};\nclass $3302dfbf2f7c135c$export$c590b280af2e6950 {\n    /**\n     * Creates an instance of HTMLBindingDirective.\n     * @param dataBinding - The binding configuration to apply.\n     */ constructor(dataBinding){\n        this.dataBinding = dataBinding;\n        this.updateTarget = null;\n        /**\n         * The type of aspect to target.\n         */ this.aspectType = (0, $a73d76e1ed9a350a$export$b0076a1a9e24da9).content;\n    }\n    /**\n     * Creates HTML to be used within a template.\n     * @param add - Can be used to add  behavior factories to a template.\n     */ createHTML(add) {\n        return (0, $b65473616eab8774$export$b925b7ba50a6200f).interpolation(add(this));\n    }\n    /**\n     * Creates a behavior.\n     */ createBehavior() {\n        var _a;\n        if (this.updateTarget === null) {\n            const sink = $3302dfbf2f7c135c$var$sinkLookup[this.aspectType];\n            const policy = (_a = this.dataBinding.policy) !== null && _a !== void 0 ? _a : this.policy;\n            if (!sink) throw (0, $3cd519730db4770f$export$360e186c37756536).error(1205 /* Message.unsupportedBindingBehavior */ );\n            this.data = `${this.id}-d`;\n            this.updateTarget = policy.protect(this.targetTagName, this.aspectType, this.targetAspect, sink);\n        }\n        return this;\n    }\n    /** @internal */ bind(controller) {\n        var _a;\n        const target = controller.targets[this.targetNodeId];\n        switch(this.aspectType){\n            case (0, $a73d76e1ed9a350a$export$b0076a1a9e24da9).event:\n                target[this.data] = controller;\n                target.addEventListener(this.targetAspect, this, this.dataBinding.options);\n                break;\n            case (0, $a73d76e1ed9a350a$export$b0076a1a9e24da9).content:\n                controller.onUnbind(this);\n            // intentional fall through\n            default:\n                const observer = (_a = target[this.data]) !== null && _a !== void 0 ? _a : target[this.data] = this.dataBinding.createObserver(this, this);\n                observer.target = target;\n                observer.controller = controller;\n                this.updateTarget(target, this.targetAspect, observer.bind(controller), controller);\n                break;\n        }\n    }\n    /** @internal */ unbind(controller) {\n        const target = controller.targets[this.targetNodeId];\n        const view = target.$fastView;\n        if (view !== void 0 && view.isComposed) {\n            view.unbind();\n            view.needsBindOnly = true;\n        }\n    }\n    /** @internal */ handleEvent(event) {\n        const controller = event.currentTarget[this.data];\n        if (controller.isBound) {\n            (0, $11afc8bee2de7865$export$f7c638676c8af91d).setEvent(event);\n            const result = this.dataBinding.evaluate(controller.source, controller.context);\n            (0, $11afc8bee2de7865$export$f7c638676c8af91d).setEvent(null);\n            if (result !== true) event.preventDefault();\n        }\n    }\n    /** @internal */ handleChange(binding, observer) {\n        const target = observer.target;\n        const controller = observer.controller;\n        this.updateTarget(target, this.targetAspect, observer.bind(controller), controller);\n    }\n}\n(0, $cc34801bb3d5b869$export$3b3d5ef3c555d599).define($3302dfbf2f7c135c$export$c590b280af2e6950, {\n    aspected: true\n});\n\n\n\n\n\n\n\n\n\n\n\nfunction $b2fda19b3cbf824f$var$removeNodeSequence(firstNode, lastNode) {\n    const parent = firstNode.parentNode;\n    let current = firstNode;\n    let next;\n    while(current !== lastNode){\n        next = current.nextSibling;\n        parent.removeChild(current);\n        current = next;\n    }\n    parent.removeChild(lastNode);\n}\nclass $b2fda19b3cbf824f$export$1b0b7079c4551d79 {\n    /**\n     * Constructs an instance of HTMLView.\n     * @param fragment - The html fragment that contains the nodes for this view.\n     * @param behaviors - The behaviors to be applied to this view.\n     */ constructor(fragment, factories, targets){\n        this.fragment = fragment;\n        this.factories = factories;\n        this.targets = targets;\n        this.behaviors = null;\n        this.unbindables = [];\n        /**\n         * The data that the view is bound to.\n         */ this.source = null;\n        /**\n         * Indicates whether the controller is bound.\n         */ this.isBound = false;\n        /**\n         * Indicates how the source's lifetime relates to the controller's lifetime.\n         */ this.sourceLifetime = (0, $11afc8bee2de7865$export$9a9eae009eb8780f).unknown;\n        /**\n         * The execution context the view is running within.\n         */ this.context = this;\n        /**\n         * The index of the current item within a repeat context.\n         */ this.index = 0;\n        /**\n         * The length of the current collection within a repeat context.\n         */ this.length = 0;\n        this.firstChild = fragment.firstChild;\n        this.lastChild = fragment.lastChild;\n    }\n    /**\n     * The current event within an event handler.\n     */ get event() {\n        return (0, $11afc8bee2de7865$export$f7c638676c8af91d).getEvent();\n    }\n    /**\n     * Indicates whether the current item within a repeat context\n     * has an even index.\n     */ get isEven() {\n        return this.index % 2 === 0;\n    }\n    /**\n     * Indicates whether the current item within a repeat context\n     * has an odd index.\n     */ get isOdd() {\n        return this.index % 2 !== 0;\n    }\n    /**\n     * Indicates whether the current item within a repeat context\n     * is the first item in the collection.\n     */ get isFirst() {\n        return this.index === 0;\n    }\n    /**\n     * Indicates whether the current item within a repeat context\n     * is somewhere in the middle of the collection.\n     */ get isInMiddle() {\n        return !this.isFirst && !this.isLast;\n    }\n    /**\n     * Indicates whether the current item within a repeat context\n     * is the last item in the collection.\n     */ get isLast() {\n        return this.index === this.length - 1;\n    }\n    /**\n     * Returns the typed event detail of a custom event.\n     */ eventDetail() {\n        return this.event.detail;\n    }\n    /**\n     * Returns the typed event target of the event.\n     */ eventTarget() {\n        return this.event.target;\n    }\n    /**\n     * Appends the view's DOM nodes to the referenced node.\n     * @param node - The parent node to append the view's DOM nodes to.\n     */ appendTo(node) {\n        node.appendChild(this.fragment);\n    }\n    /**\n     * Inserts the view's DOM nodes before the referenced node.\n     * @param node - The node to insert the view's DOM before.\n     */ insertBefore(node) {\n        if (this.fragment.hasChildNodes()) node.parentNode.insertBefore(this.fragment, node);\n        else {\n            const end = this.lastChild;\n            if (node.previousSibling === end) return;\n            const parentNode = node.parentNode;\n            let current = this.firstChild;\n            let next;\n            while(current !== end){\n                next = current.nextSibling;\n                parentNode.insertBefore(current, node);\n                current = next;\n            }\n            parentNode.insertBefore(end, node);\n        }\n    }\n    /**\n     * Removes the view's DOM nodes.\n     * The nodes are not disposed and the view can later be re-inserted.\n     */ remove() {\n        const fragment = this.fragment;\n        const end = this.lastChild;\n        let current = this.firstChild;\n        let next;\n        while(current !== end){\n            next = current.nextSibling;\n            fragment.appendChild(current);\n            current = next;\n        }\n        fragment.appendChild(end);\n    }\n    /**\n     * Removes the view and unbinds its behaviors, disposing of DOM nodes afterward.\n     * Once a view has been disposed, it cannot be inserted or bound again.\n     */ dispose() {\n        $b2fda19b3cbf824f$var$removeNodeSequence(this.firstChild, this.lastChild);\n        this.unbind();\n    }\n    onUnbind(behavior) {\n        this.unbindables.push(behavior);\n    }\n    /**\n     * Binds a view's behaviors to its binding source.\n     * @param source - The binding source for the view's binding behaviors.\n     * @param context - The execution context to run the behaviors within.\n     */ bind(source, context = this) {\n        if (this.source === source) return;\n        let behaviors = this.behaviors;\n        if (behaviors === null) {\n            this.source = source;\n            this.context = context;\n            this.behaviors = behaviors = new Array(this.factories.length);\n            const factories = this.factories;\n            for(let i = 0, ii = factories.length; i < ii; ++i){\n                const behavior = factories[i].createBehavior();\n                behavior.bind(this);\n                behaviors[i] = behavior;\n            }\n        } else {\n            if (this.source !== null) this.evaluateUnbindables();\n            this.isBound = false;\n            this.source = source;\n            this.context = context;\n            for(let i = 0, ii = behaviors.length; i < ii; ++i)behaviors[i].bind(this);\n        }\n        this.isBound = true;\n    }\n    /**\n     * Unbinds a view's behaviors from its binding source.\n     */ unbind() {\n        if (!this.isBound || this.source === null) return;\n        this.evaluateUnbindables();\n        this.source = null;\n        this.context = this;\n        this.isBound = false;\n    }\n    evaluateUnbindables() {\n        const unbindables = this.unbindables;\n        for(let i = 0, ii = unbindables.length; i < ii; ++i)unbindables[i].unbind(this);\n        unbindables.length = 0;\n    }\n    /**\n     * Efficiently disposes of a contiguous range of synthetic view instances.\n     * @param views - A contiguous range of views to be disposed.\n     */ static disposeContiguousBatch(views) {\n        if (views.length === 0) return;\n        $b2fda19b3cbf824f$var$removeNodeSequence(views[0].firstChild, views[views.length - 1].lastChild);\n        for(let i = 0, ii = views.length; i < ii; ++i)views[i].unbind();\n    }\n}\n(0, $3cd519730db4770f$export$997c5e5ecebc1b61)($b2fda19b3cbf824f$export$1b0b7079c4551d79);\n(0, $11afc8bee2de7865$export$77cea355fa80b5f4).defineProperty($b2fda19b3cbf824f$export$1b0b7079c4551d79.prototype, \"index\");\n(0, $11afc8bee2de7865$export$77cea355fa80b5f4).defineProperty($b2fda19b3cbf824f$export$1b0b7079c4551d79.prototype, \"length\");\n\n\nconst $3fc19233194093b1$var$targetIdFrom = (parentId, nodeIndex)=>`${parentId}.${nodeIndex}`;\nconst $3fc19233194093b1$var$descriptorCache = {};\n// used to prevent creating lots of objects just to track node and index while compiling\nconst $3fc19233194093b1$var$next = {\n    index: 0,\n    node: null\n};\nfunction $3fc19233194093b1$var$tryWarn(name) {\n    if (!name.startsWith(\"fast-\")) (0, $3cd519730db4770f$export$360e186c37756536).warn(1204 /* Message.hostBindingWithoutHost */ , {\n        name: name\n    });\n}\nconst $3fc19233194093b1$var$warningHost = new Proxy(document.createElement(\"div\"), {\n    get (target, property) {\n        $3fc19233194093b1$var$tryWarn(property);\n        const value = Reflect.get(target, property);\n        return (0, $3b68c0e8977f93f3$export$f6e2535fb5126e54)(value) ? value.bind(target) : value;\n    },\n    set (target, property, value) {\n        $3fc19233194093b1$var$tryWarn(property);\n        return Reflect.set(target, property, value);\n    }\n});\nclass $3fc19233194093b1$var$CompilationContext {\n    constructor(fragment, directives, policy){\n        this.fragment = fragment;\n        this.directives = directives;\n        this.policy = policy;\n        this.proto = null;\n        this.nodeIds = new Set();\n        this.descriptors = {};\n        this.factories = [];\n    }\n    addFactory(factory, parentId, nodeId, targetIndex, tagName) {\n        var _a, _b;\n        if (!this.nodeIds.has(nodeId)) {\n            this.nodeIds.add(nodeId);\n            this.addTargetDescriptor(parentId, nodeId, targetIndex);\n        }\n        factory.id = (_a = factory.id) !== null && _a !== void 0 ? _a : (0, $b65473616eab8774$export$79a1817568da084b)();\n        factory.targetNodeId = nodeId;\n        factory.targetTagName = tagName;\n        factory.policy = (_b = factory.policy) !== null && _b !== void 0 ? _b : this.policy;\n        this.factories.push(factory);\n    }\n    freeze() {\n        this.proto = Object.create(null, this.descriptors);\n        return this;\n    }\n    addTargetDescriptor(parentId, targetId, targetIndex) {\n        const descriptors = this.descriptors;\n        if (targetId === \"r\" || // root\n        targetId === \"h\" || // host\n        descriptors[targetId]) return;\n        if (!descriptors[parentId]) {\n            const index = parentId.lastIndexOf(\".\");\n            const grandparentId = parentId.substring(0, index);\n            const childIndex = parseInt(parentId.substring(index + 1));\n            this.addTargetDescriptor(grandparentId, parentId, childIndex);\n        }\n        let descriptor = $3fc19233194093b1$var$descriptorCache[targetId];\n        if (!descriptor) {\n            const field = `_${targetId}`;\n            $3fc19233194093b1$var$descriptorCache[targetId] = descriptor = {\n                get () {\n                    var _a;\n                    return (_a = this[field]) !== null && _a !== void 0 ? _a : this[field] = this[parentId].childNodes[targetIndex];\n                }\n            };\n        }\n        descriptors[targetId] = descriptor;\n    }\n    createView(hostBindingTarget) {\n        const fragment = this.fragment.cloneNode(true);\n        const targets = Object.create(this.proto);\n        targets.r = fragment;\n        targets.h = hostBindingTarget !== null && hostBindingTarget !== void 0 ? hostBindingTarget : $3fc19233194093b1$var$warningHost;\n        for (const id of this.nodeIds)targets[id]; // trigger locator\n        return new (0, $b2fda19b3cbf824f$export$1b0b7079c4551d79)(fragment, this.factories, targets);\n    }\n}\nfunction $3fc19233194093b1$var$compileAttributes(context, parentId, node, nodeId, nodeIndex, includeBasicValues = false) {\n    const attributes = node.attributes;\n    const directives = context.directives;\n    for(let i = 0, ii = attributes.length; i < ii; ++i){\n        const attr = attributes[i];\n        const attrValue = attr.value;\n        const parseResult = (0, $b65473616eab8774$export$7acfa6ed01010e37).parse(attrValue, directives);\n        let result = null;\n        if (parseResult === null) {\n            if (includeBasicValues) {\n                result = new (0, $3302dfbf2f7c135c$export$c590b280af2e6950)((0, $1cb9f88fe9a2a07c$export$62b137a205137697)(()=>attrValue, context.policy));\n                (0, $cc34801bb3d5b869$export$3b3d5ef3c555d599).assignAspect(result, attr.name);\n            }\n        } else /* eslint-disable-next-line @typescript-eslint/no-use-before-define */ result = $3fc19233194093b1$export$3a6335acfcf707c9.aggregate(parseResult, context.policy);\n        if (result !== null) {\n            node.removeAttributeNode(attr);\n            i--;\n            ii--;\n            context.addFactory(result, parentId, nodeId, nodeIndex, node.tagName);\n        }\n    }\n}\nfunction $3fc19233194093b1$var$compileContent(context, node, parentId, nodeId, nodeIndex) {\n    const parseResult = (0, $b65473616eab8774$export$7acfa6ed01010e37).parse(node.textContent, context.directives);\n    if (parseResult === null) {\n        $3fc19233194093b1$var$next.node = node.nextSibling;\n        $3fc19233194093b1$var$next.index = nodeIndex + 1;\n        return $3fc19233194093b1$var$next;\n    }\n    let currentNode;\n    let lastNode = currentNode = node;\n    for(let i = 0, ii = parseResult.length; i < ii; ++i){\n        const currentPart = parseResult[i];\n        if (i !== 0) {\n            nodeIndex++;\n            nodeId = $3fc19233194093b1$var$targetIdFrom(parentId, nodeIndex);\n            currentNode = lastNode.parentNode.insertBefore(document.createTextNode(\"\"), lastNode.nextSibling);\n        }\n        if ((0, $3b68c0e8977f93f3$export$844ec244b1367d54)(currentPart)) currentNode.textContent = currentPart;\n        else {\n            currentNode.textContent = \" \";\n            (0, $cc34801bb3d5b869$export$3b3d5ef3c555d599).assignAspect(currentPart);\n            context.addFactory(currentPart, parentId, nodeId, nodeIndex, null);\n        }\n        lastNode = currentNode;\n    }\n    $3fc19233194093b1$var$next.index = nodeIndex + 1;\n    $3fc19233194093b1$var$next.node = lastNode.nextSibling;\n    return $3fc19233194093b1$var$next;\n}\nfunction $3fc19233194093b1$var$compileChildren(context, parent, parentId) {\n    let nodeIndex = 0;\n    let childNode = parent.firstChild;\n    while(childNode){\n        /* eslint-disable-next-line @typescript-eslint/no-use-before-define */ const result = $3fc19233194093b1$var$compileNode(context, parentId, childNode, nodeIndex);\n        childNode = result.node;\n        nodeIndex = result.index;\n    }\n}\nfunction $3fc19233194093b1$var$compileNode(context, parentId, node, nodeIndex) {\n    const nodeId = $3fc19233194093b1$var$targetIdFrom(parentId, nodeIndex);\n    switch(node.nodeType){\n        case 1:\n            $3fc19233194093b1$var$compileAttributes(context, parentId, node, nodeId, nodeIndex);\n            $3fc19233194093b1$var$compileChildren(context, node, nodeId);\n            break;\n        case 3:\n            return $3fc19233194093b1$var$compileContent(context, node, parentId, nodeId, nodeIndex);\n        case 8:\n            const parts = (0, $b65473616eab8774$export$7acfa6ed01010e37).parse(node.data, context.directives);\n            if (parts !== null) context.addFactory(/* eslint-disable-next-line @typescript-eslint/no-use-before-define */ $3fc19233194093b1$export$3a6335acfcf707c9.aggregate(parts), parentId, nodeId, nodeIndex, null);\n            break;\n    }\n    $3fc19233194093b1$var$next.index = nodeIndex + 1;\n    $3fc19233194093b1$var$next.node = node.nextSibling;\n    return $3fc19233194093b1$var$next;\n}\nfunction $3fc19233194093b1$var$isMarker(node, directives) {\n    return node && node.nodeType == 8 && (0, $b65473616eab8774$export$7acfa6ed01010e37).parse(node.data, directives) !== null;\n}\nconst $3fc19233194093b1$var$templateTag = \"TEMPLATE\";\nconst $3fc19233194093b1$export$3a6335acfcf707c9 = {\n    /**\n     * Compiles a template and associated directives into a compilation\n     * result which can be used to create views.\n     * @param html - The html string or template element to compile.\n     * @param factories - The behavior factories referenced by the template.\n     * @param policy - The security policy to compile the html with.\n     * @remarks\n     * The template that is provided for compilation is altered in-place\n     * and cannot be compiled again. If the original template must be preserved,\n     * it is recommended that you clone the original and pass the clone to this API.\n     * @public\n     */ compile (html, factories, policy = (0, $a73d76e1ed9a350a$export$cb0933279c36a66b).policy) {\n        let template;\n        if ((0, $3b68c0e8977f93f3$export$844ec244b1367d54)(html)) {\n            template = document.createElement($3fc19233194093b1$var$templateTag);\n            template.innerHTML = policy.createHTML(html);\n            const fec = template.content.firstElementChild;\n            if (fec !== null && fec.tagName === $3fc19233194093b1$var$templateTag) template = fec;\n        } else template = html;\n        if (!template.content.firstChild && !template.content.lastChild) template.content.appendChild(document.createComment(\"\"));\n        // https://bugs.chromium.org/p/chromium/issues/detail?id=1111864\n        const fragment = document.adoptNode(template.content);\n        const context = new $3fc19233194093b1$var$CompilationContext(fragment, factories, policy);\n        $3fc19233194093b1$var$compileAttributes(context, \"\", template, /* host */ \"h\", 0, true);\n        if (// If the first node in a fragment is a marker, that means it's an unstable first node,\n        // because something like a when, repeat, etc. could add nodes before the marker.\n        // To mitigate this, we insert a stable first node. However, if we insert a node,\n        // that will alter the result of the TreeWalker. So, we also need to offset the target index.\n        $3fc19233194093b1$var$isMarker(fragment.firstChild, factories) || // Or if there is only one node and a directive, it means the template's content\n        // is *only* the directive. In that case, HTMLView.dispose() misses any nodes inserted by\n        // the directive. Inserting a new node ensures proper disposal of nodes added by the directive.\n        fragment.childNodes.length === 1 && Object.keys(factories).length > 0) fragment.insertBefore(document.createComment(\"\"), fragment.firstChild);\n        $3fc19233194093b1$var$compileChildren(context, fragment, /* root */ \"r\");\n        $3fc19233194093b1$var$next.node = null; // prevent leaks\n        return context.freeze();\n    },\n    /**\n     * Sets the default compilation strategy that will be used by the ViewTemplate whenever\n     * it needs to compile a view preprocessed with the html template function.\n     * @param strategy - The compilation strategy to use when compiling templates.\n     */ setDefaultStrategy (strategy) {\n        this.compile = strategy;\n    },\n    /**\n     * Aggregates an array of strings and directives into a single directive.\n     * @param parts - A heterogeneous array of static strings interspersed with\n     * directives.\n     * @param policy - The security policy to use with the aggregated bindings.\n     * @returns A single inline directive that aggregates the behavior of all the parts.\n     */ aggregate (parts, policy = (0, $a73d76e1ed9a350a$export$cb0933279c36a66b).policy) {\n        if (parts.length === 1) return parts[0];\n        let sourceAspect;\n        let binding;\n        let isVolatile = false;\n        let bindingPolicy = void 0;\n        const partCount = parts.length;\n        const finalParts = parts.map((x)=>{\n            if ((0, $3b68c0e8977f93f3$export$844ec244b1367d54)(x)) return ()=>x;\n            sourceAspect = x.sourceAspect || sourceAspect;\n            binding = x.dataBinding || binding;\n            isVolatile = isVolatile || x.dataBinding.isVolatile;\n            bindingPolicy = bindingPolicy || x.dataBinding.policy;\n            return x.dataBinding.evaluate;\n        });\n        const expression = (scope, context)=>{\n            let output = \"\";\n            for(let i = 0; i < partCount; ++i)output += finalParts[i](scope, context);\n            return output;\n        };\n        binding.evaluate = expression;\n        binding.isVolatile = isVolatile;\n        binding.policy = bindingPolicy !== null && bindingPolicy !== void 0 ? bindingPolicy : policy;\n        const directive = new (0, $3302dfbf2f7c135c$export$c590b280af2e6950)(binding);\n        (0, $cc34801bb3d5b869$export$3b3d5ef3c555d599).assignAspect(directive, sourceAspect);\n        return directive;\n    }\n};\n\n\n\n\n// Much thanks to LitHTML for working this out!\nconst $13859427fd7d4158$var$lastAttributeNameRegex = /* eslint-disable-next-line no-control-regex */ /([ \\x09\\x0a\\x0c\\x0d])([^\\0-\\x1F\\x7F-\\x9F \"'>=/]+)([ \\x09\\x0a\\x0c\\x0d]*=[ \\x09\\x0a\\x0c\\x0d]*(?:[^ \\x09\\x0a\\x0c\\x0d\"'`<>=]*|\"[^\"]*|'[^']*))$/;\nconst $13859427fd7d4158$var$noFactories = Object.create(null);\nclass $13859427fd7d4158$export$f5439a5bc3830f91 {\n    /**\n     * Creates an instance of InlineTemplateDirective.\n     * @param template - The template to inline.\n     */ constructor(html, factories = $13859427fd7d4158$var$noFactories){\n        this.html = html;\n        this.factories = factories;\n    }\n    /**\n     * Creates HTML to be used within a template.\n     * @param add - Can be used to add  behavior factories to a template.\n     */ createHTML(add) {\n        const factories = this.factories;\n        for(const key in factories)add(factories[key]);\n        return this.html;\n    }\n}\n/**\n * An empty template partial.\n */ $13859427fd7d4158$export$f5439a5bc3830f91.empty = new $13859427fd7d4158$export$f5439a5bc3830f91(\"\");\n(0, $cc34801bb3d5b869$export$3b3d5ef3c555d599).define($13859427fd7d4158$export$f5439a5bc3830f91);\nfunction $13859427fd7d4158$var$createHTML(value, prevString, add, definition = (0, $cc34801bb3d5b869$export$3b3d5ef3c555d599).getForInstance(value)) {\n    if (definition.aspected) {\n        const match = $13859427fd7d4158$var$lastAttributeNameRegex.exec(prevString);\n        if (match !== null) (0, $cc34801bb3d5b869$export$3b3d5ef3c555d599).assignAspect(value, match[2]);\n    }\n    return value.createHTML(add);\n}\nclass $13859427fd7d4158$export$98f7e629c251afe6 {\n    /**\n     * Creates an instance of ViewTemplate.\n     * @param html - The html representing what this template will instantiate, including placeholders for directives.\n     * @param factories - The directives that will be connected to placeholders in the html.\n     * @param policy - The security policy to use when compiling this template.\n     */ constructor(html, factories = {}, policy){\n        this.policy = policy;\n        this.result = null;\n        this.html = html;\n        this.factories = factories;\n    }\n    /**\n     * Creates an HTMLView instance based on this template definition.\n     * @param hostBindingTarget - The element that host behaviors will be bound to.\n     */ create(hostBindingTarget) {\n        if (this.result === null) this.result = (0, $3fc19233194093b1$export$3a6335acfcf707c9).compile(this.html, this.factories, this.policy);\n        return this.result.createView(hostBindingTarget);\n    }\n    /**\n     * Returns a directive that can inline the template.\n     */ inline() {\n        return new $13859427fd7d4158$export$f5439a5bc3830f91((0, $3b68c0e8977f93f3$export$844ec244b1367d54)(this.html) ? this.html : this.html.innerHTML, this.factories);\n    }\n    /**\n     * Sets the DOMPolicy for this template.\n     * @param policy - The policy to associated with this template.\n     * @returns The modified template instance.\n     * @remarks\n     * The DOMPolicy can only be set once for a template and cannot be\n     * set after the template is compiled.\n     */ withPolicy(policy) {\n        if (this.result) throw (0, $3cd519730db4770f$export$360e186c37756536).error(1208 /* Message.cannotSetTemplatePolicyAfterCompilation */ );\n        if (this.policy) throw (0, $3cd519730db4770f$export$360e186c37756536).error(1207 /* Message.onlySetTemplatePolicyOnce */ );\n        this.policy = policy;\n        return this;\n    }\n    /**\n     * Creates an HTMLView from this template, binds it to the source, and then appends it to the host.\n     * @param source - The data source to bind the template to.\n     * @param host - The Element where the template will be rendered.\n     * @param hostBindingTarget - An HTML element to target the host bindings at if different from the\n     * host that the template is being attached to.\n     */ render(source, host, hostBindingTarget) {\n        const view = this.create(hostBindingTarget);\n        view.bind(source);\n        view.appendTo(host);\n        return view;\n    }\n    /**\n     * Creates a template based on a set of static strings and dynamic values.\n     * @param strings - The static strings to create the template with.\n     * @param values - The dynamic values to create the template with.\n     * @param policy - The DOMPolicy to associated with the template.\n     * @returns A ViewTemplate.\n     * @remarks\n     * This API should not be used directly under normal circumstances because constructing\n     * a template in this way, if not done properly, can open up the application to XSS\n     * attacks. When using this API, provide a strong DOMPolicy that can properly sanitize\n     * and also be sure to manually sanitize all static strings particularly if they can\n     * come from user input.\n     */ static create(strings, values, policy) {\n        let html = \"\";\n        const factories = Object.create(null);\n        const add = (factory)=>{\n            var _a;\n            const id = (_a = factory.id) !== null && _a !== void 0 ? _a : factory.id = (0, $b65473616eab8774$export$79a1817568da084b)();\n            factories[id] = factory;\n            return id;\n        };\n        for(let i = 0, ii = strings.length - 1; i < ii; ++i){\n            const currentString = strings[i];\n            let currentValue = values[i];\n            let definition;\n            html += currentString;\n            if ((0, $3b68c0e8977f93f3$export$f6e2535fb5126e54)(currentValue)) currentValue = new (0, $3302dfbf2f7c135c$export$c590b280af2e6950)((0, $e5081770006036c8$export$d013c21e6c7cf47e)(currentValue));\n            else if (currentValue instanceof (0, $90d39a98aede8ee9$export$f4f50f872cf9bd86)) currentValue = new (0, $3302dfbf2f7c135c$export$c590b280af2e6950)(currentValue);\n            else if (!(definition = (0, $cc34801bb3d5b869$export$3b3d5ef3c555d599).getForInstance(currentValue))) {\n                const staticValue = currentValue;\n                currentValue = new (0, $3302dfbf2f7c135c$export$c590b280af2e6950)((0, $1cb9f88fe9a2a07c$export$62b137a205137697)(()=>staticValue));\n            }\n            html += $13859427fd7d4158$var$createHTML(currentValue, currentString, add, definition);\n        }\n        return new $13859427fd7d4158$export$98f7e629c251afe6(html + strings[strings.length - 1], factories, policy);\n    }\n}\n(0, $3cd519730db4770f$export$997c5e5ecebc1b61)($13859427fd7d4158$export$98f7e629c251afe6);\nconst $13859427fd7d4158$export$c0bb0b647f701bb5 = (strings, ...values)=>{\n    if (Array.isArray(strings) && Array.isArray(strings.raw)) return $13859427fd7d4158$export$98f7e629c251afe6.create(strings, values);\n    throw (0, $3cd519730db4770f$export$360e186c37756536).error(1206 /* Message.directCallToHTMLTagNotAllowed */ );\n};\n$13859427fd7d4158$export$c0bb0b647f701bb5.partial = (html)=>{\n    return new $13859427fd7d4158$export$f5439a5bc3830f91(html);\n};\n\n\n\n\n\n\n\nclass $f6b72f64aec7b7fd$export$ceb3ee475cfd64d1 {\n    /**\n     * Creates a splice.\n     * @param index - The index that the splice occurs at.\n     * @param removed - The items that were removed.\n     * @param addedCount - The  number of items that were added.\n     */ constructor(index, removed, addedCount){\n        this.index = index;\n        this.removed = removed;\n        this.addedCount = addedCount;\n    }\n    /**\n     * Adjusts the splice index based on the provided array.\n     * @param array - The array to adjust to.\n     * @returns The same splice, mutated based on the reference array.\n     */ adjustTo(array) {\n        let index = this.index;\n        const arrayLength = array.length;\n        if (index > arrayLength) index = arrayLength - this.addedCount;\n        else if (index < 0) index = arrayLength + this.removed.length + index - this.addedCount;\n        this.index = index < 0 ? 0 : index;\n        return this;\n    }\n}\nconst $f6b72f64aec7b7fd$export$2bfb3010befe266c = Object.freeze({\n    /**\n     * Only supports resets.\n     */ reset: 1,\n    /**\n     * Supports tracking splices and resets.\n     */ splice: 2,\n    /**\n     * Supports tracking splices and resets, while applying some form\n     * of optimization, such as merging, to the splices.\n     */ optimized: 3\n});\nconst $f6b72f64aec7b7fd$var$reset = new $f6b72f64aec7b7fd$export$ceb3ee475cfd64d1(0, (0, $3cd519730db4770f$export$d3ae4127996a91af), 0);\n$f6b72f64aec7b7fd$var$reset.reset = true;\nconst $f6b72f64aec7b7fd$var$resetSplices = [\n    $f6b72f64aec7b7fd$var$reset\n];\n// Note: This function is *based* on the computation of the Levenshtein\n// \"edit\" distance. The one change is that \"updates\" are treated as two\n// edits - not one. With Array splices, an update is really a delete\n// followed by an add. By retaining this, we optimize for \"keeping\" the\n// maximum array items in the original array. For example:\n//\n//   'xxxx123' to '123yyyy'\n//\n// With 1-edit updates, the shortest path would be just to update all seven\n// characters. With 2-edit updates, we delete 4, leave 3, and add 4. This\n// leaves the substring '123' intact.\nfunction $f6b72f64aec7b7fd$var$calcEditDistances(current, currentStart, currentEnd, old, oldStart, oldEnd) {\n    // \"Deletion\" columns\n    const rowCount = oldEnd - oldStart + 1;\n    const columnCount = currentEnd - currentStart + 1;\n    const distances = new Array(rowCount);\n    let north;\n    let west;\n    // \"Addition\" rows. Initialize null column.\n    for(let i = 0; i < rowCount; ++i){\n        distances[i] = new Array(columnCount);\n        distances[i][0] = i;\n    }\n    // Initialize null row\n    for(let j = 0; j < columnCount; ++j)distances[0][j] = j;\n    for(let i = 1; i < rowCount; ++i){\n        for(let j = 1; j < columnCount; ++j)if (current[currentStart + j - 1] === old[oldStart + i - 1]) distances[i][j] = distances[i - 1][j - 1];\n        else {\n            north = distances[i - 1][j] + 1;\n            west = distances[i][j - 1] + 1;\n            distances[i][j] = north < west ? north : west;\n        }\n    }\n    return distances;\n}\n// This starts at the final weight, and walks \"backward\" by finding\n// the minimum previous weight recursively until the origin of the weight\n// matrix.\nfunction $f6b72f64aec7b7fd$var$spliceOperationsFromEditDistances(distances) {\n    let i = distances.length - 1;\n    let j = distances[0].length - 1;\n    let current = distances[i][j];\n    const edits = [];\n    while(i > 0 || j > 0){\n        if (i === 0) {\n            edits.push(2 /* Edit.add */ );\n            j--;\n            continue;\n        }\n        if (j === 0) {\n            edits.push(3 /* Edit.delete */ );\n            i--;\n            continue;\n        }\n        const northWest = distances[i - 1][j - 1];\n        const west = distances[i - 1][j];\n        const north = distances[i][j - 1];\n        let min;\n        if (west < north) min = west < northWest ? west : northWest;\n        else min = north < northWest ? north : northWest;\n        if (min === northWest) {\n            if (northWest === current) edits.push(0 /* Edit.leave */ );\n            else {\n                edits.push(1 /* Edit.update */ );\n                current = northWest;\n            }\n            i--;\n            j--;\n        } else if (min === west) {\n            edits.push(3 /* Edit.delete */ );\n            i--;\n            current = west;\n        } else {\n            edits.push(2 /* Edit.add */ );\n            j--;\n            current = north;\n        }\n    }\n    return edits.reverse();\n}\nfunction $f6b72f64aec7b7fd$var$sharedPrefix(current, old, searchLength) {\n    for(let i = 0; i < searchLength; ++i){\n        if (current[i] !== old[i]) return i;\n    }\n    return searchLength;\n}\nfunction $f6b72f64aec7b7fd$var$sharedSuffix(current, old, searchLength) {\n    let index1 = current.length;\n    let index2 = old.length;\n    let count = 0;\n    while(count < searchLength && current[--index1] === old[--index2])count++;\n    return count;\n}\nfunction $f6b72f64aec7b7fd$var$intersect(start1, end1, start2, end2) {\n    // Disjoint\n    if (end1 < start2 || end2 < start1) return -1;\n    // Adjacent\n    if (end1 === start2 || end2 === start1) return 0;\n    // Non-zero intersect, span1 first\n    if (start1 < start2) {\n        if (end1 < end2) return end1 - start2; // Overlap\n        return end2 - start2; // Contained\n    }\n    // Non-zero intersect, span2 first\n    if (end2 < end1) return end2 - start1; // Overlap\n    return end1 - start1; // Contained\n}\n/**\n * @remarks\n * Lacking individual splice mutation information, the minimal set of\n * splices can be synthesized given the previous state and final state of an\n * array. The basic approach is to calculate the edit distance matrix and\n * choose the shortest path through it.\n *\n * Complexity: O(l * p)\n *   l: The length of the current array\n *   p: The length of the old array\n */ function $f6b72f64aec7b7fd$var$calc(current, currentStart, currentEnd, old, oldStart, oldEnd) {\n    let prefixCount = 0;\n    let suffixCount = 0;\n    const minLength = Math.min(currentEnd - currentStart, oldEnd - oldStart);\n    if (currentStart === 0 && oldStart === 0) prefixCount = $f6b72f64aec7b7fd$var$sharedPrefix(current, old, minLength);\n    if (currentEnd === current.length && oldEnd === old.length) suffixCount = $f6b72f64aec7b7fd$var$sharedSuffix(current, old, minLength - prefixCount);\n    currentStart += prefixCount;\n    oldStart += prefixCount;\n    currentEnd -= suffixCount;\n    oldEnd -= suffixCount;\n    if (currentEnd - currentStart === 0 && oldEnd - oldStart === 0) return 0, $3cd519730db4770f$export$d3ae4127996a91af;\n    if (currentStart === currentEnd) {\n        const splice = new $f6b72f64aec7b7fd$export$ceb3ee475cfd64d1(currentStart, [], 0);\n        while(oldStart < oldEnd)splice.removed.push(old[oldStart++]);\n        return [\n            splice\n        ];\n    } else if (oldStart === oldEnd) return [\n        new $f6b72f64aec7b7fd$export$ceb3ee475cfd64d1(currentStart, [], currentEnd - currentStart)\n    ];\n    const ops = $f6b72f64aec7b7fd$var$spliceOperationsFromEditDistances($f6b72f64aec7b7fd$var$calcEditDistances(current, currentStart, currentEnd, old, oldStart, oldEnd));\n    const splices = [];\n    let splice = void 0;\n    let index = currentStart;\n    let oldIndex = oldStart;\n    for(let i = 0; i < ops.length; ++i)switch(ops[i]){\n        case 0 /* Edit.leave */ :\n            if (splice !== void 0) {\n                splices.push(splice);\n                splice = void 0;\n            }\n            index++;\n            oldIndex++;\n            break;\n        case 1 /* Edit.update */ :\n            if (splice === void 0) splice = new $f6b72f64aec7b7fd$export$ceb3ee475cfd64d1(index, [], 0);\n            splice.addedCount++;\n            index++;\n            splice.removed.push(old[oldIndex]);\n            oldIndex++;\n            break;\n        case 2 /* Edit.add */ :\n            if (splice === void 0) splice = new $f6b72f64aec7b7fd$export$ceb3ee475cfd64d1(index, [], 0);\n            splice.addedCount++;\n            index++;\n            break;\n        case 3 /* Edit.delete */ :\n            if (splice === void 0) splice = new $f6b72f64aec7b7fd$export$ceb3ee475cfd64d1(index, [], 0);\n            splice.removed.push(old[oldIndex]);\n            oldIndex++;\n            break;\n    }\n    if (splice !== void 0) splices.push(splice);\n    return splices;\n}\nfunction $f6b72f64aec7b7fd$var$merge(splice, splices) {\n    let inserted = false;\n    let insertionOffset = 0;\n    for(let i = 0; i < splices.length; i++){\n        const current = splices[i];\n        current.index += insertionOffset;\n        if (inserted) continue;\n        const intersectCount = $f6b72f64aec7b7fd$var$intersect(splice.index, splice.index + splice.removed.length, current.index, current.index + current.addedCount);\n        if (intersectCount >= 0) {\n            // Merge the two splices\n            splices.splice(i, 1);\n            i--;\n            insertionOffset -= current.addedCount - current.removed.length;\n            splice.addedCount += current.addedCount - intersectCount;\n            const deleteCount = splice.removed.length + current.removed.length - intersectCount;\n            if (!splice.addedCount && !deleteCount) // merged splice is a noop. discard.\n            inserted = true;\n            else {\n                let currentRemoved = current.removed;\n                if (splice.index < current.index) {\n                    // some prefix of splice.removed is prepended to current.removed.\n                    const prepend = splice.removed.slice(0, current.index - splice.index);\n                    prepend.push(...currentRemoved);\n                    currentRemoved = prepend;\n                }\n                if (splice.index + splice.removed.length > current.index + current.addedCount) {\n                    // some suffix of splice.removed is appended to current.removed.\n                    const append = splice.removed.slice(current.index + current.addedCount - splice.index);\n                    currentRemoved.push(...append);\n                }\n                splice.removed = currentRemoved;\n                if (current.index < splice.index) splice.index = current.index;\n            }\n        } else if (splice.index < current.index) {\n            // Insert splice here.\n            inserted = true;\n            splices.splice(i, 0, splice);\n            i++;\n            const offset = splice.addedCount - splice.removed.length;\n            current.index += offset;\n            insertionOffset += offset;\n        }\n    }\n    if (!inserted) splices.push(splice);\n}\nfunction $f6b72f64aec7b7fd$var$project(array, changes) {\n    let splices = [];\n    const initialSplices = [];\n    for(let i = 0, ii = changes.length; i < ii; i++)$f6b72f64aec7b7fd$var$merge(changes[i], initialSplices);\n    for(let i = 0, ii = initialSplices.length; i < ii; ++i){\n        const splice = initialSplices[i];\n        if (splice.addedCount === 1 && splice.removed.length === 1) {\n            if (splice.removed[0] !== array[splice.index]) splices.push(splice);\n            continue;\n        }\n        splices = splices.concat($f6b72f64aec7b7fd$var$calc(array, splice.index, splice.index + splice.addedCount, splice.removed, 0, splice.removed.length));\n    }\n    return splices;\n}\n/**\n * A SpliceStrategy that attempts to merge all splices into the minimal set of\n * splices needed to represent the change from the old array to the new array.\n * @public\n */ let $f6b72f64aec7b7fd$var$defaultSpliceStrategy = Object.freeze({\n    support: $f6b72f64aec7b7fd$export$2bfb3010befe266c.optimized,\n    normalize (previous, current, changes) {\n        if (previous === void 0) {\n            if (changes === void 0) return 0, $3cd519730db4770f$export$d3ae4127996a91af;\n            return $f6b72f64aec7b7fd$var$project(current, changes);\n        }\n        return $f6b72f64aec7b7fd$var$resetSplices;\n    },\n    pop (array, observer, pop, args) {\n        const notEmpty = array.length > 0;\n        const result = pop.apply(array, args);\n        if (notEmpty) observer.addSplice(new $f6b72f64aec7b7fd$export$ceb3ee475cfd64d1(array.length, [\n            result\n        ], 0));\n        return result;\n    },\n    push (array, observer, push, args) {\n        const result = push.apply(array, args);\n        observer.addSplice(new $f6b72f64aec7b7fd$export$ceb3ee475cfd64d1(array.length - args.length, [], args.length).adjustTo(array));\n        return result;\n    },\n    reverse (array, observer, reverse, args) {\n        const result = reverse.apply(array, args);\n        observer.reset(array);\n        return result;\n    },\n    shift (array, observer, shift, args) {\n        const notEmpty = array.length > 0;\n        const result = shift.apply(array, args);\n        if (notEmpty) observer.addSplice(new $f6b72f64aec7b7fd$export$ceb3ee475cfd64d1(0, [\n            result\n        ], 0));\n        return result;\n    },\n    sort (array, observer, sort, args) {\n        const result = sort.apply(array, args);\n        observer.reset(array);\n        return result;\n    },\n    splice (array, observer, splice, args) {\n        const result = splice.apply(array, args);\n        observer.addSplice(new $f6b72f64aec7b7fd$export$ceb3ee475cfd64d1(+args[0], result, args.length > 2 ? args.length - 2 : 0).adjustTo(array));\n        return result;\n    },\n    unshift (array, observer, unshift, args) {\n        const result = unshift.apply(array, args);\n        observer.addSplice(new $f6b72f64aec7b7fd$export$ceb3ee475cfd64d1(0, [], args.length).adjustTo(array));\n        return result;\n    }\n});\nconst $f6b72f64aec7b7fd$export$6475bdcbf398326a = Object.freeze({\n    /**\n     * A set of changes that represent a full array reset.\n     */ reset: $f6b72f64aec7b7fd$var$resetSplices,\n    /**\n     * Sets the default strategy to use for array observers.\n     * @param strategy - The splice strategy to use.\n     */ setDefaultStrategy (strategy) {\n        $f6b72f64aec7b7fd$var$defaultSpliceStrategy = strategy;\n    }\n});\nfunction $f6b72f64aec7b7fd$var$setNonEnumerable(target, property, value) {\n    Reflect.defineProperty(target, property, {\n        value: value,\n        enumerable: false\n    });\n}\nclass $f6b72f64aec7b7fd$var$DefaultArrayObserver extends (0, $0d21722c4bcdf3f6$export$f35d03caf9a2ecdf) {\n    constructor(subject){\n        super(subject);\n        this.oldCollection = void 0;\n        this.splices = void 0;\n        this.needsQueue = true;\n        this._strategy = null;\n        this._lengthObserver = void 0;\n        this.call = this.flush;\n        $f6b72f64aec7b7fd$var$setNonEnumerable(subject, \"$fastController\", this);\n    }\n    get strategy() {\n        return this._strategy;\n    }\n    set strategy(value) {\n        this._strategy = value;\n    }\n    get lengthObserver() {\n        let observer = this._lengthObserver;\n        if (observer === void 0) {\n            const array = this.subject;\n            this._lengthObserver = observer = {\n                length: array.length,\n                handleChange () {\n                    if (this.length !== array.length) {\n                        this.length = array.length;\n                        (0, $11afc8bee2de7865$export$77cea355fa80b5f4).notify(observer, \"length\");\n                    }\n                }\n            };\n            this.subscribe(observer);\n        }\n        return observer;\n    }\n    subscribe(subscriber) {\n        this.flush();\n        super.subscribe(subscriber);\n    }\n    addSplice(splice) {\n        if (this.splices === void 0) this.splices = [\n            splice\n        ];\n        else this.splices.push(splice);\n        this.enqueue();\n    }\n    reset(oldCollection) {\n        this.oldCollection = oldCollection;\n        this.enqueue();\n    }\n    flush() {\n        var _a;\n        const splices = this.splices;\n        const oldCollection = this.oldCollection;\n        if (splices === void 0 && oldCollection === void 0) return;\n        this.needsQueue = true;\n        this.splices = void 0;\n        this.oldCollection = void 0;\n        this.notify(((_a = this._strategy) !== null && _a !== void 0 ? _a : $f6b72f64aec7b7fd$var$defaultSpliceStrategy).normalize(oldCollection, this.subject, splices));\n    }\n    enqueue() {\n        if (this.needsQueue) {\n            this.needsQueue = false;\n            (0, $d0b09140ab7069d2$export$26ef613a0934aa5f).enqueue(this);\n        }\n    }\n}\nlet $f6b72f64aec7b7fd$var$enabled = false;\nconst $f6b72f64aec7b7fd$export$ddffcc348cf2aba1 = Object.freeze({\n    /**\n     * Enables the array observation mechanism.\n     * @remarks\n     * Array observation is enabled automatically when using the\n     * {@link RepeatDirective}, so calling this API manually is\n     * not typically necessary.\n     */ enable () {\n        if ($f6b72f64aec7b7fd$var$enabled) return;\n        $f6b72f64aec7b7fd$var$enabled = true;\n        (0, $11afc8bee2de7865$export$77cea355fa80b5f4).setArrayObserverFactory((collection)=>new $f6b72f64aec7b7fd$var$DefaultArrayObserver(collection));\n        const proto = Array.prototype;\n        if (!proto.$fastPatch) {\n            $f6b72f64aec7b7fd$var$setNonEnumerable(proto, \"$fastPatch\", 1);\n            [\n                proto.pop,\n                proto.push,\n                proto.reverse,\n                proto.shift,\n                proto.sort,\n                proto.splice,\n                proto.unshift\n            ].forEach((method)=>{\n                proto[method.name] = function(...args) {\n                    var _a;\n                    const o = this.$fastController;\n                    return o === void 0 ? method.apply(this, args) : ((_a = o.strategy) !== null && _a !== void 0 ? _a : $f6b72f64aec7b7fd$var$defaultSpliceStrategy)[method.name](this, o, method, args);\n                };\n            });\n        }\n    }\n});\nfunction $f6b72f64aec7b7fd$export$db8278eef58dd758(array) {\n    if (!array) return 0;\n    let arrayObserver = array.$fastController;\n    if (arrayObserver === void 0) {\n        $f6b72f64aec7b7fd$export$ddffcc348cf2aba1.enable();\n        arrayObserver = (0, $11afc8bee2de7865$export$77cea355fa80b5f4).getNotifier(array);\n    }\n    (0, $11afc8bee2de7865$export$77cea355fa80b5f4).track(arrayObserver.lengthObserver, \"length\");\n    return array.length;\n}\n\n\n\n\n\n\nfunction $b5c42f5d900245a1$export$6cdc818096b8be3c(value) {\n    return (0, $3b68c0e8977f93f3$export$f6e2535fb5126e54)(value) ? (0, $e5081770006036c8$export$d013c21e6c7cf47e)(value) : value instanceof (0, $90d39a98aede8ee9$export$f4f50f872cf9bd86) ? value : (0, $1cb9f88fe9a2a07c$export$62b137a205137697)(()=>value);\n}\n\n\n\n\n\nconst $0f5a316a6a8083aa$var$defaultRepeatOptions = Object.freeze({\n    positioning: false,\n    recycle: true\n});\nfunction $0f5a316a6a8083aa$var$bindWithoutPositioning(view, items, index, controller) {\n    view.context.parent = controller.source;\n    view.context.parentContext = controller.context;\n    view.bind(items[index]);\n}\nfunction $0f5a316a6a8083aa$var$bindWithPositioning(view, items, index, controller) {\n    view.context.parent = controller.source;\n    view.context.parentContext = controller.context;\n    view.context.length = items.length;\n    view.context.index = index;\n    view.bind(items[index]);\n}\nclass $0f5a316a6a8083aa$export$9320ef0c85148109 {\n    /**\n     * Creates an instance of RepeatBehavior.\n     * @param location - The location in the DOM to render the repeat.\n     * @param dataBinding - The array to render.\n     * @param isItemsBindingVolatile - Indicates whether the items binding has volatile dependencies.\n     * @param templateBinding - The template to render for each item.\n     * @param isTemplateBindingVolatile - Indicates whether the template binding has volatile dependencies.\n     * @param options - Options used to turn on special repeat features.\n     */ constructor(directive){\n        this.directive = directive;\n        this.items = null;\n        this.itemsObserver = null;\n        this.bindView = $0f5a316a6a8083aa$var$bindWithoutPositioning;\n        /** @internal */ this.views = [];\n        this.itemsBindingObserver = directive.dataBinding.createObserver(this, directive);\n        this.templateBindingObserver = directive.templateBinding.createObserver(this, directive);\n        if (directive.options.positioning) this.bindView = $0f5a316a6a8083aa$var$bindWithPositioning;\n    }\n    /**\n     * Bind this behavior.\n     * @param controller - The view controller that manages the lifecycle of this behavior.\n     */ bind(controller) {\n        this.location = controller.targets[this.directive.targetNodeId];\n        this.controller = controller;\n        this.items = this.itemsBindingObserver.bind(controller);\n        this.template = this.templateBindingObserver.bind(controller);\n        this.observeItems(true);\n        this.refreshAllViews();\n        controller.onUnbind(this);\n    }\n    /**\n     * Unbinds this behavior.\n     */ unbind() {\n        if (this.itemsObserver !== null) this.itemsObserver.unsubscribe(this);\n        this.unbindAllViews();\n    }\n    /**\n     * Handles changes in the array, its items, and the repeat template.\n     * @param source - The source of the change.\n     * @param args - The details about what was changed.\n     */ handleChange(source, args) {\n        if (args === this.itemsBindingObserver) {\n            this.items = this.itemsBindingObserver.bind(this.controller);\n            this.observeItems();\n            this.refreshAllViews();\n        } else if (args === this.templateBindingObserver) {\n            this.template = this.templateBindingObserver.bind(this.controller);\n            this.refreshAllViews(true);\n        } else if (!args[0]) return;\n        else if (args[0].reset) this.refreshAllViews();\n        else this.updateViews(args);\n    }\n    observeItems(force = false) {\n        if (!this.items) {\n            this.items = (0, $3cd519730db4770f$export$d3ae4127996a91af);\n            return;\n        }\n        const oldObserver = this.itemsObserver;\n        const newObserver = this.itemsObserver = (0, $11afc8bee2de7865$export$77cea355fa80b5f4).getNotifier(this.items);\n        const hasNewObserver = oldObserver !== newObserver;\n        if (hasNewObserver && oldObserver !== null) oldObserver.unsubscribe(this);\n        if (hasNewObserver || force) newObserver.subscribe(this);\n    }\n    updateViews(splices) {\n        const views = this.views;\n        const bindView = this.bindView;\n        const items = this.items;\n        const template = this.template;\n        const controller = this.controller;\n        const recycle = this.directive.options.recycle;\n        const leftoverViews = [];\n        let leftoverIndex = 0;\n        let availableViews = 0;\n        for(let i = 0, ii = splices.length; i < ii; ++i){\n            const splice = splices[i];\n            const removed = splice.removed;\n            let removeIndex = 0;\n            let addIndex = splice.index;\n            const end = addIndex + splice.addedCount;\n            const removedViews = views.splice(splice.index, removed.length);\n            const totalAvailableViews = availableViews = leftoverViews.length + removedViews.length;\n            for(; addIndex < end; ++addIndex){\n                const neighbor = views[addIndex];\n                const location = neighbor ? neighbor.firstChild : this.location;\n                let view;\n                if (recycle && availableViews > 0) {\n                    if (removeIndex <= totalAvailableViews && removedViews.length > 0) {\n                        view = removedViews[removeIndex];\n                        removeIndex++;\n                    } else {\n                        view = leftoverViews[leftoverIndex];\n                        leftoverIndex++;\n                    }\n                    availableViews--;\n                } else view = template.create();\n                views.splice(addIndex, 0, view);\n                bindView(view, items, addIndex, controller);\n                view.insertBefore(location);\n            }\n            if (removedViews[removeIndex]) leftoverViews.push(...removedViews.slice(removeIndex));\n        }\n        for(let i = leftoverIndex, ii = leftoverViews.length; i < ii; ++i)leftoverViews[i].dispose();\n        if (this.directive.options.positioning) for(let i = 0, viewsLength = views.length; i < viewsLength; ++i){\n            const context = views[i].context;\n            context.length = viewsLength;\n            context.index = i;\n        }\n    }\n    refreshAllViews(templateChanged = false) {\n        const items = this.items;\n        const template = this.template;\n        const location = this.location;\n        const bindView = this.bindView;\n        const controller = this.controller;\n        let itemsLength = items.length;\n        let views = this.views;\n        let viewsLength = views.length;\n        if (itemsLength === 0 || templateChanged || !this.directive.options.recycle) {\n            // all views need to be removed\n            (0, $b2fda19b3cbf824f$export$1b0b7079c4551d79).disposeContiguousBatch(views);\n            viewsLength = 0;\n        }\n        if (viewsLength === 0) {\n            // all views need to be created\n            this.views = views = new Array(itemsLength);\n            for(let i = 0; i < itemsLength; ++i){\n                const view = template.create();\n                bindView(view, items, i, controller);\n                views[i] = view;\n                view.insertBefore(location);\n            }\n        } else {\n            // attempt to reuse existing views with new data\n            let i = 0;\n            for(; i < itemsLength; ++i)if (i < viewsLength) {\n                const view = views[i];\n                bindView(view, items, i, controller);\n            } else {\n                const view = template.create();\n                bindView(view, items, i, controller);\n                views.push(view);\n                view.insertBefore(location);\n            }\n            const removed = views.splice(i, viewsLength - i);\n            for(i = 0, itemsLength = removed.length; i < itemsLength; ++i)removed[i].dispose();\n        }\n    }\n    unbindAllViews() {\n        const views = this.views;\n        for(let i = 0, ii = views.length; i < ii; ++i)views[i].unbind();\n    }\n}\nclass $0f5a316a6a8083aa$export$3e91f6eae87714ce {\n    /**\n     * Creates an instance of RepeatDirective.\n     * @param dataBinding - The binding that provides the array to render.\n     * @param templateBinding - The template binding used to obtain a template to render for each item in the array.\n     * @param options - Options used to turn on special repeat features.\n     */ constructor(dataBinding, templateBinding, options){\n        this.dataBinding = dataBinding;\n        this.templateBinding = templateBinding;\n        this.options = options;\n        (0, $f6b72f64aec7b7fd$export$ddffcc348cf2aba1).enable();\n    }\n    /**\n     * Creates a placeholder string based on the directive's index within the template.\n     * @param index - The index of the directive within the template.\n     */ createHTML(add) {\n        return (0, $b65473616eab8774$export$b925b7ba50a6200f).comment(add(this));\n    }\n    /**\n     * Creates a behavior for the provided target node.\n     * @param target - The node instance to create the behavior for.\n     */ createBehavior() {\n        return new $0f5a316a6a8083aa$export$9320ef0c85148109(this);\n    }\n}\n(0, $cc34801bb3d5b869$export$3b3d5ef3c555d599).define($0f5a316a6a8083aa$export$3e91f6eae87714ce);\nfunction $0f5a316a6a8083aa$export$76d90c956114f2c2(items, template, options = $0f5a316a6a8083aa$var$defaultRepeatOptions) {\n    const dataBinding = (0, $b5c42f5d900245a1$export$6cdc818096b8be3c)(items);\n    const templateBinding = (0, $b5c42f5d900245a1$export$6cdc818096b8be3c)(template);\n    return new $0f5a316a6a8083aa$export$3e91f6eae87714ce(dataBinding, templateBinding, Object.assign(Object.assign({}, $0f5a316a6a8083aa$var$defaultRepeatOptions), options));\n}\n\n\n\n\nconst $f0500467d56d4fb6$var$slotEvent = \"slotchange\";\nclass $f0500467d56d4fb6$export$321a4334e9cbbbe2 extends (0, $cd46e5ddbf9444c5$export$755ec928f38200a4) {\n    /**\n     * Begins observation of the nodes.\n     * @param target - The target to observe.\n     */ observe(target) {\n        target.addEventListener($f0500467d56d4fb6$var$slotEvent, this);\n    }\n    /**\n     * Disconnects observation of the nodes.\n     * @param target - The target to unobserve.\n     */ disconnect(target) {\n        target.removeEventListener($f0500467d56d4fb6$var$slotEvent, this);\n    }\n    /**\n     * Retrieves the raw nodes that should be assigned to the source property.\n     * @param target - The target to get the node to.\n     */ getNodes(target) {\n        return target.assignedNodes(this.options);\n    }\n    /** @internal */ handleEvent(event) {\n        const target = event.currentTarget;\n        this.updateTarget(this.getSource(target), this.computeNodes(target));\n    }\n}\n(0, $cc34801bb3d5b869$export$3b3d5ef3c555d599).define($f0500467d56d4fb6$export$321a4334e9cbbbe2);\nfunction $f0500467d56d4fb6$export$e2355138873b532d(propertyOrOptions) {\n    if ((0, $3b68c0e8977f93f3$export$844ec244b1367d54)(propertyOrOptions)) propertyOrOptions = {\n        property: propertyOrOptions\n    };\n    return new $f0500467d56d4fb6$export$321a4334e9cbbbe2(propertyOrOptions);\n}\n\n\nconst $d89edc18265c27a8$var$noTemplate = ()=>null;\nfunction $d89edc18265c27a8$var$normalizeBinding(value) {\n    return value === undefined ? $d89edc18265c27a8$var$noTemplate : (0, $3b68c0e8977f93f3$export$f6e2535fb5126e54)(value) ? value : ()=>value;\n}\nfunction $d89edc18265c27a8$export$a55877ca9db47377(condition, templateOrTemplateBinding, elseTemplateOrTemplateBinding) {\n    const dataBinding = (0, $3b68c0e8977f93f3$export$f6e2535fb5126e54)(condition) ? condition : ()=>condition;\n    const templateBinding = $d89edc18265c27a8$var$normalizeBinding(templateOrTemplateBinding);\n    const elseBinding = $d89edc18265c27a8$var$normalizeBinding(elseTemplateOrTemplateBinding);\n    return (source, context)=>dataBinding(source, context) ? templateBinding(source, context) : elseBinding(source, context);\n}\n\n\n\nclass $31e6c2aa607ee0bb$export$7254cc27399e90bd {\n    constructor(value = null){\n        /** \n     * Propriété privée pour stocker l'historique des valeurs d'état, limitée aux 10 dernières entrées.\n    */ this._history = [];\n        /** \n     * Propriété privée pour stocker la valeur actuelle de l'état, initialisée à `null`.\n    */ this._value = null;\n        /** \n     * Propriété privée pour notifier les observateurs des changements d'état, initialisée avec `Observable.getNotifier`.\n    */ this._notifier = (0, $11afc8bee2de7865$export$77cea355fa80b5f4).getNotifier(this);\n        this._value = value;\n    }\n    /** \n   * Getter pour la valeur actuelle de l'état. Utilise `Observable.track` pour suivre les changements.\n  */ get value() {\n        (0, $11afc8bee2de7865$export$77cea355fa80b5f4).track(this, \"value\");\n        return this._value;\n    }\n    /**\n   * Setter pour mettre à jour la valeur de l'état. Ajoute la valeur actuelle à l'historique et notifie\n   * les observateurs du changement.\n   * @param {T} value - Nouvelle valeur de l'état.\n  */ set value(value) {\n        this._value = value;\n        this._history = [\n            this._value,\n            ...this._history.reverse()\n        ].reduce((results, value)=>{\n            if (results.length > 10) results.push(value);\n            return results;\n        }, []).reverse();\n        (0, $11afc8bee2de7865$export$77cea355fa80b5f4).notify(this, \"value\");\n    }\n    /**\n   * Méthode statique pour initialiser un nouvel objet `State` avec une valeur initiale facultative.\n   * @param {T} [value=null] - Valeur initiale de l'état.\n   * @returns Une nouvelle instance de `State` avec la valeur spécifiée.\n  */ static init(value = null) {\n        return new $31e6c2aa607ee0bb$export$7254cc27399e90bd(value);\n    }\n    /**\n   * Renvoie un tableau avec l'état actuel et une fonction pour mettre à jour l'état.\n   * @returns Un tableau contenant l'état actuel et une fonction de mise à jour.\n  */ get mutator() {\n        return [\n            this,\n            (value)=>{\n                this.value = value;\n            }\n        ];\n    }\n    /** \n   * Abonne une fonction de rappel qui sera appelée à chaque changement de valeur de l'état.\n   * @param {function} callback - Fonction à appeler lors d'un changement de valeur.\n  */ subscribe(callback) {\n        this._notifier.subscribe({\n            handleChange: (state, key)=>{\n                callback(state[key]);\n            }\n        });\n    }\n    /**\n   * Convertit l'état en une valeur primitive pour les objets, ou en Proxy pour les objets complexes.\n   * @returns La valeur primitive ou un Proxy pour les objets complexes.\n  */ [Symbol.toPrimitive]() {\n        return typeof this.value != \"object\" ? this.value : new Proxy(this.value, {\n            get (target, key) {\n                return target[key] ? target[key] : undefined;\n            }\n        });\n    }\n}\nfunction $31e6c2aa607ee0bb$export$e6a0daad8304de(value = null) {\n    return $31e6c2aa607ee0bb$export$7254cc27399e90bd.init(value).mutator;\n}\n\n\n\nclass $b5c7b0ba95a33835$var$$89fec59bbef2bb37$export$98c71376181af907 extends Map {\n    /**\n   * Initialise une nouvelle instance de la classe `_storage` avec des enregistrements initiaux facultatifs et un validateur optionnel.\n   * @param {RECORD} [records] - Un objet contenant des paires clé-valeur représentant des enregistrements de données.\n   * @param {StateValidator} [validator] - Une fonction de validation optionnelle appelée lors de la modification d'un état.\n   * @returns {Storage<RECORD>} Une nouvelle instance de la classe `_storage` initialisée avec les enregistrements et le validateur fournis.\n   * @example\n   * ```typescript\n   * const records = { count: 0, name: \"John\" };\n   * const storage = _storage.init(records);\n   * ```\n   */ static init(records, validator) {\n        return new $b5c7b0ba95a33835$var$$89fec59bbef2bb37$export$98c71376181af907(records, validator);\n    }\n    /**\n   * Constructeur qui initialise la classe `_storage` avec des enregistrements optionnels et un validateur.\n   * @param {RECORD} [records] - Un objet contenant des paires clé-valeur représentant des enregistrements de données.\n   * @param {StateValidator} [validator] - Une fonction de validation optionnelle appelée lors de la modification d'un état.\n   */ constructor(records, validator){\n        super();\n        this._validator = null;\n        if (validator) this._validator = validator;\n        // Si des enregistrements sont fournis, les ajouter au _storage\n        if (records) Object.keys(records).forEach((key)=>{\n            this.set(key, (0, $31e6c2aa607ee0bb$export$e6a0daad8304de)(records[key]));\n        });\n    }\n    /**\n   * Récupère la valeur du stockage en fonction d'une clé spécifiée.\n   * Si un validateur est défini, il valide la nouvelle valeur avant de l'appliquer.\n   * @template T - Le type de la valeur de l'état.\n   * @param {StorageKeys<RECORD>} key - La clé utilisée pour accéder à un enregistrement spécifique en stockage.\n   * @returns {State<T>[\"mutator\"]} La fonction `mutator` associée à la clé spécifiée de l'objet `State`.\n   * @example\n   * ```typescript\n   * const storage = _storage.init({ count: 0 });\n   * const [count, setCount] = storage.get(\"count\");\n   * setCount(10); // met à jour la valeur si la validation réussit\n   * ```\n   */ get(key) {\n        if (!this._validator) return super.get(key);\n        else {\n            let [state, setter] = super.get(key);\n            return [\n                state,\n                (newValue)=>{\n                    let previousValue = state.value;\n                    let result = this._validator(key, previousValue, newValue);\n                    if (result instanceof Promise) result.then(()=>setter(newValue)).catch((error)=>console.error(error));\n                    else if (result == true) setter(newValue);\n                }\n            ];\n        }\n    }\n}\nfunction $b5c7b0ba95a33835$export$d184a47a971dd4b9(records = {}, stateValidator) {\n    // Création d'un proxy contenant le stockage\n    return new Proxy($b5c7b0ba95a33835$var$$89fec59bbef2bb37$export$98c71376181af907.init(records, stateValidator), {\n        /**\n     * Intercepte les opérations d'accès aux propriétés du stockage.\n     * @param {Storage<RECORD>} target - L'objet cible auquel les opérations sont appliquées.\n     * @param {string} key - La clé de l'état ou de la méthode accédée.\n     * @param {any} receiver - L'objet Proxy qui intercepte l'opération.\n     * @returns {any} La méthode ou la valeur de l'état correspondant à la clé.\n     * @example\n     * ```typescript\n     * const storage = createStorage({ count: 0 });\n     * console.log(storage.count[0].value); // affiche 0\n     * storage.count ; // met à jour la valeur de count à 5\n     * ```\n    */ get (target, key, receiver) {\n            // Retourne les méthodes du stockage\n            if (target[key]) {\n                if (typeof target[key] == \"function\") return target[key].bind(target);\n                else return target[key];\n            } else if (target.has(key)) return target.get(key);\n            else return undefined;\n        },\n        /**\n     * Intercepte les opérations de mise à jour des propriétés du stockage.\n     * @param {Storage<RECORD>} target - L'objet cible auquel les opérations sont appliquées.\n     * @param {string} key - La clé de l'état à mettre à jour.\n     * @param {any} newValue - La nouvelle valeur à assigner à l'état.\n     * @param {any} receiver - L'objet Proxy qui intercepte l'opération.\n     * @returns {boolean} Un indicateur de succès de la mise à jour.\n     * @example\n     * ```typescript\n     * const storage = createStorage({ count: 0 });\n     * storage.count ; // met à jour la valeur de count à 5\n     * console.log(storage.count[0].value); // affiche 5\n     * ```\n    */ set (target, key, newValue, receiver) {\n            if (target.has(key)) {\n                // Mise à jour du state contenant la valeur\n                target.get(key)[1](newValue);\n                return true;\n            } else return undefined;\n        }\n    });\n}\n\n\nvar $f6d0b2db2e882702$exports = {};\n/* eslint-disable no-var, operator-linebreak */ var $4483ebefeee2609f$exports = {};\nvar $4483ebefeee2609f$var$win;\nif (typeof window !== \"undefined\") $4483ebefeee2609f$var$win = window;\nelse if (typeof $parcel$global !== \"undefined\") $4483ebefeee2609f$var$win = $parcel$global;\nelse if (typeof self !== \"undefined\") $4483ebefeee2609f$var$win = self;\nelse $4483ebefeee2609f$var$win = {};\n$4483ebefeee2609f$exports = $4483ebefeee2609f$var$win;\n\n\nvar $eca075ad100d834d$exports = {};\n\"use strict\";\n\n\n/**\n * @template {ArrayBufferView | null} T\n * @param {T} buf\n * @returns {T}\n */ function $f6d0b2db2e882702$var$getRandomValues(buf) {\n    if ($4483ebefeee2609f$exports.crypto && $4483ebefeee2609f$exports.crypto.getRandomValues) return $4483ebefeee2609f$exports.crypto.getRandomValues(buf);\n    if (typeof $4483ebefeee2609f$exports.msCrypto === \"object\" && typeof $4483ebefeee2609f$exports.msCrypto.getRandomValues === \"function\") return $4483ebefeee2609f$exports.msCrypto.getRandomValues(buf);\n    if ($eca075ad100d834d$exports.randomBytes) {\n        if (!(buf instanceof Uint8Array)) throw new TypeError(\"expected Uint8Array\");\n        if (buf.length > 65536) {\n            var e = new Error();\n            // @ts-expect-error\n            e.code = 22;\n            e.message = \"Failed to execute 'getRandomValues' on 'Crypto': The ArrayBufferView's byte length (\" + buf.length + \") exceeds the \" + \"number of bytes of entropy available via this API (65536).\";\n            e.name = \"QuotaExceededError\";\n            throw e;\n        }\n        var bytes = $eca075ad100d834d$exports.randomBytes(buf.length);\n        buf.set(bytes);\n        return buf;\n    } else throw new Error(\"No secure random number generator available.\");\n}\n$f6d0b2db2e882702$exports = $f6d0b2db2e882702$var$getRandomValues;\n\n\n// ===============================================\n// https://www.npmjs.com/package/get-random-values\n// ===============================================\nclass $62068595a8a6c46f$export$74e446f6456d826d extends String {\n    /**\n   * Obtient l'identifiant de composant en extrayant la première partie de l'UUID.\n   * @returns L'identifiant de composant.\n   * @example\n   * ```typescript\n   *  const uuid = new _HUID('123456789012-1234-5678-90ab-abcdefabcdef');\n   *  console.log(uuid.componentId); // '123456789012'\n   * ```\n  */ get componentId() {\n        return this.split(\"-\")[0];\n    }\n    /**\n   * Obtient la première section de l'UUID après division par '-'.\n   * @returns La première section de l'UUID.\n   * @example\n   * ```typescript\n   *  const uuid = new _HUID('123456789012-1234-5678-90ab-abcdefabcdef');\n   *  console.log(uuid.section1); // '1234'\n   * ```\n  */ get section1() {\n        return this.split(\"-\")[1];\n    }\n    /**\n   * Obtient la deuxième section de l'UUID après division par '-'.\n   * @returns La deuxième section de l'UUID.\n   * @example\n   * ```typescipt\n   *  const uuid = new _HUID('123456789012-1234-5678-90ab-abcdefabcdef');\n   *  console.log(uuid.section2); // '5678'\n   * ```\n  */ get section2() {\n        return this.split(\"-\")[2];\n    }\n    /**\n   * Obtient la troisième section de l'UUID après division par '-'.\n   * @returns La troisième section de l'UUID.\n   * @example\n   * ```typescript\n   *  const uuid = new _HUID('123456789012-1234-5678-90ab-abcdefabcdef');\n   *  console.log(uuid.section3); // '90ab'\n   * ```\n  */ get section3() {\n        return this.split(\"-\")[3];\n    }\n    /**\n   * Obtient l'identifiant de collection en extrayant la cinquième partie de l'UUID.\n   * @returns L'identifiant de collection.\n   * @example\n   * ```typescript\n   *  const uuid = new _HUID('123456789012-1234-5678-90ab-abcdefabcdef');\n   *  console.log(uuid.collectionId); // 'abcdefabcdef'\n   * ```\n  */ get collectionId() {\n        return this.split(\"-\")[4];\n    }\n    /**\n   * Obtient l'identifiant parent en concaténant les sections 1, 2 et 3.\n   * @returns L'identifiant parent.\n   * @example\n   * ```typescript\n   *  const uuid = new _HUID('123456789012-1234-5678-90ab-abcdefabcdef');\n   *  console.log(uuid.parentId); // '1234567890ab'\n   * ```\n  */ get parentId() {\n        return [\n            this.section1,\n            this.section2,\n            this.section3\n        ].join(\"\");\n    }\n    /**\n   * Étend l'UUID hiérarchique avec des options personnalisées.\n   * @param {HierarchicalUUIDOptions} [options] - Options pour personnaliser l'UUID.\n   * @returns Un nouvel UUID hiérarchique (_HUID).\n   * @example\n   * ```typescript\n   *  const uuid = new _HUID('123456789012-1234-5678-90ab-abcdefabcdef');\n   *  const extendedUUID = uuid.extend({ parentId: '098765432109', collectionId: 'abcdefabcdef' });\n   *  console.log(extendedUUID); // Un nouvel _HUID avec les sections mises à jour.\n   * ```\n  */ extend(options) {\n        return $62068595a8a6c46f$export$31b40729666a4ae0.hv1({\n            parentId: this.componentId,\n            collectionId: this.collectionId\n        });\n    }\n}\nclass $62068595a8a6c46f$export$31b40729666a4ae0 {\n    /**\n   * Obtient une valeur par défaut pour l'identifiant de composant.\n   * @returns '000000000000' en tant que ComponentId.\n  */ static get componentId() {\n        return \"000000000000\";\n    }\n    /**\n   * Obtient une valeur par défaut pour la première section de l'UUID.\n   * @returns '0000' en tant que Segment.\n  */ static get segment1() {\n        return \"0000\";\n    }\n    /**\n   * Obtient une valeur par défaut pour la deuxième section de l'UUID.\n   * @returns '0000' en tant que Segment.\n  */ static get segment2() {\n        return \"0000\";\n    }\n    /**\n   * Obtient une valeur par défaut pour la troisième section de l'UUID.\n   * @returns '0000' en tant que Segment.\n  */ static get segment3() {\n        return \"0000\";\n    }\n    /**\n   * Obtient une valeur par défaut pour l'identifiant de collection.\n   * @returns '000000000000' en tant que CollectionId.\n  */ static get collectionId() {\n        return \"000000000000\";\n    }\n    /**\n   * Obtient un UUID NIL (null) par défaut.\n   * @returns L'UUID NIL sous forme de chaîne.\n  */ static get NIL() {\n        return new $62068595a8a6c46f$export$74e446f6456d826d(`${$62068595a8a6c46f$export$31b40729666a4ae0.componentId}-${$62068595a8a6c46f$export$31b40729666a4ae0.segment1}-${$62068595a8a6c46f$export$31b40729666a4ae0.segment2}-${$62068595a8a6c46f$export$31b40729666a4ae0.segment3}-${$62068595a8a6c46f$export$31b40729666a4ae0.collectionId}`);\n    }\n    /**\n   * Encode une chaîne de longueur fixe en remplaçant certains caractères par des valeurs hexadécimales aléatoires.\n   * @param chaine - Une chaîne de longueur fixe.\n   * @returns Une chaîne de longueur fixe avec des valeurs hexadécimales aléatoires.\n   * @example\n   * ```typescript\n   *  const encoded = uuid.encode('123456789012');\n   *  console.log(encoded); // '1a2b3c4d5e6f'\n   * ```\n  */ static encode(chaine) {\n        return chaine.replace(/[018]/g, (c)=>{\n            return (c ^ (0, (/*@__PURE__*/$parcel$interopDefault($f6d0b2db2e882702$exports)))(new Uint8Array(1))[0] & 15 >> c / 4).toString(16);\n        });\n    }\n    /**\n   * Génère un UUID de version 4 en utilisant des valeurs aléatoires.\n   * @returns Un UUID de version 4 sous forme de chaîne.\n   * @example\n   * ```typescript\n   *  const uuidV4 = uuid.v4();\n   *  console.log(uuidV4); // Un UUID de version 4.\n   * ```\n  */ static v4() {\n        return $62068595a8a6c46f$export$31b40729666a4ae0.NIL.replace(/[018]/g, (c)=>{\n            return (c ^ (0, (/*@__PURE__*/$parcel$interopDefault($f6d0b2db2e882702$exports)))(new Uint8Array(1))[0] & 15 >> c / 4).toString(16);\n        });\n    }\n    /**\n   * Génère un UUID hiérarchique en fonction des options fournies.\n   * @param {HierarchicalUUIDOptions} [options] - Options pour personnaliser l'UUID.\n   * @returns Un nouvel UUID hiérarchique (_HUID).\n   * @example\n   * ```typescript\n   *  const hierarchicalUUID = uuid.hv1({ parentId: '123456789012', collectionId: 'abcdefabcdef' });\n   *  console.log(hierarchicalUUID); // Un nouvel UUID hiérarchique (_HUID).\n   * ```\n  */ static hv1(options) {\n        if (!options) options = {\n            parentId: null,\n            collectionId: null\n        };\n        let componentId = $62068595a8a6c46f$export$31b40729666a4ae0.encode($62068595a8a6c46f$export$31b40729666a4ae0.componentId);\n        let segment1 = $62068595a8a6c46f$export$31b40729666a4ae0.encode($62068595a8a6c46f$export$31b40729666a4ae0.segment1);\n        let segment2 = $62068595a8a6c46f$export$31b40729666a4ae0.encode($62068595a8a6c46f$export$31b40729666a4ae0.segment2);\n        let segment3 = $62068595a8a6c46f$export$31b40729666a4ae0.encode($62068595a8a6c46f$export$31b40729666a4ae0.segment3);\n        let collectionId = $62068595a8a6c46f$export$31b40729666a4ae0.encode($62068595a8a6c46f$export$31b40729666a4ae0.collectionId);\n        if (options.parentId && options.parentId.length == 12) {\n            segment1 = options.parentId.slice(0, 4);\n            segment2 = options.parentId.slice(4, 8);\n            segment3 = options.parentId.slice(8, 12);\n        } else console.error(\"parentId.length exeded 12 char length.\");\n        if (options.collectionId) collectionId = options.collectionId;\n        return new $62068595a8a6c46f$export$74e446f6456d826d(`${componentId}-${segment1}-${segment2}-${segment3}-${collectionId}`);\n    }\n}\n\n\nfunction $01b13827b3d331b3$var$$parcel$export(e, n, v, s) {\n    Object.defineProperty(e, n, {\n        get: v,\n        set: s,\n        enumerable: true,\n        configurable: true\n    });\n}\nfunction $01b13827b3d331b3$var$$parcel$exportWildcard(dest, source) {\n    Object.keys(source).forEach(function(key) {\n        if (key === \"default\" || key === \"__esModule\" || Object.prototype.hasOwnProperty.call(dest, key)) return;\n        Object.defineProperty(dest, key, {\n            enumerable: true,\n            get: function get() {\n                return source[key];\n            }\n        });\n    });\n    return dest;\n}\nvar $01b13827b3d331b3$var$$ed2a677aa7485959$exports = {};\n$01b13827b3d331b3$var$$parcel$export($01b13827b3d331b3$var$$ed2a677aa7485959$exports, \"ComponentExecutionContext\", ()=>$01b13827b3d331b3$export$6dad889f9b7e7685);\n$01b13827b3d331b3$var$$parcel$export($01b13827b3d331b3$var$$ed2a677aa7485959$exports, \"render\", ()=>$01b13827b3d331b3$export$b3890eb0ae9dca99);\nclass $01b13827b3d331b3$export$b176171395436676 extends Object {\n    static init(initialObject) {\n        let observabe = new $01b13827b3d331b3$export$b176171395436676(initialObject);\n        return observabe.createProxy();\n    }\n    constructor(initialObject){\n        super();\n        this.$data = {};\n        this.set = (key, value)=>{\n            this.$data[`_${key}`] = value;\n            (0, $11afc8bee2de7865$export$77cea355fa80b5f4).defineProperty(this.$data, key);\n            return this.$data[key];\n        };\n        Object.keys(initialObject).forEach((key)=>{\n            this.set(key, initialObject[key]);\n        });\n    }\n    createProxy() {\n        return new Proxy(this.$data, {\n            get (store, propKey) {\n                let result = undefined;\n                try {\n                    result = store[propKey];\n                } catch (error) {\n                    console.error(error);\n                } finally{\n                    return result;\n                }\n            },\n            set (store, propKey, value) {\n                if (store[propKey]) store[propKey] = value;\n                else {\n                    store[`_${propKey}`] = value;\n                    (0, $11afc8bee2de7865$export$77cea355fa80b5f4).defineProperty(store, propKey);\n                }\n                return true;\n            }\n        });\n    }\n}\nfunction $01b13827b3d331b3$export$dcc5cf24d8fb3b41(initialObject) {\n    return $01b13827b3d331b3$export$b176171395436676.init(initialObject);\n}\nvar $01b13827b3d331b3$var$$535bb7ac3b1a1d6d$exports = {};\nvar $01b13827b3d331b3$var$$b1b98f19caab25c2$exports = {};\n$01b13827b3d331b3$var$$parcel$export($01b13827b3d331b3$var$$b1b98f19caab25c2$exports, \"attrState\", ()=>$01b13827b3d331b3$export$683a0e8baad8b9c3);\n$01b13827b3d331b3$var$$parcel$export($01b13827b3d331b3$var$$b1b98f19caab25c2$exports, \"attr\", ()=>(0, $d78e6668348adb99$export$7aabe8b3a840d2fd));\nvar $01b13827b3d331b3$var$$a1f8df21dd3b8ee9$exports = {};\n$01b13827b3d331b3$var$$parcel$export($01b13827b3d331b3$var$$a1f8df21dd3b8ee9$exports, \"state\", ()=>$01b13827b3d331b3$export$ca000e230c0caa3e);\nfunction $01b13827b3d331b3$export$ca000e230c0caa3e(target, propertyKey, value = null, constructible = false) {\n    if (constructible) target.constructor.states = target.constructor.states || {};\n    Object.defineProperty(target, propertyKey, {\n        get () {\n            return target.$states[propertyKey];\n        },\n        set (newValue) {\n            target.$states[propertyKey] = newValue;\n            return true;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    (0, $11afc8bee2de7865$export$5ab46cbf6120b33a)(target, propertyKey);\n    if (value) target[propertyKey] = value;\n}\nfunction $01b13827b3d331b3$export$683a0e8baad8b9c3(options = {}) {\n    return (target, propertyKey)=>{\n        (0, $d78e6668348adb99$export$7aabe8b3a840d2fd)(options)(target, propertyKey);\n        $01b13827b3d331b3$export$ca000e230c0caa3e(target, propertyKey);\n    };\n}\n$01b13827b3d331b3$var$$parcel$exportWildcard($01b13827b3d331b3$var$$535bb7ac3b1a1d6d$exports, $01b13827b3d331b3$var$$b1b98f19caab25c2$exports);\n$01b13827b3d331b3$var$$parcel$exportWildcard($01b13827b3d331b3$var$$535bb7ac3b1a1d6d$exports, $01b13827b3d331b3$var$$a1f8df21dd3b8ee9$exports);\nfunction $01b13827b3d331b3$var$$ed2a677aa7485959$var$_classPrivateFieldLooseBase(e, t) {\n    if (!({}).hasOwnProperty.call(e, t)) throw new TypeError(\"attempted to use private field on non-instance\");\n    return e;\n}\nvar $01b13827b3d331b3$var$$ed2a677aa7485959$var$id = 0;\nfunction $01b13827b3d331b3$var$$ed2a677aa7485959$var$_classPrivateFieldLooseKey(e) {\n    return \"__private_\" + $01b13827b3d331b3$var$$ed2a677aa7485959$var$id++ + \"_\" + e;\n}\n// import './router/index.js'\n// import './application/index.js'\nvar $01b13827b3d331b3$var$$ed2a677aa7485959$var$_state_keys = /*#__PURE__*/ $01b13827b3d331b3$var$$ed2a677aa7485959$var$_classPrivateFieldLooseKey(\"_state_keys\");\nclass $01b13827b3d331b3$export$6dad889f9b7e7685 {\n    get states() {\n        return this.$states;\n    }\n    constructor(data){\n        this.$states = $01b13827b3d331b3$export$b176171395436676.init({});\n        Object.defineProperty(this, $01b13827b3d331b3$var$$ed2a677aa7485959$var$_state_keys, {\n            writable: true,\n            value: []\n        });\n        this.createState = (key, value)=>{\n            if ($01b13827b3d331b3$var$$ed2a677aa7485959$var$_classPrivateFieldLooseBase(this, $01b13827b3d331b3$var$$ed2a677aa7485959$var$_state_keys)[$01b13827b3d331b3$var$$ed2a677aa7485959$var$_state_keys].includes(key)) return this.useState(key);\n            Object.defineProperty(this, key, {\n                get () {\n                    return JSON.parse(this.states[key]);\n                },\n                set (value) {\n                    if (!$01b13827b3d331b3$var$$ed2a677aa7485959$var$_classPrivateFieldLooseBase(this, $01b13827b3d331b3$var$$ed2a677aa7485959$var$_state_keys)[$01b13827b3d331b3$var$$ed2a677aa7485959$var$_state_keys].includes(key)) {\n                        $01b13827b3d331b3$var$$ed2a677aa7485959$var$_classPrivateFieldLooseBase(this, $01b13827b3d331b3$var$$ed2a677aa7485959$var$_state_keys)[$01b13827b3d331b3$var$$ed2a677aa7485959$var$_state_keys].push(key);\n                        this.$states = $01b13827b3d331b3$export$b176171395436676.init({\n                            [key]: JSON.stringify(value),\n                            ...Object.fromEntries(new Map(Array.from($01b13827b3d331b3$var$$ed2a677aa7485959$var$_classPrivateFieldLooseBase(this, $01b13827b3d331b3$var$$ed2a677aa7485959$var$_state_keys)[$01b13827b3d331b3$var$$ed2a677aa7485959$var$_state_keys], (key)=>{\n                                return [\n                                    key,\n                                    this.$states[`${key}`]\n                                ];\n                            })))\n                        });\n                    }\n                    this.$states[key] = JSON.stringify(value);\n                }\n            });\n            this[key] = value;\n            return this.useState(key);\n        };\n        this.useState = (key)=>{\n            return [\n                this[key],\n                (newValue)=>{\n                    console.log({\n                        newValue: newValue\n                    });\n                    this[key] = newValue;\n                }\n            ];\n        };\n        this.createConsumable = (key, value)=>{\n            $01b13827b3d331b3$export$ca000e230c0caa3e(this, key, value, false);\n        };\n        Object.assign(this, data);\n    }\n    static init(data) {\n        return new $01b13827b3d331b3$export$6dad889f9b7e7685(data);\n    }\n}\nfunction $01b13827b3d331b3$export$b3890eb0ae9dca99(template, container = document.body, data = {}) {\n    let context = $01b13827b3d331b3$export$6dad889f9b7e7685.init(data);\n    return template.render(context, container);\n} // export * from './router';\n// export * from './application/index.js';\nvar $01b13827b3d331b3$var$$5193209399721411$exports = {};\n$01b13827b3d331b3$var$$parcel$export($01b13827b3d331b3$var$$5193209399721411$exports, \"when\", ()=>(0, $d89edc18265c27a8$export$a55877ca9db47377));\n$01b13827b3d331b3$var$$parcel$export($01b13827b3d331b3$var$$5193209399721411$exports, \"repeat\", ()=>(0, $0f5a316a6a8083aa$export$76d90c956114f2c2));\n$01b13827b3d331b3$var$$parcel$export($01b13827b3d331b3$var$$5193209399721411$exports, \"children\", ()=>(0, $355868edc94eec3f$export$bacb5cc5a11aef16));\n$01b13827b3d331b3$var$$parcel$export($01b13827b3d331b3$var$$5193209399721411$exports, \"elements\", ()=>(0, $cd46e5ddbf9444c5$export$7a5d735b2ab6389d));\n$01b13827b3d331b3$var$$parcel$export($01b13827b3d331b3$var$$5193209399721411$exports, \"slotted\", ()=>(0, $f0500467d56d4fb6$export$e2355138873b532d));\nvar $01b13827b3d331b3$var$$21522158c10703ef$exports = {};\n$01b13827b3d331b3$var$$parcel$export($01b13827b3d331b3$var$$21522158c10703ef$exports, \"AsyncAppendBindig\", ()=>$01b13827b3d331b3$export$ca3487b83ec6860a);\n$01b13827b3d331b3$var$$parcel$export($01b13827b3d331b3$var$$21522158c10703ef$exports, \"AsyncAppendDirective\", ()=>$01b13827b3d331b3$export$5761d9f85430a54b);\n$01b13827b3d331b3$var$$parcel$export($01b13827b3d331b3$var$$21522158c10703ef$exports, \"asyncAppend\", ()=>$01b13827b3d331b3$export$eaa89ade56b7c0c1);\nclass $01b13827b3d331b3$export$ca3487b83ec6860a extends (0, $90d39a98aede8ee9$export$f4f50f872cf9bd86) {\n    createObserver(subscriber, directive) {\n        console.log({\n            subscriber: subscriber,\n            directive: directive\n        });\n        return {\n            bind (controller) {\n                console.log({\n                    controller: controller\n                });\n            }\n        };\n    }\n}\nclass $01b13827b3d331b3$export$5761d9f85430a54b extends (0, $3302dfbf2f7c135c$export$c590b280af2e6950) {\n    constructor(fn, callback){\n        super(new $01b13827b3d331b3$export$ca3487b83ec6860a((x)=>null));\n        this.fn = null;\n        this.callback = null;\n        Object.assign(this, {\n            fn: fn,\n            callback: callback\n        });\n    }\n    createBehavior() {\n        let { targetNodeId: targetNodeId } = this;\n        return {\n            bind: (source)=>{\n                let target = source.targets[targetNodeId];\n                this.fn.then((result)=>{\n                    this.callback(result).render(source, target instanceof HTMLElement ? target : target.parentElement);\n                }).catch((error)=>{\n                    console.error(error);\n                    (0, $13859427fd7d4158$export$c0bb0b647f701bb5)`<span>Error: ${error}</span>`.render(source, target instanceof HTMLElement ? target : target.parentElement);\n                });\n            },\n            unbind: ()=>{\n            // Nettoyage si nécessaire\n            }\n        };\n    }\n    static use(fn, callback) {\n        return new $01b13827b3d331b3$export$5761d9f85430a54b(fn, callback);\n    }\n}\n(0, $cc34801bb3d5b869$export$3b3d5ef3c555d599).define($01b13827b3d331b3$export$5761d9f85430a54b);\nconst $01b13827b3d331b3$export$eaa89ade56b7c0c1 = (fn, callback)=>$01b13827b3d331b3$export$5761d9f85430a54b.use(fn, callback);\nvar $01b13827b3d331b3$var$$f6651d38d609160e$exports = {};\n$01b13827b3d331b3$var$$parcel$export($01b13827b3d331b3$var$$f6651d38d609160e$exports, \"createRef\", ()=>$01b13827b3d331b3$export$7d1e3a5e95ceca43);\n$01b13827b3d331b3$var$$parcel$export($01b13827b3d331b3$var$$f6651d38d609160e$exports, \"RefDirective\", ()=>$01b13827b3d331b3$export$1ef8aea9a6de98d);\n$01b13827b3d331b3$var$$parcel$export($01b13827b3d331b3$var$$f6651d38d609160e$exports, \"ref\", ()=>$01b13827b3d331b3$export$eff4d24c3ff7876e);\nfunction $01b13827b3d331b3$export$7d1e3a5e95ceca43() {\n    return {\n        value: null\n    };\n}\nclass $01b13827b3d331b3$export$1ef8aea9a6de98d extends (0, $cc34801bb3d5b869$export$683728dd3b823b8d) {\n    constructor(options){\n        super(options);\n        this.options = null;\n        Object.assign(this, {\n            options: options\n        });\n    }\n    bind(controller) {\n        let { lastChild: target } = controller;\n        this.options.value = target;\n    }\n    static use(options) {\n        return new $01b13827b3d331b3$export$1ef8aea9a6de98d(options);\n    }\n}\n(0, $cc34801bb3d5b869$export$3b3d5ef3c555d599).define($01b13827b3d331b3$export$1ef8aea9a6de98d);\nconst $01b13827b3d331b3$export$eff4d24c3ff7876e = (options)=>$01b13827b3d331b3$export$1ef8aea9a6de98d.use(options);\nvar $01b13827b3d331b3$var$$c66c6ea353620255$exports = {};\n$01b13827b3d331b3$var$$parcel$export($01b13827b3d331b3$var$$c66c6ea353620255$exports, \"StateBindig\", ()=>$01b13827b3d331b3$export$28205fa712822499);\n$01b13827b3d331b3$var$$parcel$export($01b13827b3d331b3$var$$c66c6ea353620255$exports, \"StateDirective\", ()=>$01b13827b3d331b3$export$792c882b75ca2192);\n$01b13827b3d331b3$var$$parcel$export($01b13827b3d331b3$var$$c66c6ea353620255$exports, \"useState\", ()=>$01b13827b3d331b3$export$60241385465d0a34);\n// import { ViewTemplate, HTMLBindingDirective, ExecutionContext } from '@microsoft/fast-element';\nclass $01b13827b3d331b3$export$28205fa712822499 extends (0, $90d39a98aede8ee9$export$f4f50f872cf9bd86) {\n    createObserver(subscriber, directive) {\n        console.log({\n            subscriber: subscriber,\n            directive: directive\n        });\n        return {\n            bind (controller) {\n                console.log({\n                    controller: controller\n                });\n            }\n        };\n    }\n}\nclass $01b13827b3d331b3$export$792c882b75ca2192 extends (0, $3302dfbf2f7c135c$export$c590b280af2e6950) {\n    get state() {\n        return this._state.mutator[0];\n    }\n    set state(value) {\n        this._state.mutator[1](value);\n    }\n    constructor(state, callback){\n        super(new $01b13827b3d331b3$export$28205fa712822499((x)=>null));\n        this._state = null;\n        this._callback = null;\n        this._state = state;\n        this._callback = callback;\n    }\n    createBehavior() {\n        let { targetNodeId: targetNodeId } = this;\n        let view = null;\n        return {\n            bind: (source)=>{\n                let target = source.targets[targetNodeId];\n                if (this._callback) {\n                    this._state.subscribe(()=>{\n                        view.dispose();\n                        view = this._callback(this.state).render(source, target.parentElement);\n                    });\n                    view = this._callback(this.state).render(source, target.parentElement);\n                } else {\n                    this._state.subscribe(()=>{\n                        if (\"textContent\" in target) target.textContent = `${this.state}`;\n                    });\n                    if (\"textContent\" in target) target.textContent = `${this.state}`;\n                }\n            },\n            unbind: ()=>{\n            // Nettoyage si nécessaire\n            }\n        };\n    }\n    static use(state, callback) {\n        return new $01b13827b3d331b3$export$792c882b75ca2192(state, callback);\n    }\n}\n(0, $cc34801bb3d5b869$export$3b3d5ef3c555d599).define($01b13827b3d331b3$export$792c882b75ca2192);\nconst $01b13827b3d331b3$export$60241385465d0a34 = (state, callback)=>$01b13827b3d331b3$export$792c882b75ca2192.use(state, callback);\nvar $01b13827b3d331b3$var$$6e530dd7df9f7fe5$exports = {};\n$01b13827b3d331b3$var$$parcel$export($01b13827b3d331b3$var$$6e530dd7df9f7fe5$exports, \"StyleBindig\", ()=>$01b13827b3d331b3$export$81053cd05d55c9d8);\n$01b13827b3d331b3$var$$parcel$export($01b13827b3d331b3$var$$6e530dd7df9f7fe5$exports, \"StyleDirective\", ()=>$01b13827b3d331b3$export$18211b6e76035cfa);\n$01b13827b3d331b3$var$$parcel$export($01b13827b3d331b3$var$$6e530dd7df9f7fe5$exports, \"style\", ()=>$01b13827b3d331b3$export$1d567c320f4763bc);\nclass $01b13827b3d331b3$export$81053cd05d55c9d8 extends (0, $90d39a98aede8ee9$export$f4f50f872cf9bd86) {\n    createObserver(subscriber, directive) {\n        console.log({\n            subscriber: subscriber,\n            directive: directive\n        });\n        return {\n            bind (controller) {\n                console.log({\n                    controller: controller\n                });\n            }\n        };\n    }\n}\nclass $01b13827b3d331b3$export$18211b6e76035cfa extends (0, $3302dfbf2f7c135c$export$c590b280af2e6950) {\n    constructor(css){\n        super(new $01b13827b3d331b3$export$81053cd05d55c9d8((x)=>null));\n        this.css = null;\n        Object.assign(this, {\n            css: css\n        });\n    }\n    createBehavior() {\n        let { targetNodeId: targetNodeId } = this;\n        let view = null;\n        return {\n            bind: (source)=>{\n                let target = source.targets[targetNodeId];\n                if (target instanceof HTMLElement) Object.assign(target.style, this.css);\n            },\n            unbind: ()=>{\n            // Nettoyage si nécessaire\n            }\n        };\n    }\n    static use(css) {\n        return new $01b13827b3d331b3$export$18211b6e76035cfa(css);\n    }\n}\n(0, $cc34801bb3d5b869$export$3b3d5ef3c555d599).define($01b13827b3d331b3$export$18211b6e76035cfa);\nconst $01b13827b3d331b3$export$1d567c320f4763bc = (css)=>$01b13827b3d331b3$export$18211b6e76035cfa.use(css);\nvar $01b13827b3d331b3$var$$15db1e855f042fe6$exports = {};\n$01b13827b3d331b3$var$$parcel$export($01b13827b3d331b3$var$$15db1e855f042fe6$exports, \"UntilBindig\", ()=>$01b13827b3d331b3$export$f36d8f10294685f8);\n$01b13827b3d331b3$var$$parcel$export($01b13827b3d331b3$var$$15db1e855f042fe6$exports, \"UntilDirective\", ()=>$01b13827b3d331b3$export$51c6edf8ee19b71a);\n$01b13827b3d331b3$var$$parcel$export($01b13827b3d331b3$var$$15db1e855f042fe6$exports, \"until\", ()=>$01b13827b3d331b3$export$a40009bd2c363351);\nclass $01b13827b3d331b3$export$f36d8f10294685f8 extends (0, $90d39a98aede8ee9$export$f4f50f872cf9bd86) {\n    createObserver(subscriber, directive) {\n        console.log({\n            subscriber: subscriber,\n            directive: directive\n        });\n        return {\n            bind (controller) {\n                console.log({\n                    controller: controller\n                });\n            }\n        };\n    }\n}\nclass $01b13827b3d331b3$export$51c6edf8ee19b71a extends (0, $3302dfbf2f7c135c$export$c590b280af2e6950) {\n    constructor(fn, template){\n        super(new $01b13827b3d331b3$export$f36d8f10294685f8((x)=>null));\n        this.fn = null;\n        this.template = null;\n        Object.assign(this, {\n            fn: fn,\n            template: template\n        });\n    }\n    createBehavior() {\n        let { targetNodeId: targetNodeId } = this;\n        return {\n            bind: (source)=>{\n                let target = source.targets[targetNodeId];\n                let loading = this.template.render(source, target instanceof HTMLElement ? target : target.parentElement);\n                this.fn.then((result)=>{\n                    loading.dispose();\n                    result.render(source, target instanceof HTMLElement ? target : target.parentElement);\n                }).catch((error)=>{\n                    console.error(error);\n                    loading.dispose();\n                    (0, $13859427fd7d4158$export$c0bb0b647f701bb5)`<span>Error: ${error}</span>`.render(source, target instanceof HTMLElement ? target : target.parentElement);\n                });\n            },\n            unbind: ()=>{\n            // Nettoyage si nécessaire\n            }\n        };\n    }\n    static use(fn, template) {\n        return new $01b13827b3d331b3$export$51c6edf8ee19b71a(fn, template);\n    }\n}\n(0, $cc34801bb3d5b869$export$3b3d5ef3c555d599).define($01b13827b3d331b3$export$51c6edf8ee19b71a);\nconst $01b13827b3d331b3$export$a40009bd2c363351 = (fn, template)=>$01b13827b3d331b3$export$51c6edf8ee19b71a.use(fn, template);\n$01b13827b3d331b3$var$$parcel$exportWildcard($01b13827b3d331b3$var$$5193209399721411$exports, $01b13827b3d331b3$var$$21522158c10703ef$exports);\n$01b13827b3d331b3$var$$parcel$exportWildcard($01b13827b3d331b3$var$$5193209399721411$exports, $01b13827b3d331b3$var$$f6651d38d609160e$exports);\n$01b13827b3d331b3$var$$parcel$exportWildcard($01b13827b3d331b3$var$$5193209399721411$exports, $01b13827b3d331b3$var$$c66c6ea353620255$exports);\n$01b13827b3d331b3$var$$parcel$exportWildcard($01b13827b3d331b3$var$$5193209399721411$exports, $01b13827b3d331b3$var$$6e530dd7df9f7fe5$exports);\n$01b13827b3d331b3$var$$parcel$exportWildcard($01b13827b3d331b3$var$$5193209399721411$exports, $01b13827b3d331b3$var$$15db1e855f042fe6$exports);\nvar $01b13827b3d331b3$var$$fde9406d76ec24a9$exports = {};\n$01b13827b3d331b3$var$$parcel$export($01b13827b3d331b3$var$$fde9406d76ec24a9$exports, \"Observable\", ()=>$01b13827b3d331b3$export$77cea355fa80b5f4);\n$01b13827b3d331b3$var$$parcel$export($01b13827b3d331b3$var$$fde9406d76ec24a9$exports, \"createObservableObject\", ()=>$01b13827b3d331b3$export$dcc5cf24d8fb3b41);\n$01b13827b3d331b3$var$$parcel$export($01b13827b3d331b3$var$$fde9406d76ec24a9$exports, \"ObservableObject\", ()=>$01b13827b3d331b3$export$b176171395436676);\n$01b13827b3d331b3$var$$parcel$export($01b13827b3d331b3$var$$fde9406d76ec24a9$exports, \"State\", ()=>(0, $31e6c2aa607ee0bb$export$7254cc27399e90bd));\n$01b13827b3d331b3$var$$parcel$export($01b13827b3d331b3$var$$fde9406d76ec24a9$exports, \"createState\", ()=>(0, $31e6c2aa607ee0bb$export$e6a0daad8304de));\n$01b13827b3d331b3$var$$parcel$export($01b13827b3d331b3$var$$fde9406d76ec24a9$exports, \"createStorage\", ()=>(0, $b5c7b0ba95a33835$export$d184a47a971dd4b9));\n$01b13827b3d331b3$var$$parcel$export($01b13827b3d331b3$var$$fde9406d76ec24a9$exports, \"uuid\", ()=>(0, $62068595a8a6c46f$export$31b40729666a4ae0));\n// export{\n//   Observable,\n//   volatile,\n// State,\n// createState,\n// createStorage,\n// Storage, \n// StorageKeys, \n// StorageValues, \n// StateValidator,\n// ComponentId,\n// Segment,\n// ParentSegementId,\n// CollectionId,\n// HUID,\n// HierarchicalUUIDOptions,\n// uuid\n// }\nvar $01b13827b3d331b3$var$$c5a7ff2cef84a00c$exports = {};\n$01b13827b3d331b3$var$$parcel$export($01b13827b3d331b3$var$$c5a7ff2cef84a00c$exports, \"html\", ()=>$01b13827b3d331b3$export$c0bb0b647f701bb5);\n$01b13827b3d331b3$var$$parcel$export($01b13827b3d331b3$var$$c5a7ff2cef84a00c$exports, \"customElement\", ()=>(0, $718243fe498ffbb9$export$da64fc29f17f9d0e));\n$01b13827b3d331b3$var$$parcel$export($01b13827b3d331b3$var$$c5a7ff2cef84a00c$exports, \"css\", ()=>(0, $980f24b602662b21$export$dbf350e5966cf602));\n$01b13827b3d331b3$var$$parcel$export($01b13827b3d331b3$var$$c5a7ff2cef84a00c$exports, \"ViewTemplate\", ()=>(0, $13859427fd7d4158$export$98f7e629c251afe6));\n$01b13827b3d331b3$var$$parcel$export($01b13827b3d331b3$var$$c5a7ff2cef84a00c$exports, \"HTMLView\", ()=>(0, $b2fda19b3cbf824f$export$1b0b7079c4551d79));\n$01b13827b3d331b3$var$$parcel$export($01b13827b3d331b3$var$$c5a7ff2cef84a00c$exports, \"volatile\", ()=>(0, $11afc8bee2de7865$export$e338fff42eed603a));\n$01b13827b3d331b3$var$$parcel$export($01b13827b3d331b3$var$$c5a7ff2cef84a00c$exports, \"WebComponent\", ()=>$01b13827b3d331b3$export$7f8b9f308979d41d);\nclass $01b13827b3d331b3$export$7f8b9f308979d41d extends (0, $718243fe498ffbb9$export$904ba5187827962e) {\n    constructor(){\n        super();\n        /* The line ` = ObservableObject.init( this.constructor[\"states\"] );` is initializing an\n    instance property named `` on the `WebComponent` class. This property is being set to the\n    result of calling the `init` method of the `ObservableObject` class, passing in the initial state\n    values defined in the `states` static property of the `WebComponent` class\n    (`this.constructor[\"states\"]`). */ this.$states = $01b13827b3d331b3$export$b176171395436676.init(this.constructor[\"states\"]);\n        Object.keys(this.constructor[\"states\"]).forEach((key)=>{\n            // delete this[key];\n            Object.defineProperty(this, key, {\n                get () {\n                    return this.$states[key];\n                },\n                set (value) {\n                    this.$states[key] = value;\n                }\n            });\n        });\n    }\n    connectedCallback() {\n        super.connectedCallback();\n    }\n}\n/* The `static states = {};` line is declaring a static property named `states` on the `WebComponent`\nclass and initializing it as an empty object `{}`. This property is intended to hold the initial\nstate values for the component. By defining it as a static property, it is shared among all\ninstances of the `WebComponent` class rather than being specific to individual instances. This\nallows all instances of the class to access and modify the same set of state values. */ $01b13827b3d331b3$export$7f8b9f308979d41d.states = {};\n$01b13827b3d331b3$export$7f8b9f308979d41d.define = (0, $718243fe498ffbb9$export$904ba5187827962e).define;\nconst $01b13827b3d331b3$export$c0bb0b647f701bb5 = (0, $13859427fd7d4158$export$c0bb0b647f701bb5);\n\n\n\n\nfunction $5fdd863644e72243$export$996dd27293fe4860() {\n    return (0, $01b13827b3d331b3$export$c0bb0b647f701bb5)`<div>\n    <h3>running on</h3>\n    <p>${navigator.userAgent}</p>\n  </div>`;\n}\n\n\nfunction $fd37bca2f6a173af$export$e7d5a0a4c34806bf() {\n    return (0, $01b13827b3d331b3$export$c0bb0b647f701bb5)`<div>\n    <h1>Hello World !</h1>\n    ${(0, $5fdd863644e72243$export$996dd27293fe4860)()}\n  </div>`;\n}\n\n\n\n(0, $01b13827b3d331b3$export$b3890eb0ae9dca99)((0, $01b13827b3d331b3$export$c0bb0b647f701bb5)`<main-application>${(0, $fd37bca2f6a173af$export$e7d5a0a4c34806bf)}</main-application>`, document.body);\n\n\n//# sourceMappingURL=index.5930ac23.js.map\n","import { render , html } from '@lithium-framework/core';\nimport { HelloWorld } from './components/hello-world';\n\nimport \"./index.scss\";\n\nrender( html`<main-application>${HelloWorld}</main-application>` ,document.body )","import {Observable as $hgUW1$Observable} from \"@microsoft/fast-element/dist/esm\";\nimport {attr as $b1b98f19caab25c2$import$843d46ff018552b8$7aabe8b3a840d2fd, observable as $hgUW1$observable, when as $5193209399721411$re_export$when, repeat as $5193209399721411$re_export$repeat, children as $5193209399721411$re_export$children, elements as $5193209399721411$re_export$elements, slotted as $5193209399721411$re_export$slotted, Binding as $hgUW1$Binding, html as $hgUW1$html, HTMLBindingDirective as $hgUW1$HTMLBindingDirective, HTMLDirective as $hgUW1$HTMLDirective, StatelessAttachedAttributeDirective as $hgUW1$StatelessAttachedAttributeDirective, customElement as $c5a7ff2cef84a00c$re_export$customElement, css as $c5a7ff2cef84a00c$re_export$css, ViewTemplate as $c5a7ff2cef84a00c$re_export$ViewTemplate, HTMLView as $c5a7ff2cef84a00c$re_export$HTMLView, volatile as $c5a7ff2cef84a00c$re_export$volatile, FASTElement as $hgUW1$FASTElement} from \"@microsoft/fast-element\";\nimport {State as $fde9406d76ec24a9$re_export$State, createState as $fde9406d76ec24a9$re_export$createState} from \"@lithium-framework/state\";\nimport {createStorage as $fde9406d76ec24a9$re_export$createStorage} from \"@lithium-framework/context\";\nimport {uuid as $fde9406d76ec24a9$re_export$uuid} from \"@lithium-framework/huid\";\n\n\nfunction $parcel$export(e, n, v, s) {\n  Object.defineProperty(e, n, {get: v, set: s, enumerable: true, configurable: true});\n}\n\nfunction $parcel$exportWildcard(dest, source) {\n  Object.keys(source).forEach(function(key) {\n    if (key === 'default' || key === '__esModule' || Object.prototype.hasOwnProperty.call(dest, key)) {\n      return;\n    }\n\n    Object.defineProperty(dest, key, {\n      enumerable: true,\n      get: function get() {\n        return source[key];\n      }\n    });\n  });\n\n  return dest;\n}\nvar $ed2a677aa7485959$exports = {};\n\n$parcel$export($ed2a677aa7485959$exports, \"ComponentExecutionContext\", () => $ed2a677aa7485959$export$6dad889f9b7e7685);\n$parcel$export($ed2a677aa7485959$exports, \"render\", () => $ed2a677aa7485959$export$b3890eb0ae9dca99);\n\nclass $f0b90d4a5f4da766$export$b176171395436676 extends Object {\n    static init(initialObject) {\n        let observabe = new $f0b90d4a5f4da766$export$b176171395436676(initialObject);\n        return observabe.createProxy();\n    }\n    constructor(initialObject){\n        super();\n        this.$data = {};\n        this.set = (key, value)=>{\n            this.$data[`_${key}`] = value;\n            (0, $hgUW1$Observable).defineProperty(this.$data, key);\n            return this.$data[key];\n        };\n        Object.keys(initialObject).forEach((key)=>{\n            this.set(key, initialObject[key]);\n        });\n    }\n    createProxy() {\n        return new Proxy(this.$data, {\n            get (store, propKey) {\n                let result = undefined;\n                try {\n                    result = store[propKey];\n                } catch (error) {\n                    console.error(error);\n                } finally{\n                    return result;\n                }\n            },\n            set (store, propKey, value) {\n                if (store[propKey]) store[propKey] = value;\n                else {\n                    store[`_${propKey}`] = value;\n                    (0, $hgUW1$Observable).defineProperty(store, propKey);\n                }\n                return true;\n            }\n        });\n    }\n}\n\n\nfunction $592e71a4a1bc8d5d$export$dcc5cf24d8fb3b41(initialObject) {\n    return (0, $f0b90d4a5f4da766$export$b176171395436676).init(initialObject);\n}\n\n\nvar $535bb7ac3b1a1d6d$exports = {};\nvar $b1b98f19caab25c2$exports = {};\n\n$parcel$export($b1b98f19caab25c2$exports, \"attrState\", () => $b1b98f19caab25c2$export$683a0e8baad8b9c3);\n$parcel$export($b1b98f19caab25c2$exports, \"attr\", () => $b1b98f19caab25c2$import$843d46ff018552b8$7aabe8b3a840d2fd);\n\nvar $a1f8df21dd3b8ee9$exports = {};\n\n$parcel$export($a1f8df21dd3b8ee9$exports, \"state\", () => $a1f8df21dd3b8ee9$export$ca000e230c0caa3e);\n\nfunction $a1f8df21dd3b8ee9$export$ca000e230c0caa3e(target, propertyKey, value = null, constructible = false) {\n    if (constructible) target.constructor.states = target.constructor.states || {};\n    Object.defineProperty(target, propertyKey, {\n        get () {\n            return target.$states[propertyKey];\n        },\n        set (newValue) {\n            target.$states[propertyKey] = newValue;\n            return true;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    (0, $hgUW1$observable)(target, propertyKey);\n    if (value) target[propertyKey] = value;\n}\n\n\nfunction $b1b98f19caab25c2$export$683a0e8baad8b9c3(options = {}) {\n    return (target, propertyKey)=>{\n        (0, $b1b98f19caab25c2$import$843d46ff018552b8$7aabe8b3a840d2fd)(options)(target, propertyKey);\n        (0, $a1f8df21dd3b8ee9$export$ca000e230c0caa3e)(target, propertyKey);\n    };\n}\n\n\n\n$parcel$exportWildcard($535bb7ac3b1a1d6d$exports, $b1b98f19caab25c2$exports);\n$parcel$exportWildcard($535bb7ac3b1a1d6d$exports, $a1f8df21dd3b8ee9$exports);\n\n\nfunction $ed2a677aa7485959$var$_classPrivateFieldLooseBase(e, t) {\n    if (!({}).hasOwnProperty.call(e, t)) throw new TypeError(\"attempted to use private field on non-instance\");\n    return e;\n}\nvar $ed2a677aa7485959$var$id = 0;\nfunction $ed2a677aa7485959$var$_classPrivateFieldLooseKey(e) {\n    return \"__private_\" + $ed2a677aa7485959$var$id++ + \"_\" + e;\n}\n// import './router/index.js'\n// import './application/index.js'\nvar $ed2a677aa7485959$var$_state_keys = /*#__PURE__*/ $ed2a677aa7485959$var$_classPrivateFieldLooseKey(\"_state_keys\");\nclass $ed2a677aa7485959$export$6dad889f9b7e7685 {\n    get states() {\n        return this.$states;\n    }\n    constructor(data){\n        this.$states = (0, $f0b90d4a5f4da766$export$b176171395436676).init({});\n        Object.defineProperty(this, $ed2a677aa7485959$var$_state_keys, {\n            writable: true,\n            value: []\n        });\n        this.createState = (key, value)=>{\n            if ($ed2a677aa7485959$var$_classPrivateFieldLooseBase(this, $ed2a677aa7485959$var$_state_keys)[$ed2a677aa7485959$var$_state_keys].includes(key)) return this.useState(key);\n            Object.defineProperty(this, key, {\n                get () {\n                    return JSON.parse(this.states[key]);\n                },\n                set (value) {\n                    if (!$ed2a677aa7485959$var$_classPrivateFieldLooseBase(this, $ed2a677aa7485959$var$_state_keys)[$ed2a677aa7485959$var$_state_keys].includes(key)) {\n                        $ed2a677aa7485959$var$_classPrivateFieldLooseBase(this, $ed2a677aa7485959$var$_state_keys)[$ed2a677aa7485959$var$_state_keys].push(key);\n                        this.$states = (0, $f0b90d4a5f4da766$export$b176171395436676).init({\n                            [key]: JSON.stringify(value),\n                            ...Object.fromEntries(new Map(Array.from($ed2a677aa7485959$var$_classPrivateFieldLooseBase(this, $ed2a677aa7485959$var$_state_keys)[$ed2a677aa7485959$var$_state_keys], (key)=>{\n                                return [\n                                    key,\n                                    this.$states[`${key}`]\n                                ];\n                            })))\n                        });\n                    }\n                    this.$states[key] = JSON.stringify(value);\n                }\n            });\n            this[key] = value;\n            return this.useState(key);\n        };\n        this.useState = (key)=>{\n            return [\n                this[key],\n                (newValue)=>{\n                    console.log({\n                        newValue: newValue\n                    });\n                    this[key] = newValue;\n                }\n            ];\n        };\n        this.createConsumable = (key, value)=>{\n            (0, $a1f8df21dd3b8ee9$export$ca000e230c0caa3e)(this, key, value, false);\n        };\n        Object.assign(this, data);\n    }\n    static init(data) {\n        return new $ed2a677aa7485959$export$6dad889f9b7e7685(data);\n    }\n}\nfunction $ed2a677aa7485959$export$b3890eb0ae9dca99(template, container = document.body, data = {}) {\n    let context = $ed2a677aa7485959$export$6dad889f9b7e7685.init(data);\n    return template.render(context, container);\n} // export * from './router';\n // export * from './application/index.js';\n\n\n\nvar $5193209399721411$exports = {};\n\n$parcel$export($5193209399721411$exports, \"when\", () => $5193209399721411$re_export$when);\n$parcel$export($5193209399721411$exports, \"repeat\", () => $5193209399721411$re_export$repeat);\n$parcel$export($5193209399721411$exports, \"children\", () => $5193209399721411$re_export$children);\n$parcel$export($5193209399721411$exports, \"elements\", () => $5193209399721411$re_export$elements);\n$parcel$export($5193209399721411$exports, \"slotted\", () => $5193209399721411$re_export$slotted);\n\nvar $21522158c10703ef$exports = {};\n\n$parcel$export($21522158c10703ef$exports, \"AsyncAppendBindig\", () => $21522158c10703ef$export$ca3487b83ec6860a);\n$parcel$export($21522158c10703ef$exports, \"AsyncAppendDirective\", () => $21522158c10703ef$export$5761d9f85430a54b);\n$parcel$export($21522158c10703ef$exports, \"asyncAppend\", () => $21522158c10703ef$export$eaa89ade56b7c0c1);\n\nclass $21522158c10703ef$export$ca3487b83ec6860a extends (0, $hgUW1$Binding) {\n    createObserver(subscriber, directive) {\n        console.log({\n            subscriber: subscriber,\n            directive: directive\n        });\n        return {\n            bind (controller) {\n                console.log({\n                    controller: controller\n                });\n            }\n        };\n    }\n}\nclass $21522158c10703ef$export$5761d9f85430a54b extends (0, $hgUW1$HTMLBindingDirective) {\n    constructor(fn, callback){\n        super(new $21522158c10703ef$export$ca3487b83ec6860a((x)=>null));\n        this.fn = null;\n        this.callback = null;\n        Object.assign(this, {\n            fn: fn,\n            callback: callback\n        });\n    }\n    createBehavior() {\n        let { targetNodeId: targetNodeId } = this;\n        return {\n            bind: (source)=>{\n                let target = source.targets[targetNodeId];\n                this.fn.then((result)=>{\n                    this.callback(result).render(source, target instanceof HTMLElement ? target : target.parentElement);\n                }).catch((error)=>{\n                    console.error(error);\n                    (0, $hgUW1$html)`<span>Error: ${error}</span>`.render(source, target instanceof HTMLElement ? target : target.parentElement);\n                });\n            },\n            unbind: ()=>{\n            // Nettoyage si nécessaire\n            }\n        };\n    }\n    static use(fn, callback) {\n        return new $21522158c10703ef$export$5761d9f85430a54b(fn, callback);\n    }\n}\n(0, $hgUW1$HTMLDirective).define($21522158c10703ef$export$5761d9f85430a54b);\nconst $21522158c10703ef$export$eaa89ade56b7c0c1 = (fn, callback)=>$21522158c10703ef$export$5761d9f85430a54b.use(fn, callback);\n\n\nvar $f6651d38d609160e$exports = {};\n\n$parcel$export($f6651d38d609160e$exports, \"createRef\", () => $f6651d38d609160e$export$7d1e3a5e95ceca43);\n$parcel$export($f6651d38d609160e$exports, \"RefDirective\", () => $f6651d38d609160e$export$1ef8aea9a6de98d);\n$parcel$export($f6651d38d609160e$exports, \"ref\", () => $f6651d38d609160e$export$eff4d24c3ff7876e);\n\nfunction $f6651d38d609160e$export$7d1e3a5e95ceca43() {\n    return {\n        value: null\n    };\n}\nclass $f6651d38d609160e$export$1ef8aea9a6de98d extends (0, $hgUW1$StatelessAttachedAttributeDirective) {\n    constructor(options){\n        super(options);\n        this.options = null;\n        Object.assign(this, {\n            options: options\n        });\n    }\n    bind(controller) {\n        let { lastChild: target } = controller;\n        this.options.value = target;\n    }\n    static use(options) {\n        return new $f6651d38d609160e$export$1ef8aea9a6de98d(options);\n    }\n}\n(0, $hgUW1$HTMLDirective).define($f6651d38d609160e$export$1ef8aea9a6de98d);\nconst $f6651d38d609160e$export$eff4d24c3ff7876e = (options)=>$f6651d38d609160e$export$1ef8aea9a6de98d.use(options);\n\n\nvar $c66c6ea353620255$exports = {};\n\n$parcel$export($c66c6ea353620255$exports, \"StateBindig\", () => $c66c6ea353620255$export$28205fa712822499);\n$parcel$export($c66c6ea353620255$exports, \"StateDirective\", () => $c66c6ea353620255$export$792c882b75ca2192);\n$parcel$export($c66c6ea353620255$exports, \"useState\", () => $c66c6ea353620255$export$60241385465d0a34);\n// import { ViewTemplate, HTMLBindingDirective, ExecutionContext } from '@microsoft/fast-element';\n\nclass $c66c6ea353620255$export$28205fa712822499 extends (0, $hgUW1$Binding) {\n    createObserver(subscriber, directive) {\n        console.log({\n            subscriber: subscriber,\n            directive: directive\n        });\n        return {\n            bind (controller) {\n                console.log({\n                    controller: controller\n                });\n            }\n        };\n    }\n}\nclass $c66c6ea353620255$export$792c882b75ca2192 extends (0, $hgUW1$HTMLBindingDirective) {\n    get state() {\n        return this._state.mutator[0];\n    }\n    set state(value) {\n        this._state.mutator[1](value);\n    }\n    constructor(state, callback){\n        super(new $c66c6ea353620255$export$28205fa712822499((x)=>null));\n        this._state = null;\n        this._callback = null;\n        this._state = state;\n        this._callback = callback;\n    }\n    createBehavior() {\n        let { targetNodeId: targetNodeId } = this;\n        let view = null;\n        return {\n            bind: (source)=>{\n                let target = source.targets[targetNodeId];\n                if (this._callback) {\n                    this._state.subscribe(()=>{\n                        view.dispose();\n                        view = this._callback(this.state).render(source, target.parentElement);\n                    });\n                    view = this._callback(this.state).render(source, target.parentElement);\n                } else {\n                    this._state.subscribe(()=>{\n                        if (\"textContent\" in target) target.textContent = `${this.state}`;\n                    });\n                    if (\"textContent\" in target) target.textContent = `${this.state}`;\n                }\n            },\n            unbind: ()=>{\n            // Nettoyage si nécessaire\n            }\n        };\n    }\n    static use(state, callback) {\n        return new $c66c6ea353620255$export$792c882b75ca2192(state, callback);\n    }\n}\n(0, $hgUW1$HTMLDirective).define($c66c6ea353620255$export$792c882b75ca2192);\nconst $c66c6ea353620255$export$60241385465d0a34 = (state, callback)=>$c66c6ea353620255$export$792c882b75ca2192.use(state, callback);\n\n\nvar $6e530dd7df9f7fe5$exports = {};\n\n$parcel$export($6e530dd7df9f7fe5$exports, \"StyleBindig\", () => $6e530dd7df9f7fe5$export$81053cd05d55c9d8);\n$parcel$export($6e530dd7df9f7fe5$exports, \"StyleDirective\", () => $6e530dd7df9f7fe5$export$18211b6e76035cfa);\n$parcel$export($6e530dd7df9f7fe5$exports, \"style\", () => $6e530dd7df9f7fe5$export$1d567c320f4763bc);\n\nclass $6e530dd7df9f7fe5$export$81053cd05d55c9d8 extends (0, $hgUW1$Binding) {\n    createObserver(subscriber, directive) {\n        console.log({\n            subscriber: subscriber,\n            directive: directive\n        });\n        return {\n            bind (controller) {\n                console.log({\n                    controller: controller\n                });\n            }\n        };\n    }\n}\nclass $6e530dd7df9f7fe5$export$18211b6e76035cfa extends (0, $hgUW1$HTMLBindingDirective) {\n    constructor(css){\n        super(new $6e530dd7df9f7fe5$export$81053cd05d55c9d8((x)=>null));\n        this.css = null;\n        Object.assign(this, {\n            css: css\n        });\n    }\n    createBehavior() {\n        let { targetNodeId: targetNodeId } = this;\n        let view = null;\n        return {\n            bind: (source)=>{\n                let target = source.targets[targetNodeId];\n                if (target instanceof HTMLElement) Object.assign(target.style, this.css);\n            },\n            unbind: ()=>{\n            // Nettoyage si nécessaire\n            }\n        };\n    }\n    static use(css) {\n        return new $6e530dd7df9f7fe5$export$18211b6e76035cfa(css);\n    }\n}\n(0, $hgUW1$HTMLDirective).define($6e530dd7df9f7fe5$export$18211b6e76035cfa);\nconst $6e530dd7df9f7fe5$export$1d567c320f4763bc = (css)=>$6e530dd7df9f7fe5$export$18211b6e76035cfa.use(css);\n\n\nvar $15db1e855f042fe6$exports = {};\n\n$parcel$export($15db1e855f042fe6$exports, \"UntilBindig\", () => $15db1e855f042fe6$export$f36d8f10294685f8);\n$parcel$export($15db1e855f042fe6$exports, \"UntilDirective\", () => $15db1e855f042fe6$export$51c6edf8ee19b71a);\n$parcel$export($15db1e855f042fe6$exports, \"until\", () => $15db1e855f042fe6$export$a40009bd2c363351);\n\nclass $15db1e855f042fe6$export$f36d8f10294685f8 extends (0, $hgUW1$Binding) {\n    createObserver(subscriber, directive) {\n        console.log({\n            subscriber: subscriber,\n            directive: directive\n        });\n        return {\n            bind (controller) {\n                console.log({\n                    controller: controller\n                });\n            }\n        };\n    }\n}\nclass $15db1e855f042fe6$export$51c6edf8ee19b71a extends (0, $hgUW1$HTMLBindingDirective) {\n    constructor(fn, template){\n        super(new $15db1e855f042fe6$export$f36d8f10294685f8((x)=>null));\n        this.fn = null;\n        this.template = null;\n        Object.assign(this, {\n            fn: fn,\n            template: template\n        });\n    }\n    createBehavior() {\n        let { targetNodeId: targetNodeId } = this;\n        return {\n            bind: (source)=>{\n                let target = source.targets[targetNodeId];\n                let loading = this.template.render(source, target instanceof HTMLElement ? target : target.parentElement);\n                this.fn.then((result)=>{\n                    loading.dispose();\n                    result.render(source, target instanceof HTMLElement ? target : target.parentElement);\n                }).catch((error)=>{\n                    console.error(error);\n                    loading.dispose();\n                    (0, $hgUW1$html)`<span>Error: ${error}</span>`.render(source, target instanceof HTMLElement ? target : target.parentElement);\n                });\n            },\n            unbind: ()=>{\n            // Nettoyage si nécessaire\n            }\n        };\n    }\n    static use(fn, template) {\n        return new $15db1e855f042fe6$export$51c6edf8ee19b71a(fn, template);\n    }\n}\n(0, $hgUW1$HTMLDirective).define($15db1e855f042fe6$export$51c6edf8ee19b71a);\nconst $15db1e855f042fe6$export$a40009bd2c363351 = (fn, template)=>$15db1e855f042fe6$export$51c6edf8ee19b71a.use(fn, template);\n\n\n$parcel$exportWildcard($5193209399721411$exports, $21522158c10703ef$exports);\n$parcel$exportWildcard($5193209399721411$exports, $f6651d38d609160e$exports);\n$parcel$exportWildcard($5193209399721411$exports, $c66c6ea353620255$exports);\n$parcel$exportWildcard($5193209399721411$exports, $6e530dd7df9f7fe5$exports);\n$parcel$exportWildcard($5193209399721411$exports, $15db1e855f042fe6$exports);\n\n\nvar $fde9406d76ec24a9$exports = {};\n\n$parcel$export($fde9406d76ec24a9$exports, \"Observable\", () => $fde9406d76ec24a9$re_export$Observable);\n$parcel$export($fde9406d76ec24a9$exports, \"createObservableObject\", () => $592e71a4a1bc8d5d$export$dcc5cf24d8fb3b41);\n$parcel$export($fde9406d76ec24a9$exports, \"ObservableObject\", () => $f0b90d4a5f4da766$export$b176171395436676);\n$parcel$export($fde9406d76ec24a9$exports, \"State\", () => $fde9406d76ec24a9$re_export$State);\n$parcel$export($fde9406d76ec24a9$exports, \"createState\", () => $fde9406d76ec24a9$re_export$createState);\n$parcel$export($fde9406d76ec24a9$exports, \"createStorage\", () => $fde9406d76ec24a9$re_export$createStorage);\n$parcel$export($fde9406d76ec24a9$exports, \"uuid\", () => $fde9406d76ec24a9$re_export$uuid);\n\n\n\n\n\n // export{\n //   Observable,\n //   volatile,\n // State,\n // createState,\n // createStorage,\n // Storage, \n // StorageKeys, \n // StorageValues, \n // StateValidator,\n // ComponentId,\n // Segment,\n // ParentSegementId,\n // CollectionId,\n // HUID,\n // HierarchicalUUIDOptions,\n // uuid\n // }\n\n\nvar $c5a7ff2cef84a00c$exports = {};\n\n$parcel$export($c5a7ff2cef84a00c$exports, \"html\", () => $c5a7ff2cef84a00c$export$c0bb0b647f701bb5);\n$parcel$export($c5a7ff2cef84a00c$exports, \"customElement\", () => $c5a7ff2cef84a00c$re_export$customElement);\n$parcel$export($c5a7ff2cef84a00c$exports, \"css\", () => $c5a7ff2cef84a00c$re_export$css);\n$parcel$export($c5a7ff2cef84a00c$exports, \"ViewTemplate\", () => $c5a7ff2cef84a00c$re_export$ViewTemplate);\n$parcel$export($c5a7ff2cef84a00c$exports, \"HTMLView\", () => $c5a7ff2cef84a00c$re_export$HTMLView);\n$parcel$export($c5a7ff2cef84a00c$exports, \"volatile\", () => $c5a7ff2cef84a00c$re_export$volatile);\n$parcel$export($c5a7ff2cef84a00c$exports, \"WebComponent\", () => $284c1ee70f828408$export$7f8b9f308979d41d);\n\n\n\nclass $284c1ee70f828408$export$7f8b9f308979d41d extends (0, $hgUW1$FASTElement) {\n    constructor(){\n        super();\n        /* The line ` = ObservableObject.init( this.constructor[\"states\"] );` is initializing an\n    instance property named `` on the `WebComponent` class. This property is being set to the\n    result of calling the `init` method of the `ObservableObject` class, passing in the initial state\n    values defined in the `states` static property of the `WebComponent` class\n    (`this.constructor[\"states\"]`). */ this.$states = (0, $f0b90d4a5f4da766$export$b176171395436676).init(this.constructor[\"states\"]);\n        Object.keys(this.constructor[\"states\"]).forEach((key)=>{\n            // delete this[key];\n            Object.defineProperty(this, key, {\n                get () {\n                    return this.$states[key];\n                },\n                set (value) {\n                    this.$states[key] = value;\n                }\n            });\n        });\n    }\n    connectedCallback() {\n        super.connectedCallback();\n    }\n}\n/* The `static states = {};` line is declaring a static property named `states` on the `WebComponent`\nclass and initializing it as an empty object `{}`. This property is intended to hold the initial\nstate values for the component. By defining it as a static property, it is shared among all\ninstances of the `WebComponent` class rather than being specific to individual instances. This\nallows all instances of the class to access and modify the same set of state values. */ $284c1ee70f828408$export$7f8b9f308979d41d.states = {};\n$284c1ee70f828408$export$7f8b9f308979d41d.define = (0, $hgUW1$FASTElement).define;\n\n\nconst $c5a7ff2cef84a00c$export$c0bb0b647f701bb5 = (0, $hgUW1$html);\n\n\n // namespace Lithium{\n //   export const DOM = require('./dom/index.js');\n //   export const Decorators = require('./decorators/index.js');\n //   export const Directives = require('./directives/index.js');\n //   export const Utils = require('./utils/index.js');\n //   export const Component = require('./webComponent/index.js');\n // };\n // export default Lithium;\n // (() => {\n //   if(globalThis.window){\n //     window['lithium'] = {\n //     };\n //   }\n // })()\n\n\nexport {$ed2a677aa7485959$export$6dad889f9b7e7685 as ComponentExecutionContext, $ed2a677aa7485959$export$b3890eb0ae9dca99 as render, $b1b98f19caab25c2$export$683a0e8baad8b9c3 as attrState, $b1b98f19caab25c2$import$843d46ff018552b8$7aabe8b3a840d2fd as attr, $a1f8df21dd3b8ee9$export$ca000e230c0caa3e as state, $5193209399721411$re_export$when as when, $5193209399721411$re_export$repeat as repeat, $5193209399721411$re_export$children as children, $5193209399721411$re_export$elements as elements, $5193209399721411$re_export$slotted as slotted, $21522158c10703ef$export$ca3487b83ec6860a as AsyncAppendBindig, $21522158c10703ef$export$5761d9f85430a54b as AsyncAppendDirective, $21522158c10703ef$export$eaa89ade56b7c0c1 as asyncAppend, $f6651d38d609160e$export$7d1e3a5e95ceca43 as createRef, $f6651d38d609160e$export$1ef8aea9a6de98d as RefDirective, $f6651d38d609160e$export$eff4d24c3ff7876e as ref, $c66c6ea353620255$export$28205fa712822499 as StateBindig, $c66c6ea353620255$export$792c882b75ca2192 as StateDirective, $c66c6ea353620255$export$60241385465d0a34 as useState, $6e530dd7df9f7fe5$export$81053cd05d55c9d8 as StyleBindig, $6e530dd7df9f7fe5$export$18211b6e76035cfa as StyleDirective, $6e530dd7df9f7fe5$export$1d567c320f4763bc as style, $15db1e855f042fe6$export$f36d8f10294685f8 as UntilBindig, $15db1e855f042fe6$export$51c6edf8ee19b71a as UntilDirective, $15db1e855f042fe6$export$a40009bd2c363351 as until, $fde9406d76ec24a9$re_export$Observable as Observable, $592e71a4a1bc8d5d$export$dcc5cf24d8fb3b41 as createObservableObject, $f0b90d4a5f4da766$export$b176171395436676 as ObservableObject, $fde9406d76ec24a9$re_export$State as State, $fde9406d76ec24a9$re_export$createState as createState, $fde9406d76ec24a9$re_export$createStorage as createStorage, $fde9406d76ec24a9$re_export$uuid as uuid, $c5a7ff2cef84a00c$export$c0bb0b647f701bb5 as html, $c5a7ff2cef84a00c$re_export$customElement as customElement, $c5a7ff2cef84a00c$re_export$css as css, $c5a7ff2cef84a00c$re_export$ViewTemplate as ViewTemplate, $c5a7ff2cef84a00c$re_export$HTMLView as HTMLView, $c5a7ff2cef84a00c$re_export$volatile as volatile, $284c1ee70f828408$export$7f8b9f308979d41d as WebComponent};\n//# sourceMappingURL=module.js.map\n","export * from './dom';\nexport * from './decorators';\nexport * from './directives';\nexport * from './utils';\nexport * from './webComponent';\n\n// import { MainApplication } from './dom/index.js';\n\nexport declare module global{\n  interface HTMLElementTagNameMap{\n    // 'lithium-router' : Router;\n    // 'main-application' : MainApplication;\n  }\n}\n\n// namespace Lithium{\n//   export const DOM = require('./dom/index.js');\n//   export const Decorators = require('./decorators/index.js');\n//   export const Directives = require('./directives/index.js');\n//   export const Utils = require('./utils/index.js');\n//   export const Component = require('./webComponent/index.js');\n// };\n\n// export default Lithium;\n\n// (() => {\n\n//   if(globalThis.window){\n\n//     window['lithium'] = {\n\n//     };\n\n//   }\n  \n// })()","import { ViewTemplate } from '@microsoft/fast-element/dist/esm';\nimport { ObservableObject } from '../utils/observable-object';\nimport { state } from '../decorators';\n\n// import './router/index.js'\n// import './application/index.js'\n\nexport class ComponentExecutionContext< T = any , States extends Record<string , any> = Record<string , any> >{\n\n  $states = ObservableObject.init< any , any >({});\n  get states(){ return this.$states }\n  #_state_keys:string[] = [];\n  \n  createState = <T>( key:keyof States , value:T ):[ state:T , setter:( newValue:T ) => void ] => {\n\n    if(this.#_state_keys.includes(key as string))return this.useState( key );\n\n    Object.defineProperty( this , key , {\n      get(){\n        return JSON.parse(this.states[key]);\n      },\n      set( value ){\n        \n        if(!this.#_state_keys.includes(key)){\n\n          this.#_state_keys.push( key );\n\n          this.$states = ObservableObject.init({\n            [key] :  JSON.stringify(value),\n            ...Object.fromEntries(\n              new Map(\n                Array.from( this.#_state_keys , ( key ) => {\n                  return [ key , this.$states[`${key}`] ]\n                } )\n              )\n            )\n          });\n\n        }\n\n        this.$states[key] = JSON.stringify(value);\n\n      }\n    });\n\n    this[key as string] = value;\n    return this.useState( key );\n\n  }\n\n  useState = <T>( key:keyof States ):[ state:T , setter:( newValue:T ) => void ] => {\n\n    return [ this[key as string] , ( newValue ) => {\n      console.log({ newValue })\n      this[key as string] = newValue;\n    } ];\n\n  }\n\n  createConsumable = <T = any>( key:string , value:T ) => {\n    state( this , key , value , false );\n  }\n\n  constructor( data?:T ){\n      Object.assign( this , data );\n  }\n\n  static init< T extends Record<string , any> = {} >( data?:T ):ComponentContext<T>{\n      return new ComponentExecutionContext( data ) as any as ComponentContext<T>;\n  }\n\n}\n\nexport type ComponentContext< T = Record<string , any> , States = Record<string , any> > = ComponentExecutionContext<T , States> & T;\n\nexport function render< T extends Record<string , any> = {} , Storage extends Record<string , any> = Record<string , any> >(template: ViewTemplate<ComponentContext<any, Record<string, any>>, any>, container: HTMLElement = document.body , data = {} ) {\n\n  let context = ComponentExecutionContext.init(data);\n  return template.render( context , container);\n\n}\n\n// export * from './router';\n// export * from './application/index.js';","import { ObservableObject , Observable } from './models';\n\nexport function createObservableObject< Key extends string , Value extends any >( initialObject:Record< Key , Value > ){\n  return ObservableObject.init< Key , Value >( initialObject );\n}\n\nexport { ObservableObject , Observable };","import { Observable } from \"@microsoft/fast-element/dist/esm\";\n\nexport class ObservableObject< key extends string , value extends any = any > extends Object{\n\n  static init< key extends string , value extends any >( initialObject:Record<key , value> ){\n    let observabe = new ObservableObject< key , value >( initialObject );\n    return observabe.createProxy();\n  }\n\n  $data:Record<string , value> = {};\n\n  constructor( initialObject:Record<key , value> ){\n    super();\n\n    Object.keys( initialObject ).forEach(( key:any ) => {\n      this.set( key , initialObject[key] );\n    })\n\n  };\n\n  set = <T extends value = any>( key:key , value:T ) => {   \n\n    this.$data[`_${key}`] = value as any;\n    Observable.defineProperty( this.$data, key);\n    return this.$data[key];\n\n  }\n\n  createProxy(){\n\n    return new Proxy( this.$data , {\n      get( store , propKey:string ){\n\n        let result:any = undefined;\n\n        try{\n          result = store[propKey];\n        }\n        catch(error){\n          console.error(error);\n        }\n        finally{\n          return result;\n        }\n\n      },\n      set( store , propKey: string, value: any ){\n\n        if(store[propKey]){\n          store[propKey] = value;\n        }\n        else {\n          store[ `_${propKey}` ] = value;\n          Observable.defineProperty( store, propKey);\n        }\n\n        return true;\n  \n      }\n    })\n\n  }\n\n}\n\nexport { Observable };","export * from './attributeState';\nexport * from './state';","import { DecoratorAttributeConfiguration, attr } from \"@microsoft/fast-element\";\nimport { state } from './state';\n\n/**\n * @AttributeState decorator\n * A decorator to define a property as both an attribute and a state on a WebComponent.\n * This combines the behavior of @attr and @State decorators.\n * \n * @param {DecoratorAttributeConfiguration} options - Options to configure the attribute.\n * @returns {Function} - The decorator function.\n * \n * @example\n * ```typescript\n * // Define an editable title component using the AttributeState decorator\n * \n * customElement({\n *     name: 'editable-title',\n *     template : html`...`\n * })\n * class EditableTitle extends WebComponent {\n *     AttributeState() level: number = 2;\n *     AttributeState() editable: string = \"false\";\n *     State value: string = \"Hello World\";\n * \n *     handleInput(event) {\n *         this.value = event.target.innerText;\n *     }\n * \n *     connectedCallback() {\n *         super.connectedCallback();\n *     }\n * }\n * ```\n */\nexport function attrState( options:DecoratorAttributeConfiguration = {} ){\n\n  return ( target, propertyKey: string ) => {\n    attr( options )( target , propertyKey );\n    state( target , propertyKey );\n  }\n\n}\n\nexport { attr };","import { observable } from \"@microsoft/fast-element\";\n\n/**\n * @State decorator\n * A decorator to define a state property on a WebComponent.\n * This state property is observable, and its changes are detected and handled.\n * \n * @param {Object} target - The prototype of the class where the state property is defined.\n * @param {string} propertyKey - The name of the property to be defined as a state.\n * \n * @example\n * ```typescript\n * /// Define a counter component using the State decorator\n\n * customElement({\n *     name: 'counter-element',\n *     template: html`...`\n * })\n * class CounterElement extends WebComponent {\n *     State count: number = 0;\n * \n *     increment() {\n *         this.count += 1;\n *     }\n * \n *     connectedCallback() {\n *         super.connectedCallback();s\n *     }\n * }\n * ```\n */\nexport function state(target, propertyKey: string , value:any = null , constructible = false){\n\n  if(constructible)target.constructor.states = target.constructor.states || {};\n\n  Object.defineProperty( target , propertyKey , {\n    get(){\n      return target.$states[propertyKey];\n    },\n    set(newValue){\n      target.$states[propertyKey] = newValue;\n      return true;\n    },\n    enumerable: true,\n    configurable: true\n  } );\n\n  observable(target, propertyKey);\n\n  if(value)target[propertyKey] = value;\n\n}","import {\n  when,\n  repeat,\n  // ref,\n  children,\n  elements,\n  slotted,\n} from '@microsoft/fast-element';\n\nexport {\n  when,\n  repeat,\n  children,\n  elements,\n  slotted\n}\n\nexport * from './assyncAppend.js';\nexport * from './ref.js';\nexport * from './state.js';\nexport * from './style.js';\nexport * from './until.js';","import { ViewTemplate, HTMLDirective , HTMLBindingDirective, HTMLView , html , Binding } from '@microsoft/fast-element';\nimport type { Subscriber , BindingDirective, ExpressionObserver } from '@microsoft/fast-element';\n\nexport class AsyncAppendBindig extends Binding{\n\n  createObserver(subscriber: Subscriber, directive: BindingDirective): ExpressionObserver<any, any, any> {\n\n    console.log({ subscriber , directive })\n\n    return {\n      bind(controller){\n        console.log({ controller })\n      }\n    }\n\n  }\n  \n}\n\nexport class AsyncAppendDirective<T = any> extends HTMLBindingDirective {\n\n  fn:Promise<T> = null;\n  callback:( result:T ) => ViewTemplate = null;\n\n  constructor( fn:Promise<T> , callback:( result:T ) => ViewTemplate ) {\n    super( new AsyncAppendBindig( (x) => null ) );\n    Object.assign( this , { fn , callback } );\n  }\n\n  createBehavior():any {\n\n    let { targetNodeId } = this;\n\n    return {\n        bind : (source:HTMLView ) => {\n\n          let target = source.targets[targetNodeId];\n\n          this.fn\n          .then(( result ) => {\n            this.callback( result ).render( source , target instanceof HTMLElement ? target : target.parentElement );\n          })\n          .catch(( error ) => {\n            console.error(error)\n            html`<span>Error: ${error}</span>`.render( source , target instanceof HTMLElement ? target : target.parentElement );\n          })\n\n        },\n        unbind : () => {\n            // Nettoyage si nécessaire\n        }\n    };\n\n  }\n\n  static use<T>( fn:Promise<T> , callback:( result:T ) => ViewTemplate ){\n    return new AsyncAppendDirective( fn , callback);\n  }\n\n}\n\nHTMLDirective.define( AsyncAppendDirective );\n\nexport { Subscriber }\n\nexport const asyncAppend = <T = any>( fn:Promise<T> , callback:( result:T ) => ViewTemplate ) => AsyncAppendDirective.use<T>( fn , callback );","import { HTMLDirective, HTMLView, Binding, BindingDirective, ExpressionObserver, Subscriber, StatelessAttachedAttributeDirective } from '@microsoft/fast-element';\n\nexport interface IElementRef< T extends Node >{\n  value : T;\n}\n\nexport function createRef< T extends Node >():IElementRef<T>{\n  return {\n    value : null\n  }\n}\n\nexport class RefDirective<T extends Node> extends StatelessAttachedAttributeDirective<IElementRef<T>> {\n\n  options:IElementRef<T> = null;\n\n  constructor( options:IElementRef<T> ) {\n    super( options );\n    Object.assign( this , { options } )\n  }\n\n  bind(controller: HTMLView): void {\n\n    let { lastChild:target } = controller;\n\n    this.options.value = target as any;\n\n  }\n\n  static use<T extends Node>( options:IElementRef<T> ){\n    return new RefDirective<T>( options );\n  }\n\n}\n\nHTMLDirective.define( RefDirective )\n\nexport const ref = <T extends Node>( options:IElementRef<T> ) => RefDirective.use<T>( options );","// import { ViewTemplate, HTMLBindingDirective, ExecutionContext } from '@microsoft/fast-element';\nimport { State , createState } from '@lithium-framework/state';\nimport { ViewTemplate, HTMLDirective , HTMLBindingDirective, HTMLView , Binding, BindingDirective, ExpressionObserver, Subscriber } from '@microsoft/fast-element';\n\nexport class StateBindig extends Binding{\n\n  createObserver(subscriber: Subscriber, directive: BindingDirective): ExpressionObserver<any, any, any> {\n\n    console.log({ subscriber , directive })\n\n    return {\n      bind(controller){\n        console.log({ controller })\n      }\n    }\n\n  }\n  \n}\n\nexport class StateDirective<T = any> extends HTMLBindingDirective {\n\n    _state:State<T> = null;\n    get state(){ return this._state.mutator[0] }\n    set state( value:T ){ this._state.mutator[1](value) }\n\n    _callback:( newValue:T ) => ViewTemplate = null;\n\n    constructor( state: State<T> , callback:( newValue:T ) => ViewTemplate ) {\n        super( new StateBindig( (x) => null ) );\n        this._state = state;\n        this._callback = callback;\n    }\n\n  createBehavior():any {\n\n    let { targetNodeId } = this;\n    let view:HTMLView = null;\n\n    return {\n        bind : (source:HTMLView) => {\n\n            let target = source.targets[targetNodeId];\n\n            if(this._callback){\n\n                this._state.subscribe(() => {\n                    view.dispose();\n                    view = this._callback( this.state ).render( source , target.parentElement );\n                });\n\n                view = this._callback( this.state ).render( source , target.parentElement );\n\n            }\n\n            else{\n\n                this._state.subscribe(() => {\n                    if(\"textContent\" in target){\n                        target.textContent = `${this.state}`;\n                    }\n                });\n\n                if(\"textContent\" in target){\n                    target.textContent = `${this.state}`;\n                }\n\n            }\n\n        },\n        unbind : () => {\n            // Nettoyage si nécessaire\n        }\n    };\n\n  }\n\n  static use<T = any>( state , callback ){\n    return new StateDirective<T>( state , callback )\n  }\n\n}\n\nHTMLDirective.define( StateDirective )\n\nexport const useState = <T>( state: State<T> , callback?:( newValue:T ) => ViewTemplate ) => StateDirective.use<T>( state , callback );","import { HTMLDirective, HTMLBindingDirective, HTMLView , Binding, BindingDirective, ExpressionObserver, Subscriber } from '@microsoft/fast-element';\nimport { Properties } from '../utils/css-object';\n\nexport class StyleBindig extends Binding{\n\n  createObserver(subscriber: Subscriber, directive: BindingDirective): ExpressionObserver<any, any, any> {\n\n    console.log({ subscriber , directive })\n\n    return {\n      bind(controller){\n        console.log({ controller })\n      }\n    }\n\n  }\n  \n}\n\nexport class StyleDirective extends HTMLBindingDirective {\n\n  css:Properties = null;\n\n  constructor( css:Properties ) {\n      super( new StyleBindig( (x) => null ) );\n      Object.assign( this , { css } );\n\n  }\n\ncreateBehavior():any {\n\n  let { targetNodeId } = this;\n  let view:HTMLView = null;\n\n  return {\n      bind : (source:HTMLView) => {\n\n        let target = source.targets[targetNodeId];\n        if(target instanceof HTMLElement)Object.assign( target.style , this.css );\n\n      },\n      unbind : () => {\n          // Nettoyage si nécessaire\n      }\n  };\n\n}\n\nstatic use( css:Properties ){\n  return new StyleDirective( css )\n}\n\n}\n\nHTMLDirective.define( StyleDirective );\n\nexport const style = ( css:Properties ) => StyleDirective.use( css );","import { ViewTemplate , html , HTMLDirective, HTMLBindingDirective, HTMLView , Binding, BindingDirective, ExpressionObserver, Subscriber } from '@microsoft/fast-element';\n\nexport class UntilBindig extends Binding{\n\n  createObserver(subscriber: Subscriber, directive: BindingDirective): ExpressionObserver<any, any, any> {\n\n    console.log({ subscriber , directive })\n\n    return {\n      bind(controller){\n        console.log({ controller })\n      }\n    }\n\n  }\n  \n}\n\nexport class UntilDirective extends HTMLBindingDirective {\n\n  fn:Promise<ViewTemplate> = null;\n  template:ViewTemplate = null;\n\n  constructor( fn:Promise<ViewTemplate> , template:ViewTemplate ) {\n    super( new UntilBindig( (x) => null ) );\n    Object.assign( this , { fn , template } );\n}\n\ncreateBehavior():any {\n\n  let { targetNodeId } = this;\n\n  return {\n    bind : (source:HTMLView) => {\n\n      let target = source.targets[targetNodeId];\n      let loading = this.template.render( source , target instanceof HTMLElement ? target : target.parentElement );\n\n      this.fn\n      .then(( result ) => {\n        loading.dispose()\n        result.render( source , target instanceof HTMLElement ? target : target.parentElement );\n      })\n      .catch(( error ) => {\n        console.error(error);\n        loading.dispose();\n        html`<span>Error: ${error}</span>`.render( source , target instanceof HTMLElement ? target : target.parentElement );\n      })\n\n    },\n    unbind : () => {\n        // Nettoyage si nécessaire\n    }\n};\n\n}\n\nstatic use( fn:Promise<ViewTemplate> , template: ViewTemplate ){\n  return new UntilDirective( fn , template);\n}\n\n}\n\nHTMLDirective.define( UntilDirective );\n\nexport const until = ( fn:Promise<ViewTemplate> , template:ViewTemplate ) => UntilDirective.use( fn , template );","export {\n  Observable,\n} from '@microsoft/fast-element/dist/esm';\n\nexport {\n  // _cssObject,\n  // Properties,\n  // createCSS\n} from './css-object';\n\nexport {\n  createObservableObject,\n  ObservableObject\n} from './observable-object';\n\nexport { \n  State,\n  createState\n} from '@lithium-framework/state';\n\nexport { \n  createStorage,\n  // Storage, \n  // StorageKeys, \n  // StorageValues, \n  // StateValidator\n} from '@lithium-framework/context';\n\nexport {\n  // ComponentId,\n  // Segment,\n  // ParentSegementId,\n  // CollectionId,\n  // HUID,\n  // HierarchicalUUIDOptions,\n  uuid\n} from '@lithium-framework/huid';\n\n// export{\n//   Observable,\n//   volatile,\n  // State,\n  // createState,\n  // createStorage,\n  // Storage, \n  // StorageKeys, \n  // StorageValues, \n  // StateValidator,\n  // ComponentId,\n  // Segment,\n  // ParentSegementId,\n  // CollectionId,\n  // HUID,\n  // HierarchicalUUIDOptions,\n  // uuid\n// }","export { \n  customElement , \n  css,\n  // html,\n  ViewTemplate,\n  HTMLView,\n  volatile,\n} from \"@microsoft/fast-element\";\n\nimport {\n  html as _html,\n  ViewTemplate,\n  HTMLTemplateTag\n} from \"@microsoft/fast-element\"\n\nexport const html:HTMLTemplateTag = _html;\n\nexport { \n  WebComponent \n} from './model';","import { FASTElement } from \"@microsoft/fast-element\";\nimport { ObservableObject } from '../utils/observable-object';\n\n/* The WebComponent class extends FASTElement and provides state management functionality using\nObservableObject. */\nexport class WebComponent extends FASTElement{\n\n  /* The `static states = {};` line is declaring a static property named `states` on the `WebComponent`\n  class and initializing it as an empty object `{}`. This property is intended to hold the initial\n  state values for the component. By defining it as a static property, it is shared among all\n  instances of the `WebComponent` class rather than being specific to individual instances. This\n  allows all instances of the class to access and modify the same set of state values. */\n  static states = {};\n\n  /* The line ` = ObservableObject.init( this.constructor[\"states\"] );` is initializing an\n  instance property named `` on the `WebComponent` class. This property is being set to the\n  result of calling the `init` method of the `ObservableObject` class, passing in the initial state\n  values defined in the `states` static property of the `WebComponent` class\n  (`this.constructor[\"states\"]`). */\n  $states = ObservableObject.init( this.constructor[\"states\"] );\n\n  constructor(){\n    super();\n\n    Object.keys(this.constructor[\"states\"]).forEach( key => {\n      // delete this[key];\n      Object.defineProperty( this , key , {\n        get(){\n          return this.$states[key];\n        },\n        set( value ){\n          this.$states[key] = value;\n        }\n      } )\n      \n    });\n\n  }\n\n  connectedCallback() {\n    super.connectedCallback();\n  }\n\n  static define = FASTElement.define\n  \n}","import { isFunction, isString, KernelServiceId, } from \"../interfaces.js\";\nimport { createMetadataLocator, FAST, makeSerializationNoop } from \"../platform.js\";\nimport { Updates } from \"./update-queue.js\";\nimport { PropertyChangeNotifier, SubscriberSet } from \"./notifier.js\";\n/**\n * Describes how the source's lifetime relates to its controller's lifetime.\n * @public\n */\nexport const SourceLifetime = Object.freeze({\n    /**\n     * The source to controller lifetime relationship is unknown.\n     */\n    unknown: void 0,\n    /**\n     * The source and controller lifetimes are coupled to one another.\n     * They can/will be GC'd together.\n     */\n    coupled: 1,\n});\n/**\n * Common Observable APIs.\n * @public\n */\nexport const Observable = FAST.getById(KernelServiceId.observable, () => {\n    const queueUpdate = Updates.enqueue;\n    const volatileRegex = /(:|&&|\\|\\||if|\\?\\.)/;\n    const notifierLookup = new WeakMap();\n    let watcher = void 0;\n    let createArrayObserver = (array) => {\n        throw FAST.error(1101 /* Message.needsArrayObservation */);\n    };\n    function getNotifier(source) {\n        var _a;\n        let found = (_a = source.$fastController) !== null && _a !== void 0 ? _a : notifierLookup.get(source);\n        if (found === void 0) {\n            Array.isArray(source)\n                ? (found = createArrayObserver(source))\n                : notifierLookup.set(source, (found = new PropertyChangeNotifier(source)));\n        }\n        return found;\n    }\n    const getAccessors = createMetadataLocator();\n    class DefaultObservableAccessor {\n        constructor(name) {\n            this.name = name;\n            this.field = `_${name}`;\n            this.callback = `${name}Changed`;\n        }\n        getValue(source) {\n            if (watcher !== void 0) {\n                watcher.watch(source, this.name);\n            }\n            return source[this.field];\n        }\n        setValue(source, newValue) {\n            const field = this.field;\n            const oldValue = source[field];\n            if (oldValue !== newValue) {\n                source[field] = newValue;\n                const callback = source[this.callback];\n                if (isFunction(callback)) {\n                    callback.call(source, oldValue, newValue);\n                }\n                getNotifier(source).notify(this.name);\n            }\n        }\n    }\n    class ExpressionNotifierImplementation extends SubscriberSet {\n        constructor(expression, initialSubscriber, isVolatileBinding = false) {\n            super(expression, initialSubscriber);\n            this.expression = expression;\n            this.isVolatileBinding = isVolatileBinding;\n            this.needsRefresh = true;\n            this.needsQueue = true;\n            this.isAsync = true;\n            this.first = this;\n            this.last = null;\n            this.propertySource = void 0;\n            this.propertyName = void 0;\n            this.notifier = void 0;\n            this.next = void 0;\n        }\n        setMode(isAsync) {\n            this.isAsync = this.needsQueue = isAsync;\n        }\n        bind(controller) {\n            this.controller = controller;\n            const value = this.observe(controller.source, controller.context);\n            if (!controller.isBound && this.requiresUnbind(controller)) {\n                controller.onUnbind(this);\n            }\n            return value;\n        }\n        requiresUnbind(controller) {\n            return (controller.sourceLifetime !== SourceLifetime.coupled ||\n                this.first !== this.last ||\n                this.first.propertySource !== controller.source);\n        }\n        unbind(controller) {\n            this.dispose();\n        }\n        observe(source, context) {\n            if (this.needsRefresh && this.last !== null) {\n                this.dispose();\n            }\n            const previousWatcher = watcher;\n            watcher = this.needsRefresh ? this : void 0;\n            this.needsRefresh = this.isVolatileBinding;\n            let result;\n            try {\n                result = this.expression(source, context);\n            }\n            finally {\n                watcher = previousWatcher;\n            }\n            return result;\n        }\n        // backwards compat with v1 kernel\n        disconnect() {\n            this.dispose();\n        }\n        dispose() {\n            if (this.last !== null) {\n                let current = this.first;\n                while (current !== void 0) {\n                    current.notifier.unsubscribe(this, current.propertyName);\n                    current = current.next;\n                }\n                this.last = null;\n                this.needsRefresh = this.needsQueue = this.isAsync;\n            }\n        }\n        watch(propertySource, propertyName) {\n            const prev = this.last;\n            const notifier = getNotifier(propertySource);\n            const current = prev === null ? this.first : {};\n            current.propertySource = propertySource;\n            current.propertyName = propertyName;\n            current.notifier = notifier;\n            notifier.subscribe(this, propertyName);\n            if (prev !== null) {\n                if (!this.needsRefresh) {\n                    // Declaring the variable prior to assignment below circumvents\n                    // a bug in Angular's optimization process causing infinite recursion\n                    // of this watch() method. Details https://github.com/microsoft/fast/issues/4969\n                    let prevValue;\n                    watcher = void 0;\n                    /* eslint-disable-next-line */\n                    prevValue = prev.propertySource[prev.propertyName];\n                    /* eslint-disable-next-line */\n                    watcher = this;\n                    if (propertySource === prevValue) {\n                        this.needsRefresh = true;\n                    }\n                }\n                prev.next = current;\n            }\n            this.last = current;\n        }\n        handleChange() {\n            if (this.needsQueue) {\n                this.needsQueue = false;\n                queueUpdate(this);\n            }\n            else if (!this.isAsync) {\n                this.call();\n            }\n        }\n        call() {\n            if (this.last !== null) {\n                this.needsQueue = this.isAsync;\n                this.notify(this);\n            }\n        }\n        *records() {\n            let next = this.first;\n            while (next !== void 0) {\n                yield next;\n                next = next.next;\n            }\n        }\n    }\n    makeSerializationNoop(ExpressionNotifierImplementation);\n    return Object.freeze({\n        /**\n         * @internal\n         * @param factory - The factory used to create array observers.\n         */\n        setArrayObserverFactory(factory) {\n            createArrayObserver = factory;\n        },\n        /**\n         * Gets a notifier for an object or Array.\n         * @param source - The object or Array to get the notifier for.\n         */\n        getNotifier,\n        /**\n         * Records a property change for a source object.\n         * @param source - The object to record the change against.\n         * @param propertyName - The property to track as changed.\n         */\n        track(source, propertyName) {\n            watcher && watcher.watch(source, propertyName);\n        },\n        /**\n         * Notifies watchers that the currently executing property getter or function is volatile\n         * with respect to its observable dependencies.\n         */\n        trackVolatile() {\n            watcher && (watcher.needsRefresh = true);\n        },\n        /**\n         * Notifies subscribers of a source object of changes.\n         * @param source - the object to notify of changes.\n         * @param args - The change args to pass to subscribers.\n         */\n        notify(source, args) {\n            /* eslint-disable-next-line @typescript-eslint/no-use-before-define */\n            getNotifier(source).notify(args);\n        },\n        /**\n         * Defines an observable property on an object or prototype.\n         * @param target - The target object to define the observable on.\n         * @param nameOrAccessor - The name of the property to define as observable;\n         * or a custom accessor that specifies the property name and accessor implementation.\n         */\n        defineProperty(target, nameOrAccessor) {\n            if (isString(nameOrAccessor)) {\n                nameOrAccessor = new DefaultObservableAccessor(nameOrAccessor);\n            }\n            getAccessors(target).push(nameOrAccessor);\n            Reflect.defineProperty(target, nameOrAccessor.name, {\n                enumerable: true,\n                get() {\n                    return nameOrAccessor.getValue(this);\n                },\n                set(newValue) {\n                    nameOrAccessor.setValue(this, newValue);\n                },\n            });\n        },\n        /**\n         * Finds all the observable accessors defined on the target,\n         * including its prototype chain.\n         * @param target - The target object to search for accessor on.\n         */\n        getAccessors,\n        /**\n         * Creates a {@link ExpressionNotifier} that can watch the\n         * provided {@link Expression} for changes.\n         * @param expression - The binding to observe.\n         * @param initialSubscriber - An initial subscriber to changes in the binding value.\n         * @param isVolatileBinding - Indicates whether the binding's dependency list must be re-evaluated on every value evaluation.\n         */\n        binding(expression, initialSubscriber, isVolatileBinding = this.isVolatileBinding(expression)) {\n            return new ExpressionNotifierImplementation(expression, initialSubscriber, isVolatileBinding);\n        },\n        /**\n         * Determines whether a binding expression is volatile and needs to have its dependency list re-evaluated\n         * on every evaluation of the value.\n         * @param expression - The binding to inspect.\n         */\n        isVolatileBinding(expression) {\n            return volatileRegex.test(expression.toString());\n        },\n    });\n});\n/**\n * Decorator: Defines an observable property on the target.\n * @param target - The target to define the observable on.\n * @param nameOrAccessor - The property name or accessor to define the observable as.\n * @public\n */\nexport function observable(target, nameOrAccessor) {\n    Observable.defineProperty(target, nameOrAccessor);\n}\n/**\n * Decorator: Marks a property getter as having volatile observable dependencies.\n * @param target - The target that the property is defined on.\n * @param name - The property name.\n * @param name - The existing descriptor.\n * @public\n */\nexport function volatile(target, name, descriptor) {\n    return Object.assign({}, descriptor, {\n        get() {\n            Observable.trackVolatile();\n            return descriptor.get.apply(this);\n        },\n    });\n}\nconst contextEvent = FAST.getById(KernelServiceId.contextEvent, () => {\n    let current = null;\n    return {\n        get() {\n            return current;\n        },\n        set(event) {\n            current = event;\n        },\n    };\n});\n/**\n * Provides additional contextual information available to behaviors and expressions.\n * @public\n */\nexport const ExecutionContext = Object.freeze({\n    /**\n     * A default execution context.\n     */\n    default: {\n        index: 0,\n        length: 0,\n        get event() {\n            return ExecutionContext.getEvent();\n        },\n        eventDetail() {\n            return this.event.detail;\n        },\n        eventTarget() {\n            return this.event.target;\n        },\n    },\n    /**\n     * Gets the current event.\n     * @returns An event object.\n     */\n    getEvent() {\n        return contextEvent.get();\n    },\n    /**\n     * Sets the current event.\n     * @param event - An event object.\n     */\n    setEvent(event) {\n        contextEvent.set(event);\n    },\n});\n","let kernelMode;\nconst kernelAttr = \"fast-kernel\";\ntry {\n    if (document.currentScript) {\n        kernelMode = document.currentScript.getAttribute(kernelAttr);\n    }\n    else {\n        const scripts = document.getElementsByTagName(\"script\");\n        const currentScript = scripts[scripts.length - 1];\n        kernelMode = currentScript.getAttribute(kernelAttr);\n    }\n}\ncatch (e) {\n    kernelMode = \"isolate\";\n}\nlet KernelServiceId;\nswitch (kernelMode) {\n    case \"share\": // share the kernel across major versions\n        KernelServiceId = Object.freeze({\n            updateQueue: 1,\n            observable: 2,\n            contextEvent: 3,\n            elementRegistry: 4,\n        });\n        break;\n    case \"share-v2\": // only share the kernel with other v2 instances\n        KernelServiceId = Object.freeze({\n            updateQueue: 1.2,\n            observable: 2.2,\n            contextEvent: 3.2,\n            elementRegistry: 4.2,\n        });\n        break;\n    default:\n        // fully isolate the kernel from all other FAST instances\n        const postfix = `-${Math.random().toString(36).substring(2, 8)}`;\n        KernelServiceId = Object.freeze({\n            updateQueue: `1.2${postfix}`,\n            observable: `2.2${postfix}`,\n            contextEvent: `3.2${postfix}`,\n            elementRegistry: `4.2${postfix}`,\n        });\n        break;\n}\nexport { KernelServiceId };\n/**\n * Determines whether or not an object is a function.\n * @public\n */\nexport const isFunction = (object) => typeof object === \"function\";\n/**\n * Determines whether or not an object is a string.\n * @public\n */\nexport const isString = (object) => typeof object === \"string\";\n/**\n * A function which does nothing.\n * @public\n */\nexport const noop = () => void 0;\n","import { noop } from \"./interfaces.js\";\nimport \"./polyfills.js\";\n// ensure FAST global - duplicated debug.ts\nconst propConfig = {\n    configurable: false,\n    enumerable: false,\n    writable: false,\n};\nif (globalThis.FAST === void 0) {\n    Reflect.defineProperty(globalThis, \"FAST\", Object.assign({ value: Object.create(null) }, propConfig));\n}\n/**\n * The FAST global.\n * @public\n */\nexport const FAST = globalThis.FAST;\nif (FAST.getById === void 0) {\n    const storage = Object.create(null);\n    Reflect.defineProperty(FAST, \"getById\", Object.assign({ value(id, initialize) {\n            let found = storage[id];\n            if (found === void 0) {\n                found = initialize ? (storage[id] = initialize()) : null;\n            }\n            return found;\n        } }, propConfig));\n}\nif (FAST.error === void 0) {\n    Object.assign(FAST, {\n        warn() { },\n        error(code) {\n            return new Error(`Error ${code}`);\n        },\n        addMessages() { },\n    });\n}\n/**\n * A readonly, empty array.\n * @remarks\n * Typically returned by APIs that return arrays when there are\n * no actual items to return.\n * @public\n */\nexport const emptyArray = Object.freeze([]);\n/**\n * Do not change. Part of shared kernel contract.\n * @internal\n */\nexport function createTypeRegistry() {\n    const typeToDefinition = new Map();\n    return Object.freeze({\n        register(definition) {\n            if (typeToDefinition.has(definition.type)) {\n                return false;\n            }\n            typeToDefinition.set(definition.type, definition);\n            return true;\n        },\n        getByType(key) {\n            return typeToDefinition.get(key);\n        },\n        getForInstance(object) {\n            if (object === null || object === void 0) {\n                return void 0;\n            }\n            return typeToDefinition.get(object.constructor);\n        },\n    });\n}\n/**\n * Creates a function capable of locating metadata associated with a type.\n * @returns A metadata locator function.\n * @internal\n */\nexport function createMetadataLocator() {\n    const metadataLookup = new WeakMap();\n    return function (target) {\n        let metadata = metadataLookup.get(target);\n        if (metadata === void 0) {\n            let currentTarget = Reflect.getPrototypeOf(target);\n            while (metadata === void 0 && currentTarget !== null) {\n                metadata = metadataLookup.get(currentTarget);\n                currentTarget = Reflect.getPrototypeOf(currentTarget);\n            }\n            metadata = metadata === void 0 ? [] : metadata.slice(0);\n            metadataLookup.set(target, metadata);\n        }\n        return metadata;\n    };\n}\n/**\n * Makes a type noop for JSON serialization.\n * @param type - The type to make noop for JSON serialization.\n * @internal\n */\nexport function makeSerializationNoop(type) {\n    type.prototype.toJSON = noop;\n}\n","/* eslint-disable @typescript-eslint/ban-ts-comment */\n(function ensureGlobalThis() {\n    if (typeof globalThis !== \"undefined\") {\n        // We're running in a modern environment.\n        return;\n    }\n    // @ts-ignore\n    if (typeof global !== \"undefined\") {\n        // We're running in NodeJS\n        // @ts-ignore\n        global.globalThis = global;\n    }\n    else if (typeof self !== \"undefined\") {\n        self.globalThis = self;\n    }\n    else if (typeof window !== \"undefined\") {\n        // We're running in the browser's main thread.\n        window.globalThis = window;\n    }\n    else {\n        // Hopefully we never get here...\n        // Not all environments allow eval and Function. Use only as a last resort:\n        // eslint-disable-next-line no-new-func\n        const result = new Function(\"return this\")();\n        result.globalThis = result;\n    }\n})();\n","import { KernelServiceId } from \"../interfaces.js\";\nimport { FAST } from \"../platform.js\";\n/**\n * The default UpdateQueue.\n * @public\n */\nexport const Updates = FAST.getById(KernelServiceId.updateQueue, () => {\n    const tasks = [];\n    const pendingErrors = [];\n    const rAF = globalThis.requestAnimationFrame;\n    let updateAsync = true;\n    function throwFirstError() {\n        if (pendingErrors.length) {\n            throw pendingErrors.shift();\n        }\n    }\n    function tryRunTask(task) {\n        try {\n            task.call();\n        }\n        catch (error) {\n            if (updateAsync) {\n                pendingErrors.push(error);\n                setTimeout(throwFirstError, 0);\n            }\n            else {\n                tasks.length = 0;\n                throw error;\n            }\n        }\n    }\n    function process() {\n        const capacity = 1024;\n        let index = 0;\n        while (index < tasks.length) {\n            tryRunTask(tasks[index]);\n            index++;\n            // Prevent leaking memory for long chains of recursive calls to `enqueue`.\n            // If we call `enqueue` within a task scheduled by `enqueue`, the queue will\n            // grow, but to avoid an O(n) walk for every task we execute, we don't\n            // shift tasks off the queue after they have been executed.\n            // Instead, we periodically shift 1024 tasks off the queue.\n            if (index > capacity) {\n                // Manually shift all values starting at the index back to the\n                // beginning of the queue.\n                for (let scan = 0, newLength = tasks.length - index; scan < newLength; scan++) {\n                    tasks[scan] = tasks[scan + index];\n                }\n                tasks.length -= index;\n                index = 0;\n            }\n        }\n        tasks.length = 0;\n    }\n    function enqueue(callable) {\n        tasks.push(callable);\n        if (tasks.length < 2) {\n            updateAsync ? rAF(process) : process();\n        }\n    }\n    return Object.freeze({\n        enqueue,\n        next: () => new Promise(enqueue),\n        process,\n        setMode: (isAsync) => (updateAsync = isAsync),\n    });\n});\n","/**\n * An implementation of {@link Notifier} that efficiently keeps track of\n * subscribers interested in a specific change notification on an\n * observable subject.\n *\n * @remarks\n * This set is optimized for the most common scenario of 1 or 2 subscribers.\n * With this in mind, it can store a subscriber in an internal field, allowing it to avoid Array#push operations.\n * If the set ever exceeds two subscribers, it upgrades to an array automatically.\n * @public\n */\nexport class SubscriberSet {\n    /**\n     * Creates an instance of SubscriberSet for the specified subject.\n     * @param subject - The subject that subscribers will receive notifications from.\n     * @param initialSubscriber - An initial subscriber to changes.\n     */\n    constructor(subject, initialSubscriber) {\n        this.sub1 = void 0;\n        this.sub2 = void 0;\n        this.spillover = void 0;\n        this.subject = subject;\n        this.sub1 = initialSubscriber;\n    }\n    /**\n     * Checks whether the provided subscriber has been added to this set.\n     * @param subscriber - The subscriber to test for inclusion in this set.\n     */\n    has(subscriber) {\n        return this.spillover === void 0\n            ? this.sub1 === subscriber || this.sub2 === subscriber\n            : this.spillover.indexOf(subscriber) !== -1;\n    }\n    /**\n     * Subscribes to notification of changes in an object's state.\n     * @param subscriber - The object that is subscribing for change notification.\n     */\n    subscribe(subscriber) {\n        const spillover = this.spillover;\n        if (spillover === void 0) {\n            if (this.has(subscriber)) {\n                return;\n            }\n            if (this.sub1 === void 0) {\n                this.sub1 = subscriber;\n                return;\n            }\n            if (this.sub2 === void 0) {\n                this.sub2 = subscriber;\n                return;\n            }\n            this.spillover = [this.sub1, this.sub2, subscriber];\n            this.sub1 = void 0;\n            this.sub2 = void 0;\n        }\n        else {\n            const index = spillover.indexOf(subscriber);\n            if (index === -1) {\n                spillover.push(subscriber);\n            }\n        }\n    }\n    /**\n     * Unsubscribes from notification of changes in an object's state.\n     * @param subscriber - The object that is unsubscribing from change notification.\n     */\n    unsubscribe(subscriber) {\n        const spillover = this.spillover;\n        if (spillover === void 0) {\n            if (this.sub1 === subscriber) {\n                this.sub1 = void 0;\n            }\n            else if (this.sub2 === subscriber) {\n                this.sub2 = void 0;\n            }\n        }\n        else {\n            const index = spillover.indexOf(subscriber);\n            if (index !== -1) {\n                spillover.splice(index, 1);\n            }\n        }\n    }\n    /**\n     * Notifies all subscribers.\n     * @param args - Data passed along to subscribers during notification.\n     */\n    notify(args) {\n        const spillover = this.spillover;\n        const subject = this.subject;\n        if (spillover === void 0) {\n            const sub1 = this.sub1;\n            const sub2 = this.sub2;\n            if (sub1 !== void 0) {\n                sub1.handleChange(subject, args);\n            }\n            if (sub2 !== void 0) {\n                sub2.handleChange(subject, args);\n            }\n        }\n        else {\n            for (let i = 0, ii = spillover.length; i < ii; ++i) {\n                spillover[i].handleChange(subject, args);\n            }\n        }\n    }\n}\n/**\n * An implementation of Notifier that allows subscribers to be notified\n * of individual property changes on an object.\n * @public\n */\nexport class PropertyChangeNotifier {\n    /**\n     * Creates an instance of PropertyChangeNotifier for the specified subject.\n     * @param subject - The object that subscribers will receive notifications for.\n     */\n    constructor(subject) {\n        this.subscribers = {};\n        this.subjectSubscribers = null;\n        this.subject = subject;\n    }\n    /**\n     * Notifies all subscribers, based on the specified property.\n     * @param propertyName - The property name, passed along to subscribers during notification.\n     */\n    notify(propertyName) {\n        var _a, _b;\n        (_a = this.subscribers[propertyName]) === null || _a === void 0 ? void 0 : _a.notify(propertyName);\n        (_b = this.subjectSubscribers) === null || _b === void 0 ? void 0 : _b.notify(propertyName);\n    }\n    /**\n     * Subscribes to notification of changes in an object's state.\n     * @param subscriber - The object that is subscribing for change notification.\n     * @param propertyToWatch - The name of the property that the subscriber is interested in watching for changes.\n     */\n    subscribe(subscriber, propertyToWatch) {\n        var _a, _b;\n        let subscribers;\n        if (propertyToWatch) {\n            subscribers =\n                (_a = this.subscribers[propertyToWatch]) !== null && _a !== void 0 ? _a : (this.subscribers[propertyToWatch] = new SubscriberSet(this.subject));\n        }\n        else {\n            subscribers =\n                (_b = this.subjectSubscribers) !== null && _b !== void 0 ? _b : (this.subjectSubscribers = new SubscriberSet(this.subject));\n        }\n        subscribers.subscribe(subscriber);\n    }\n    /**\n     * Unsubscribes from notification of changes in an object's state.\n     * @param subscriber - The object that is unsubscribing from change notification.\n     * @param propertyToUnwatch - The name of the property that the subscriber is no longer interested in watching.\n     */\n    unsubscribe(subscriber, propertyToUnwatch) {\n        var _a, _b;\n        if (propertyToUnwatch) {\n            (_a = this.subscribers[propertyToUnwatch]) === null || _a === void 0 ? void 0 : _a.unsubscribe(subscriber);\n        }\n        else {\n            (_b = this.subjectSubscribers) === null || _b === void 0 ? void 0 : _b.unsubscribe(subscriber);\n        }\n    }\n}\n","import { Observable } from \"../observation/observable.js\";\nimport { isString } from \"../interfaces.js\";\nimport { Updates } from \"../observation/update-queue.js\";\nimport { DOM } from \"../dom.js\";\nimport { createMetadataLocator } from \"../platform.js\";\nconst booleanMode = \"boolean\";\nconst reflectMode = \"reflect\";\n/**\n * Metadata used to configure a custom attribute's behavior.\n * @public\n */\nexport const AttributeConfiguration = Object.freeze({\n    /**\n     * Locates all attribute configurations associated with a type.\n     */\n    locate: createMetadataLocator(),\n});\n/**\n * A {@link ValueConverter} that converts to and from `boolean` values.\n * @remarks\n * Used automatically when the `boolean` {@link AttributeMode} is selected.\n * @public\n */\nexport const booleanConverter = {\n    toView(value) {\n        return value ? \"true\" : \"false\";\n    },\n    fromView(value) {\n        return value === null ||\n            value === void 0 ||\n            value === \"false\" ||\n            value === false ||\n            value === 0\n            ? false\n            : true;\n    },\n};\n/**\n * A {@link ValueConverter} that converts to and from `boolean` values. `null`, `undefined`, `\"\"`, and `void` values are converted to `null`.\n * @public\n */\nexport const nullableBooleanConverter = {\n    toView(value) {\n        return typeof value === \"boolean\" ? value.toString() : \"\";\n    },\n    fromView(value) {\n        return [null, undefined, void 0].includes(value)\n            ? null\n            : booleanConverter.fromView(value);\n    },\n};\nfunction toNumber(value) {\n    if (value === null || value === undefined) {\n        return null;\n    }\n    const number = value * 1;\n    return isNaN(number) ? null : number;\n}\n/**\n * A {@link ValueConverter} that converts to and from `number` values.\n * @remarks\n * This converter allows for nullable numbers, returning `null` if the\n * input was `null`, `undefined`, or `NaN`.\n * @public\n */\nexport const nullableNumberConverter = {\n    toView(value) {\n        const output = toNumber(value);\n        return output ? output.toString() : output;\n    },\n    fromView: toNumber,\n};\n/**\n * An implementation of {@link Accessor} that supports reactivity,\n * change callbacks, attribute reflection, and type conversion for\n * custom elements.\n * @public\n */\nexport class AttributeDefinition {\n    /**\n     * Creates an instance of AttributeDefinition.\n     * @param Owner - The class constructor that owns this attribute.\n     * @param name - The name of the property associated with the attribute.\n     * @param attribute - The name of the attribute in HTML.\n     * @param mode - The {@link AttributeMode} that describes the behavior of this attribute.\n     * @param converter - A {@link ValueConverter} that integrates with the property getter/setter\n     * to convert values to and from a DOM string.\n     */\n    constructor(Owner, name, attribute = name.toLowerCase(), mode = reflectMode, converter) {\n        this.guards = new Set();\n        this.Owner = Owner;\n        this.name = name;\n        this.attribute = attribute;\n        this.mode = mode;\n        this.converter = converter;\n        this.fieldName = `_${name}`;\n        this.callbackName = `${name}Changed`;\n        this.hasCallback = this.callbackName in Owner.prototype;\n        if (mode === booleanMode && converter === void 0) {\n            this.converter = booleanConverter;\n        }\n    }\n    /**\n     * Sets the value of the attribute/property on the source element.\n     * @param source - The source element to access.\n     * @param value - The value to set the attribute/property to.\n     */\n    setValue(source, newValue) {\n        const oldValue = source[this.fieldName];\n        const converter = this.converter;\n        if (converter !== void 0) {\n            newValue = converter.fromView(newValue);\n        }\n        if (oldValue !== newValue) {\n            source[this.fieldName] = newValue;\n            this.tryReflectToAttribute(source);\n            if (this.hasCallback) {\n                source[this.callbackName](oldValue, newValue);\n            }\n            source.$fastController.notify(this.name);\n        }\n    }\n    /**\n     * Gets the value of the attribute/property on the source element.\n     * @param source - The source element to access.\n     */\n    getValue(source) {\n        Observable.track(source, this.name);\n        return source[this.fieldName];\n    }\n    /** @internal */\n    onAttributeChangedCallback(element, value) {\n        if (this.guards.has(element)) {\n            return;\n        }\n        this.guards.add(element);\n        this.setValue(element, value);\n        this.guards.delete(element);\n    }\n    tryReflectToAttribute(element) {\n        const mode = this.mode;\n        const guards = this.guards;\n        if (guards.has(element) || mode === \"fromView\") {\n            return;\n        }\n        Updates.enqueue(() => {\n            guards.add(element);\n            const latestValue = element[this.fieldName];\n            switch (mode) {\n                case reflectMode:\n                    const converter = this.converter;\n                    DOM.setAttribute(element, this.attribute, converter !== void 0 ? converter.toView(latestValue) : latestValue);\n                    break;\n                case booleanMode:\n                    DOM.setBooleanAttribute(element, this.attribute, latestValue);\n                    break;\n            }\n            guards.delete(element);\n        });\n    }\n    /**\n     * Collects all attribute definitions associated with the owner.\n     * @param Owner - The class constructor to collect attribute for.\n     * @param attributeLists - Any existing attributes to collect and merge with those associated with the owner.\n     * @internal\n     */\n    static collect(Owner, ...attributeLists) {\n        const attributes = [];\n        attributeLists.push(AttributeConfiguration.locate(Owner));\n        for (let i = 0, ii = attributeLists.length; i < ii; ++i) {\n            const list = attributeLists[i];\n            if (list === void 0) {\n                continue;\n            }\n            for (let j = 0, jj = list.length; j < jj; ++j) {\n                const config = list[j];\n                if (isString(config)) {\n                    attributes.push(new AttributeDefinition(Owner, config));\n                }\n                else {\n                    attributes.push(new AttributeDefinition(Owner, config.property, config.attribute, config.mode, config.converter));\n                }\n            }\n        }\n        return attributes;\n    }\n}\nexport function attr(configOrTarget, prop) {\n    let config;\n    function decorator($target, $prop) {\n        if (arguments.length > 1) {\n            // Non invocation:\n            // - @attr\n            // Invocation with or w/o opts:\n            // - @attr()\n            // - @attr({...opts})\n            config.property = $prop;\n        }\n        AttributeConfiguration.locate($target.constructor).push(config);\n    }\n    if (arguments.length > 1) {\n        // Non invocation:\n        // - @attr\n        config = {};\n        decorator(configOrTarget, prop);\n        return;\n    }\n    // Invocation with or w/o opts:\n    // - @attr()\n    // - @attr({...opts})\n    config = configOrTarget === void 0 ? {} : configOrTarget;\n    return decorator;\n}\n","import \"./interfaces.js\";\nimport { FAST } from \"./platform.js\";\n/**\n * The type of HTML aspect to target.\n * @public\n */\nexport const DOMAspect = Object.freeze({\n    /**\n     * Not aspected.\n     */\n    none: 0,\n    /**\n     * An attribute.\n     */\n    attribute: 1,\n    /**\n     * A boolean attribute.\n     */\n    booleanAttribute: 2,\n    /**\n     * A property.\n     */\n    property: 3,\n    /**\n     * Content\n     */\n    content: 4,\n    /**\n     * A token list.\n     */\n    tokenList: 5,\n    /**\n     * An event.\n     */\n    event: 6,\n});\nconst createHTML = html => html;\nconst fastTrustedType = globalThis.trustedTypes\n    ? globalThis.trustedTypes.createPolicy(\"fast-html\", { createHTML })\n    : { createHTML };\nlet defaultPolicy = Object.freeze({\n    createHTML(value) {\n        return fastTrustedType.createHTML(value);\n    },\n    protect(tagName, aspect, aspectName, sink) {\n        return sink;\n    },\n});\nconst fastPolicy = defaultPolicy;\n/**\n * Common DOM APIs.\n * @public\n */\nexport const DOM = Object.freeze({\n    /**\n     * Gets the dom policy used by the templating system.\n     */\n    get policy() {\n        return defaultPolicy;\n    },\n    /**\n     * Sets the dom policy used by the templating system.\n     * @param policy - The policy to set.\n     * @remarks\n     * This API can only be called once, for security reasons. It should be\n     * called by the application developer at the start of their program.\n     */\n    setPolicy(value) {\n        if (defaultPolicy !== fastPolicy) {\n            throw FAST.error(1201 /* Message.onlySetDOMPolicyOnce */);\n        }\n        defaultPolicy = value;\n    },\n    /**\n     * Sets an attribute value on an element.\n     * @param element - The element to set the attribute value on.\n     * @param attributeName - The attribute name to set.\n     * @param value - The value of the attribute to set.\n     * @remarks\n     * If the value is `null` or `undefined`, the attribute is removed, otherwise\n     * it is set to the provided value using the standard `setAttribute` API.\n     */\n    setAttribute(element, attributeName, value) {\n        value === null || value === undefined\n            ? element.removeAttribute(attributeName)\n            : element.setAttribute(attributeName, value);\n    },\n    /**\n     * Sets a boolean attribute value.\n     * @param element - The element to set the boolean attribute value on.\n     * @param attributeName - The attribute name to set.\n     * @param value - The value of the attribute to set.\n     * @remarks\n     * If the value is true, the attribute is added; otherwise it is removed.\n     */\n    setBooleanAttribute(element, attributeName, value) {\n        value\n            ? element.setAttribute(attributeName, \"\")\n            : element.removeAttribute(attributeName);\n    },\n});\n","/**\n * Captures a binding expression along with related information and capabilities.\n *\n * @public\n */\nexport class Binding {\n    /**\n     * Creates a binding.\n     * @param evaluate - Evaluates the binding.\n     * @param policy - The security policy to associate with this binding.\n     * @param isVolatile - Indicates whether the binding is volatile.\n     */\n    constructor(evaluate, policy, isVolatile = false) {\n        this.evaluate = evaluate;\n        this.policy = policy;\n        this.isVolatile = isVolatile;\n    }\n}\n","import { isString, noop } from \"../interfaces.js\";\nimport { HTMLDirective } from \"./html-directive.js\";\nimport { NodeObservationDirective } from \"./node-observation.js\";\n/**\n * The runtime behavior for child node observation.\n * @public\n */\nexport class ChildrenDirective extends NodeObservationDirective {\n    /**\n     * Creates an instance of ChildrenDirective.\n     * @param options - The options to use in configuring the child observation behavior.\n     */\n    constructor(options) {\n        super(options);\n        this.observerProperty = Symbol();\n        this.handleEvent = (mutations, observer) => {\n            const target = observer.target;\n            this.updateTarget(this.getSource(target), this.computeNodes(target));\n        };\n        options.childList = true;\n    }\n    /**\n     * Begins observation of the nodes.\n     * @param target - The target to observe.\n     */\n    observe(target) {\n        let observer = target[this.observerProperty];\n        if (!observer) {\n            observer = new MutationObserver(this.handleEvent);\n            observer.toJSON = noop;\n            target[this.observerProperty] = observer;\n        }\n        observer.target = target;\n        observer.observe(target, this.options);\n    }\n    /**\n     * Disconnects observation of the nodes.\n     * @param target - The target to unobserve.\n     */\n    disconnect(target) {\n        const observer = target[this.observerProperty];\n        observer.target = null;\n        observer.disconnect();\n    }\n    /**\n     * Retrieves the raw nodes that should be assigned to the source property.\n     * @param target - The target to get the node to.\n     */\n    getNodes(target) {\n        if (\"selector\" in this.options) {\n            return Array.from(target.querySelectorAll(this.options.selector));\n        }\n        return Array.from(target.childNodes);\n    }\n}\nHTMLDirective.define(ChildrenDirective);\n/**\n * A directive that observes the `childNodes` of an element and updates a property\n * whenever they change.\n * @param propertyOrOptions - The options used to configure child node observation.\n * @public\n */\nexport function children(propertyOrOptions) {\n    if (isString(propertyOrOptions)) {\n        propertyOrOptions = {\n            property: propertyOrOptions,\n        };\n    }\n    return new ChildrenDirective(propertyOrOptions);\n}\n","import { DOMAspect } from \"../dom.js\";\nimport { createTypeRegistry, makeSerializationNoop } from \"../platform.js\";\nimport { Markup } from \"./markup.js\";\nconst registry = createTypeRegistry();\n/**\n * Instructs the template engine to apply behavior to a node.\n * @public\n */\nexport const HTMLDirective = Object.freeze({\n    /**\n     * Gets the directive definition associated with the instance.\n     * @param instance - The directive instance to retrieve the definition for.\n     */\n    getForInstance: registry.getForInstance,\n    /**\n     * Gets the directive definition associated with the specified type.\n     * @param type - The directive type to retrieve the definition for.\n     */\n    getByType: registry.getByType,\n    /**\n     * Defines an HTMLDirective based on the options.\n     * @param type - The type to define as a directive.\n     * @param options - Options that specify the directive's application.\n     */\n    define(type, options) {\n        options = options || {};\n        options.type = type;\n        registry.register(options);\n        return type;\n    },\n    /**\n     *\n     * @param directive - The directive to assign the aspect to.\n     * @param value - The value to base the aspect determination on.\n     * @remarks\n     * If a falsy value is provided, then the content aspect will be assigned.\n     */\n    assignAspect(directive, value) {\n        if (!value) {\n            directive.aspectType = DOMAspect.content;\n            return;\n        }\n        directive.sourceAspect = value;\n        switch (value[0]) {\n            case \":\":\n                directive.targetAspect = value.substring(1);\n                directive.aspectType =\n                    directive.targetAspect === \"classList\"\n                        ? DOMAspect.tokenList\n                        : DOMAspect.property;\n                break;\n            case \"?\":\n                directive.targetAspect = value.substring(1);\n                directive.aspectType = DOMAspect.booleanAttribute;\n                break;\n            case \"@\":\n                directive.targetAspect = value.substring(1);\n                directive.aspectType = DOMAspect.event;\n                break;\n            default:\n                directive.targetAspect = value;\n                directive.aspectType = DOMAspect.attribute;\n                break;\n        }\n    },\n});\n/**\n * Decorator: Defines an HTMLDirective.\n * @param options - Provides options that specify the directive's application.\n * @public\n */\nexport function htmlDirective(options) {\n    /* eslint-disable-next-line @typescript-eslint/explicit-function-return-type */\n    return function (type) {\n        HTMLDirective.define(type, options);\n    };\n}\n/**\n * A base class used for attribute directives that don't need internal state.\n * @public\n */\nexport class StatelessAttachedAttributeDirective {\n    /**\n     * Creates an instance of RefDirective.\n     * @param options - The options to use in configuring the directive.\n     */\n    constructor(options) {\n        this.options = options;\n    }\n    /**\n     * Creates a placeholder string based on the directive's index within the template.\n     * @param index - The index of the directive within the template.\n     * @remarks\n     * Creates a custom attribute placeholder.\n     */\n    createHTML(add) {\n        return Markup.attribute(add(this));\n    }\n    /**\n     * Creates a behavior.\n     * @param targets - The targets available for behaviors to be attached to.\n     */\n    createBehavior() {\n        return this;\n    }\n}\nmakeSerializationNoop(StatelessAttachedAttributeDirective);\n","const marker = `fast-${Math.random().toString(36).substring(2, 8)}`;\nconst interpolationStart = `${marker}{`;\nconst interpolationEnd = `}${marker}`;\nconst interpolationEndLength = interpolationEnd.length;\nlet id = 0;\n/** @internal */\nexport const nextId = () => `${marker}-${++id}`;\n/**\n * Common APIs related to markup generation.\n * @public\n */\nexport const Markup = Object.freeze({\n    /**\n     * Creates a placeholder string suitable for marking out a location *within*\n     * an attribute value or HTML content.\n     * @param index - The directive index to create the placeholder for.\n     * @remarks\n     * Used internally by binding directives.\n     */\n    interpolation: (id) => `${interpolationStart}${id}${interpolationEnd}`,\n    /**\n     * Creates a placeholder that manifests itself as an attribute on an\n     * element.\n     * @param attributeName - The name of the custom attribute.\n     * @param index - The directive index to create the placeholder for.\n     * @remarks\n     * Used internally by attribute directives such as `ref`, `slotted`, and `children`.\n     */\n    attribute: (id) => `${nextId()}=\"${interpolationStart}${id}${interpolationEnd}\"`,\n    /**\n     * Creates a placeholder that manifests itself as a marker within the DOM structure.\n     * @param index - The directive index to create the placeholder for.\n     * @remarks\n     * Used internally by structural directives such as `repeat`.\n     */\n    comment: (id) => `<!--${interpolationStart}${id}${interpolationEnd}-->`,\n});\n/**\n * Common APIs related to content parsing.\n * @public\n */\nexport const Parser = Object.freeze({\n    /**\n     * Parses text content or HTML attribute content, separating out the static strings\n     * from the directives.\n     * @param value - The content or attribute string to parse.\n     * @param factories - A list of directives to search for in the string.\n     * @returns A heterogeneous array of static strings interspersed with\n     * directives or null if no directives are found in the string.\n     */\n    parse(value, factories) {\n        const parts = value.split(interpolationStart);\n        if (parts.length === 1) {\n            return null;\n        }\n        const result = [];\n        for (let i = 0, ii = parts.length; i < ii; ++i) {\n            const current = parts[i];\n            const index = current.indexOf(interpolationEnd);\n            let literal;\n            if (index === -1) {\n                literal = current;\n            }\n            else {\n                const factoryId = current.substring(0, index);\n                result.push(factories[factoryId]);\n                literal = current.substring(index + interpolationEndLength);\n            }\n            if (literal !== \"\") {\n                result.push(literal);\n            }\n        }\n        return result;\n    },\n});\n","import { emptyArray } from \"../platform.js\";\nimport { StatelessAttachedAttributeDirective } from \"./html-directive.js\";\nconst selectElements = (value) => value.nodeType === 1;\n/**\n * Creates a function that can be used to filter a Node array, selecting only elements.\n * @param selector - An optional selector to restrict the filter to.\n * @public\n */\nexport const elements = (selector) => selector\n    ? value => value.nodeType === 1 && value.matches(selector)\n    : selectElements;\n/**\n * A base class for node observation.\n * @public\n * @remarks\n * Internally used by the SlottedDirective and the ChildrenDirective.\n */\nexport class NodeObservationDirective extends StatelessAttachedAttributeDirective {\n    /**\n     * The unique id of the factory.\n     */\n    get id() {\n        return this._id;\n    }\n    set id(value) {\n        this._id = value;\n        this._controllerProperty = `${value}-c`;\n    }\n    /**\n     * Bind this behavior to the source.\n     * @param source - The source to bind to.\n     * @param context - The execution context that the binding is operating within.\n     * @param targets - The targets that behaviors in a view can attach to.\n     */\n    bind(controller) {\n        const target = controller.targets[this.targetNodeId];\n        target[this._controllerProperty] = controller;\n        this.updateTarget(controller.source, this.computeNodes(target));\n        this.observe(target);\n        controller.onUnbind(this);\n    }\n    /**\n     * Unbinds this behavior from the source.\n     * @param source - The source to unbind from.\n     * @param context - The execution context that the binding is operating within.\n     * @param targets - The targets that behaviors in a view can attach to.\n     */\n    unbind(controller) {\n        const target = controller.targets[this.targetNodeId];\n        this.updateTarget(controller.source, emptyArray);\n        this.disconnect(target);\n        target[this._controllerProperty] = null;\n    }\n    /**\n     * Gets the data source for the target.\n     * @param target - The target to get the source for.\n     * @returns The source.\n     */\n    getSource(target) {\n        return target[this._controllerProperty].source;\n    }\n    /**\n     * Updates the source property with the computed nodes.\n     * @param source - The source object to assign the nodes property to.\n     * @param value - The nodes to assign to the source object property.\n     */\n    updateTarget(source, value) {\n        source[this.options.property] = value;\n    }\n    /**\n     * Computes the set of nodes that should be assigned to the source property.\n     * @param target - The target to compute the nodes for.\n     * @returns The computed nodes.\n     * @remarks\n     * Applies filters if provided.\n     */\n    computeNodes(target) {\n        let nodes = this.getNodes(target);\n        if (\"filter\" in this.options) {\n            nodes = nodes.filter(this.options.filter);\n        }\n        return nodes;\n    }\n}\n","import { isFunction, isString } from \"../interfaces.js\";\nimport { Binding } from \"../binding/binding.js\";\nimport { oneWay } from \"../binding/one-way.js\";\nimport { CSSDirective } from \"./css-directive.js\";\nimport { ElementStyles } from \"./element-styles.js\";\nimport { CSSBindingDirective } from \"./css-binding-directive.js\";\nconst marker = `${Math.random().toString(36).substring(2, 8)}`;\nlet varId = 0;\nconst nextCSSVariable = () => `--v${marker}${++varId}`;\nfunction collectStyles(strings, values) {\n    const styles = [];\n    let cssString = \"\";\n    const behaviors = [];\n    const add = (behavior) => {\n        behaviors.push(behavior);\n    };\n    for (let i = 0, ii = strings.length - 1; i < ii; ++i) {\n        cssString += strings[i];\n        let value = values[i];\n        if (isFunction(value)) {\n            value = new CSSBindingDirective(oneWay(value), nextCSSVariable()).createCSS(add);\n        }\n        else if (value instanceof Binding) {\n            value = new CSSBindingDirective(value, nextCSSVariable()).createCSS(add);\n        }\n        else if (CSSDirective.getForInstance(value) !== void 0) {\n            value = value.createCSS(add);\n        }\n        if (value instanceof ElementStyles || value instanceof CSSStyleSheet) {\n            if (cssString.trim() !== \"\") {\n                styles.push(cssString);\n                cssString = \"\";\n            }\n            styles.push(value);\n        }\n        else {\n            cssString += value;\n        }\n    }\n    cssString += strings[strings.length - 1];\n    if (cssString.trim() !== \"\") {\n        styles.push(cssString);\n    }\n    return {\n        styles,\n        behaviors,\n    };\n}\n/**\n * Transforms a template literal string into styles.\n * @param strings - The string fragments that are interpolated with the values.\n * @param values - The values that are interpolated with the string fragments.\n * @remarks\n * The css helper supports interpolation of strings and ElementStyle instances.\n * @public\n */\nexport const css = ((strings, ...values) => {\n    const { styles, behaviors } = collectStyles(strings, values);\n    const elementStyles = new ElementStyles(styles);\n    return behaviors.length ? elementStyles.withBehaviors(...behaviors) : elementStyles;\n});\nclass CSSPartial {\n    constructor(styles, behaviors) {\n        this.behaviors = behaviors;\n        this.css = \"\";\n        const stylesheets = styles.reduce((accumulated, current) => {\n            if (isString(current)) {\n                this.css += current;\n            }\n            else {\n                accumulated.push(current);\n            }\n            return accumulated;\n        }, []);\n        if (stylesheets.length) {\n            this.styles = new ElementStyles(stylesheets);\n        }\n    }\n    createCSS(add) {\n        this.behaviors.forEach(add);\n        if (this.styles) {\n            add(this);\n        }\n        return this.css;\n    }\n    addedCallback(controller) {\n        controller.addStyles(this.styles);\n    }\n    removedCallback(controller) {\n        controller.removeStyles(this.styles);\n    }\n}\nCSSDirective.define(CSSPartial);\ncss.partial = (strings, ...values) => {\n    const { styles, behaviors } = collectStyles(strings, values);\n    return new CSSPartial(styles, behaviors);\n};\n","import { Observable } from \"../observation/observable.js\";\nimport { Binding } from \"./binding.js\";\nclass OneWayBinding extends Binding {\n    createObserver(subscriber) {\n        return Observable.binding(this.evaluate, subscriber, this.isVolatile);\n    }\n}\n/**\n * Creates an standard binding.\n * @param expression - The binding to refresh when changed.\n * @param policy - The security policy to associate with th binding.\n * @param isVolatile - Indicates whether the binding is volatile or not.\n * @returns A binding configuration.\n * @public\n */\nexport function oneWay(expression, policy, isVolatile = Observable.isVolatileBinding(expression)) {\n    return new OneWayBinding(expression, policy, isVolatile);\n}\n/**\n * Creates an event listener binding.\n * @param expression - The binding to invoke when the event is raised.\n * @param options - Event listener options.\n * @returns A binding configuration.\n * @public\n */\nexport function listener(expression, options) {\n    const config = new OneWayBinding(expression);\n    config.options = options;\n    return config;\n}\n","import { createTypeRegistry } from \"../platform.js\";\nconst registry = createTypeRegistry();\n/**\n * Instructs the css engine to provide dynamic styles or\n * associate behaviors with styles.\n * @public\n */\nexport const CSSDirective = Object.freeze({\n    /**\n     * Gets the directive definition associated with the instance.\n     * @param instance - The directive instance to retrieve the definition for.\n     */\n    getForInstance: registry.getForInstance,\n    /**\n     * Gets the directive definition associated with the specified type.\n     * @param type - The directive type to retrieve the definition for.\n     */\n    getByType: registry.getByType,\n    /**\n     * Defines a CSSDirective.\n     * @param type - The type to define as a directive.\n     */\n    define(type) {\n        registry.register({ type });\n        return type;\n    },\n});\n/**\n * Decorator: Defines a CSSDirective.\n * @public\n */\nexport function cssDirective() {\n    /* eslint-disable-next-line @typescript-eslint/explicit-function-return-type */\n    return function (type) {\n        CSSDirective.define(type);\n    };\n}\n","let DefaultStyleStrategy;\nfunction reduceStyles(styles) {\n    return styles\n        .map((x) => x instanceof ElementStyles ? reduceStyles(x.styles) : [x])\n        .reduce((prev, curr) => prev.concat(curr), []);\n}\n/**\n * Represents styles that can be applied to a custom element.\n * @public\n */\nexport class ElementStyles {\n    /**\n     * Creates an instance of ElementStyles.\n     * @param styles - The styles that will be associated with elements.\n     */\n    constructor(styles) {\n        this.styles = styles;\n        this.targets = new WeakSet();\n        this._strategy = null;\n        this.behaviors = styles\n            .map((x) => x instanceof ElementStyles ? x.behaviors : null)\n            .reduce((prev, curr) => (curr === null ? prev : prev === null ? curr : prev.concat(curr)), null);\n    }\n    /**\n     * Gets the StyleStrategy associated with these element styles.\n     */\n    get strategy() {\n        if (this._strategy === null) {\n            this.withStrategy(DefaultStyleStrategy);\n        }\n        return this._strategy;\n    }\n    /** @internal */\n    addStylesTo(target) {\n        this.strategy.addStylesTo(target);\n        this.targets.add(target);\n    }\n    /** @internal */\n    removeStylesFrom(target) {\n        this.strategy.removeStylesFrom(target);\n        this.targets.delete(target);\n    }\n    /** @internal */\n    isAttachedTo(target) {\n        return this.targets.has(target);\n    }\n    /**\n     * Associates behaviors with this set of styles.\n     * @param behaviors - The behaviors to associate.\n     */\n    withBehaviors(...behaviors) {\n        this.behaviors =\n            this.behaviors === null ? behaviors : this.behaviors.concat(behaviors);\n        return this;\n    }\n    /**\n     * Sets the strategy that handles adding/removing these styles for an element.\n     * @param strategy - The strategy to use.\n     */\n    withStrategy(Strategy) {\n        this._strategy = new Strategy(reduceStyles(this.styles));\n        return this;\n    }\n    /**\n     * Sets the default strategy type to use when creating style strategies.\n     * @param Strategy - The strategy type to construct.\n     */\n    static setDefaultStrategy(Strategy) {\n        DefaultStyleStrategy = Strategy;\n    }\n    /**\n     * Normalizes a set of composable style options.\n     * @param styles - The style options to normalize.\n     * @returns A singular ElementStyles instance or undefined.\n     */\n    static normalize(styles) {\n        return styles === void 0\n            ? void 0\n            : Array.isArray(styles)\n                ? new ElementStyles(styles)\n                : styles instanceof ElementStyles\n                    ? styles\n                    : new ElementStyles([styles]);\n    }\n}\n/**\n * Indicates whether the DOM supports the adoptedStyleSheets feature.\n */\nElementStyles.supportsAdoptedStyleSheets = Array.isArray(document.adoptedStyleSheets) &&\n    \"replace\" in CSSStyleSheet.prototype;\n","import { CSSDirective } from \"./css-directive.js\";\nfunction handleChange(directive, controller, observer) {\n    controller.source.style.setProperty(directive.targetAspect, observer.bind(controller));\n}\n/**\n * Enables bindings in CSS.\n *\n * @public\n */\nexport class CSSBindingDirective {\n    /**\n     * Creates an instance of CSSBindingDirective.\n     * @param dataBinding - The binding to use in CSS.\n     * @param targetAspect - The CSS property to target.\n     */\n    constructor(dataBinding, targetAspect) {\n        this.dataBinding = dataBinding;\n        this.targetAspect = targetAspect;\n    }\n    /**\n     * Creates a CSS fragment to interpolate into the CSS document.\n     * @returns - the string to interpolate into CSS\n     */\n    createCSS(add) {\n        add(this);\n        return `var(${this.targetAspect})`;\n    }\n    /**\n     * Executed when this behavior is attached to a controller.\n     * @param controller - Controls the behavior lifecycle.\n     */\n    addedCallback(controller) {\n        var _a;\n        const element = controller.source;\n        if (!element.$cssBindings) {\n            element.$cssBindings = new Map();\n            const setAttribute = element.setAttribute;\n            element.setAttribute = (attr, value) => {\n                setAttribute.call(element, attr, value);\n                if (attr === \"style\") {\n                    element.$cssBindings.forEach((v, k) => handleChange(k, v.controller, v.observer));\n                }\n            };\n        }\n        const observer = (_a = controller[this.targetAspect]) !== null && _a !== void 0 ? _a : (controller[this.targetAspect] = this.dataBinding.createObserver(this, this));\n        observer.controller = controller;\n        controller.source.$cssBindings.set(this, { controller, observer });\n    }\n    /**\n     * Executed when this behavior's host is connected.\n     * @param controller - Controls the behavior lifecycle.\n     */\n    connectedCallback(controller) {\n        handleChange(this, controller, controller[this.targetAspect]);\n    }\n    /**\n     * Executed when this behavior is detached from a controller.\n     * @param controller - Controls the behavior lifecycle.\n     */\n    removedCallback(controller) {\n        if (controller.source.$cssBindings) {\n            controller.source.$cssBindings.delete(this);\n        }\n    }\n    /**\n     * Called when a subject this instance has subscribed to changes.\n     * @param subject - The subject of the change.\n     * @param args - The event args detailing the change that occurred.\n     *\n     * @internal\n     */\n    handleChange(_, observer) {\n        handleChange(this, observer.controller, observer);\n    }\n}\nCSSDirective.define(CSSBindingDirective);\n","import { isFunction } from \"../interfaces.js\";\nimport { ElementController } from \"./element-controller.js\";\nimport { FASTElementDefinition, } from \"./fast-definitions.js\";\n/* eslint-disable-next-line @typescript-eslint/explicit-function-return-type */\nfunction createFASTElement(BaseType) {\n    const type = class extends BaseType {\n        constructor() {\n            /* eslint-disable-next-line */\n            super();\n            ElementController.forCustomElement(this);\n        }\n        $emit(type, detail, options) {\n            return this.$fastController.emit(type, detail, options);\n        }\n        connectedCallback() {\n            this.$fastController.connect();\n        }\n        disconnectedCallback() {\n            this.$fastController.disconnect();\n        }\n        attributeChangedCallback(name, oldValue, newValue) {\n            this.$fastController.onAttributeChangedCallback(name, oldValue, newValue);\n        }\n    };\n    FASTElementDefinition.registerBaseType(type);\n    return type;\n}\nfunction compose(type, nameOrDef) {\n    if (isFunction(type)) {\n        return FASTElementDefinition.compose(type, nameOrDef);\n    }\n    return FASTElementDefinition.compose(this, type);\n}\nfunction define(type, nameOrDef) {\n    if (isFunction(type)) {\n        return FASTElementDefinition.compose(type, nameOrDef).define().type;\n    }\n    return FASTElementDefinition.compose(this, type).define().type;\n}\nfunction from(BaseType) {\n    return createFASTElement(BaseType);\n}\n/**\n * A minimal base class for FASTElements that also provides\n * static helpers for working with FASTElements.\n * @public\n */\nexport const FASTElement = Object.assign(createFASTElement(HTMLElement), {\n    /**\n     * Creates a new FASTElement base class inherited from the\n     * provided base type.\n     * @param BaseType - The base element type to inherit from.\n     */\n    from,\n    /**\n     * Defines a platform custom element based on the provided type and definition.\n     * @param type - The custom element type to define.\n     * @param nameOrDef - The name of the element to define or a definition object\n     * that describes the element to define.\n     */\n    define,\n    /**\n     * Defines metadata for a FASTElement which can be used to later define the element.\n     * @public\n     */\n    compose,\n});\n/**\n * Decorator: Defines a platform custom element based on `FASTElement`.\n * @param nameOrDef - The name of the element to define or a definition object\n * that describes the element to define.\n * @public\n */\nexport function customElement(nameOrDef) {\n    /* eslint-disable-next-line @typescript-eslint/explicit-function-return-type */\n    return function (type) {\n        define(type, nameOrDef);\n    };\n}\n","import \"../interfaces.js\";\nimport { PropertyChangeNotifier } from \"../observation/notifier.js\";\nimport { ExecutionContext, Observable, SourceLifetime, } from \"../observation/observable.js\";\nimport { FAST, makeSerializationNoop } from \"../platform.js\";\nimport { ElementStyles } from \"../styles/element-styles.js\";\nimport { FASTElementDefinition } from \"./fast-definitions.js\";\nconst defaultEventOptions = {\n    bubbles: true,\n    composed: true,\n    cancelable: true,\n};\nconst isConnectedPropertyName = \"isConnected\";\nconst shadowRoots = new WeakMap();\nfunction getShadowRoot(element) {\n    var _a, _b;\n    return (_b = (_a = element.shadowRoot) !== null && _a !== void 0 ? _a : shadowRoots.get(element)) !== null && _b !== void 0 ? _b : null;\n}\nlet elementControllerStrategy;\n/**\n * Controls the lifecycle and rendering of a `FASTElement`.\n * @public\n */\nexport class ElementController extends PropertyChangeNotifier {\n    /**\n     * Creates a Controller to control the specified element.\n     * @param element - The element to be controlled by this controller.\n     * @param definition - The element definition metadata that instructs this\n     * controller in how to handle rendering and other platform integrations.\n     * @internal\n     */\n    constructor(element, definition) {\n        super(element);\n        this.boundObservables = null;\n        this.needsInitialization = true;\n        this.hasExistingShadowRoot = false;\n        this._template = null;\n        this.stage = 3 /* Stages.disconnected */;\n        /**\n         * A guard against connecting behaviors multiple times\n         * during connect in scenarios where a behavior adds\n         * another behavior during it's connectedCallback\n         */\n        this.guardBehaviorConnection = false;\n        this.behaviors = null;\n        this._mainStyles = null;\n        /**\n         * This allows Observable.getNotifier(...) to return the Controller\n         * when the notifier for the Controller itself is being requested. The\n         * result is that the Observable system does not need to create a separate\n         * instance of Notifier for observables on the Controller. The component and\n         * the controller will now share the same notifier, removing one-object construct\n         * per web component instance.\n         */\n        this.$fastController = this;\n        /**\n         * The view associated with the custom element.\n         * @remarks\n         * If `null` then the element is managing its own rendering.\n         */\n        this.view = null;\n        this.source = element;\n        this.definition = definition;\n        const shadowOptions = definition.shadowOptions;\n        if (shadowOptions !== void 0) {\n            let shadowRoot = element.shadowRoot;\n            if (shadowRoot) {\n                this.hasExistingShadowRoot = true;\n            }\n            else {\n                shadowRoot = element.attachShadow(shadowOptions);\n                if (shadowOptions.mode === \"closed\") {\n                    shadowRoots.set(element, shadowRoot);\n                }\n            }\n        }\n        // Capture any observable values that were set by the binding engine before\n        // the browser upgraded the element. Then delete the property since it will\n        // shadow the getter/setter that is required to make the observable operate.\n        // Later, in the connect callback, we'll re-apply the values.\n        const accessors = Observable.getAccessors(element);\n        if (accessors.length > 0) {\n            const boundObservables = (this.boundObservables = Object.create(null));\n            for (let i = 0, ii = accessors.length; i < ii; ++i) {\n                const propertyName = accessors[i].name;\n                const value = element[propertyName];\n                if (value !== void 0) {\n                    delete element[propertyName];\n                    boundObservables[propertyName] = value;\n                }\n            }\n        }\n    }\n    /**\n     * Indicates whether or not the custom element has been\n     * connected to the document.\n     */\n    get isConnected() {\n        Observable.track(this, isConnectedPropertyName);\n        return this.stage === 1 /* Stages.connected */;\n    }\n    /**\n     * The context the expression is evaluated against.\n     */\n    get context() {\n        var _a, _b;\n        return (_b = (_a = this.view) === null || _a === void 0 ? void 0 : _a.context) !== null && _b !== void 0 ? _b : ExecutionContext.default;\n    }\n    /**\n     * Indicates whether the controller is bound.\n     */\n    get isBound() {\n        var _a, _b;\n        return (_b = (_a = this.view) === null || _a === void 0 ? void 0 : _a.isBound) !== null && _b !== void 0 ? _b : false;\n    }\n    /**\n     * Indicates how the source's lifetime relates to the controller's lifetime.\n     */\n    get sourceLifetime() {\n        var _a;\n        return (_a = this.view) === null || _a === void 0 ? void 0 : _a.sourceLifetime;\n    }\n    /**\n     * Gets/sets the template used to render the component.\n     * @remarks\n     * This value can only be accurately read after connect but can be set at any time.\n     */\n    get template() {\n        var _a;\n        // 1. Template overrides take top precedence.\n        if (this._template === null) {\n            const definition = this.definition;\n            if (this.source.resolveTemplate) {\n                // 2. Allow for element instance overrides next.\n                this._template = this.source.resolveTemplate();\n            }\n            else if (definition.template) {\n                // 3. Default to the static definition.\n                this._template = (_a = definition.template) !== null && _a !== void 0 ? _a : null;\n            }\n        }\n        return this._template;\n    }\n    set template(value) {\n        if (this._template === value) {\n            return;\n        }\n        this._template = value;\n        if (!this.needsInitialization) {\n            this.renderTemplate(value);\n        }\n    }\n    /**\n     * The main set of styles used for the component, independent\n     * of any dynamically added styles.\n     */\n    get mainStyles() {\n        var _a;\n        // 1. Styles overrides take top precedence.\n        if (this._mainStyles === null) {\n            const definition = this.definition;\n            if (this.source.resolveStyles) {\n                // 2. Allow for element instance overrides next.\n                this._mainStyles = this.source.resolveStyles();\n            }\n            else if (definition.styles) {\n                // 3. Default to the static definition.\n                this._mainStyles = (_a = definition.styles) !== null && _a !== void 0 ? _a : null;\n            }\n        }\n        return this._mainStyles;\n    }\n    set mainStyles(value) {\n        if (this._mainStyles === value) {\n            return;\n        }\n        if (this._mainStyles !== null) {\n            this.removeStyles(this._mainStyles);\n        }\n        this._mainStyles = value;\n        if (!this.needsInitialization) {\n            this.addStyles(value);\n        }\n    }\n    /**\n     * Registers an unbind handler with the controller.\n     * @param behavior - An object to call when the controller unbinds.\n     */\n    onUnbind(behavior) {\n        var _a;\n        (_a = this.view) === null || _a === void 0 ? void 0 : _a.onUnbind(behavior);\n    }\n    /**\n     * Adds the behavior to the component.\n     * @param behavior - The behavior to add.\n     */\n    addBehavior(behavior) {\n        var _a, _b;\n        const targetBehaviors = (_a = this.behaviors) !== null && _a !== void 0 ? _a : (this.behaviors = new Map());\n        const count = (_b = targetBehaviors.get(behavior)) !== null && _b !== void 0 ? _b : 0;\n        if (count === 0) {\n            targetBehaviors.set(behavior, 1);\n            behavior.addedCallback && behavior.addedCallback(this);\n            if (behavior.connectedCallback &&\n                !this.guardBehaviorConnection &&\n                (this.stage === 1 /* Stages.connected */ || this.stage === 0 /* Stages.connecting */)) {\n                behavior.connectedCallback(this);\n            }\n        }\n        else {\n            targetBehaviors.set(behavior, count + 1);\n        }\n    }\n    /**\n     * Removes the behavior from the component.\n     * @param behavior - The behavior to remove.\n     * @param force - Forces removal even if this behavior was added more than once.\n     */\n    removeBehavior(behavior, force = false) {\n        const targetBehaviors = this.behaviors;\n        if (targetBehaviors === null) {\n            return;\n        }\n        const count = targetBehaviors.get(behavior);\n        if (count === void 0) {\n            return;\n        }\n        if (count === 1 || force) {\n            targetBehaviors.delete(behavior);\n            if (behavior.disconnectedCallback && this.stage !== 3 /* Stages.disconnected */) {\n                behavior.disconnectedCallback(this);\n            }\n            behavior.removedCallback && behavior.removedCallback(this);\n        }\n        else {\n            targetBehaviors.set(behavior, count - 1);\n        }\n    }\n    /**\n     * Adds styles to this element. Providing an HTMLStyleElement will attach the element instance to the shadowRoot.\n     * @param styles - The styles to add.\n     */\n    addStyles(styles) {\n        var _a;\n        if (!styles) {\n            return;\n        }\n        const source = this.source;\n        if (styles instanceof HTMLElement) {\n            const target = (_a = getShadowRoot(source)) !== null && _a !== void 0 ? _a : this.source;\n            target.append(styles);\n        }\n        else if (!styles.isAttachedTo(source)) {\n            const sourceBehaviors = styles.behaviors;\n            styles.addStylesTo(source);\n            if (sourceBehaviors !== null) {\n                for (let i = 0, ii = sourceBehaviors.length; i < ii; ++i) {\n                    this.addBehavior(sourceBehaviors[i]);\n                }\n            }\n        }\n    }\n    /**\n     * Removes styles from this element. Providing an HTMLStyleElement will detach the element instance from the shadowRoot.\n     * @param styles - the styles to remove.\n     */\n    removeStyles(styles) {\n        var _a;\n        if (!styles) {\n            return;\n        }\n        const source = this.source;\n        if (styles instanceof HTMLElement) {\n            const target = (_a = getShadowRoot(source)) !== null && _a !== void 0 ? _a : source;\n            target.removeChild(styles);\n        }\n        else if (styles.isAttachedTo(source)) {\n            const sourceBehaviors = styles.behaviors;\n            styles.removeStylesFrom(source);\n            if (sourceBehaviors !== null) {\n                for (let i = 0, ii = sourceBehaviors.length; i < ii; ++i) {\n                    this.removeBehavior(sourceBehaviors[i]);\n                }\n            }\n        }\n    }\n    /**\n     * Runs connected lifecycle behavior on the associated element.\n     */\n    connect() {\n        if (this.stage !== 3 /* Stages.disconnected */) {\n            return;\n        }\n        this.stage = 0 /* Stages.connecting */;\n        // If we have any observables that were bound, re-apply their values.\n        if (this.boundObservables !== null) {\n            const element = this.source;\n            const boundObservables = this.boundObservables;\n            const propertyNames = Object.keys(boundObservables);\n            for (let i = 0, ii = propertyNames.length; i < ii; ++i) {\n                const propertyName = propertyNames[i];\n                element[propertyName] = boundObservables[propertyName];\n            }\n            this.boundObservables = null;\n        }\n        const behaviors = this.behaviors;\n        if (behaviors !== null) {\n            this.guardBehaviorConnection = true;\n            for (const key of behaviors.keys()) {\n                key.connectedCallback && key.connectedCallback(this);\n            }\n            this.guardBehaviorConnection = false;\n        }\n        if (this.needsInitialization) {\n            this.renderTemplate(this.template);\n            this.addStyles(this.mainStyles);\n            this.needsInitialization = false;\n        }\n        else if (this.view !== null) {\n            this.view.bind(this.source);\n        }\n        this.stage = 1 /* Stages.connected */;\n        Observable.notify(this, isConnectedPropertyName);\n    }\n    /**\n     * Runs disconnected lifecycle behavior on the associated element.\n     */\n    disconnect() {\n        if (this.stage !== 1 /* Stages.connected */) {\n            return;\n        }\n        this.stage = 2 /* Stages.disconnecting */;\n        Observable.notify(this, isConnectedPropertyName);\n        if (this.view !== null) {\n            this.view.unbind();\n        }\n        const behaviors = this.behaviors;\n        if (behaviors !== null) {\n            for (const key of behaviors.keys()) {\n                key.disconnectedCallback && key.disconnectedCallback(this);\n            }\n        }\n        this.stage = 3 /* Stages.disconnected */;\n    }\n    /**\n     * Runs the attribute changed callback for the associated element.\n     * @param name - The name of the attribute that changed.\n     * @param oldValue - The previous value of the attribute.\n     * @param newValue - The new value of the attribute.\n     */\n    onAttributeChangedCallback(name, oldValue, newValue) {\n        const attrDef = this.definition.attributeLookup[name];\n        if (attrDef !== void 0) {\n            attrDef.onAttributeChangedCallback(this.source, newValue);\n        }\n    }\n    /**\n     * Emits a custom HTML event.\n     * @param type - The type name of the event.\n     * @param detail - The event detail object to send with the event.\n     * @param options - The event options. By default bubbles and composed.\n     * @remarks\n     * Only emits events if connected.\n     */\n    emit(type, detail, options) {\n        if (this.stage === 1 /* Stages.connected */) {\n            return this.source.dispatchEvent(new CustomEvent(type, Object.assign(Object.assign({ detail }, defaultEventOptions), options)));\n        }\n        return false;\n    }\n    renderTemplate(template) {\n        var _a;\n        // When getting the host to render to, we start by looking\n        // up the shadow root. If there isn't one, then that means\n        // we're doing a Light DOM render to the element's direct children.\n        const element = this.source;\n        const host = (_a = getShadowRoot(element)) !== null && _a !== void 0 ? _a : element;\n        if (this.view !== null) {\n            // If there's already a view, we need to unbind and remove through dispose.\n            this.view.dispose();\n            this.view = null;\n        }\n        else if (!this.needsInitialization || this.hasExistingShadowRoot) {\n            this.hasExistingShadowRoot = false;\n            // If there was previous custom rendering, we need to clear out the host.\n            for (let child = host.firstChild; child !== null; child = host.firstChild) {\n                host.removeChild(child);\n            }\n        }\n        if (template) {\n            // If a new template was provided, render it.\n            this.view = template.render(element, host, element);\n            this.view.sourceLifetime =\n                SourceLifetime.coupled;\n        }\n    }\n    /**\n     * Locates or creates a controller for the specified element.\n     * @param element - The element to return the controller for.\n     * @remarks\n     * The specified element must have a {@link FASTElementDefinition}\n     * registered either through the use of the {@link customElement}\n     * decorator or a call to `FASTElement.define`.\n     */\n    static forCustomElement(element) {\n        const controller = element.$fastController;\n        if (controller !== void 0) {\n            return controller;\n        }\n        const definition = FASTElementDefinition.getForInstance(element);\n        if (definition === void 0) {\n            throw FAST.error(1401 /* Message.missingElementDefinition */);\n        }\n        return (element.$fastController = new elementControllerStrategy(element, definition));\n    }\n    /**\n     * Sets the strategy that ElementController.forCustomElement uses to construct\n     * ElementController instances for an element.\n     * @param strategy - The strategy to use.\n     */\n    static setStrategy(strategy) {\n        elementControllerStrategy = strategy;\n    }\n}\nmakeSerializationNoop(ElementController);\n// Set default strategy for ElementController\nElementController.setStrategy(ElementController);\n/**\n * Converts a styleTarget into the operative target. When the provided target is an Element\n * that is a FASTElement, the function will return the ShadowRoot for that element. Otherwise,\n * it will return the root node for the element.\n * @param target\n * @returns\n */\nfunction normalizeStyleTarget(target) {\n    var _a;\n    if (\"adoptedStyleSheets\" in target) {\n        return target;\n    }\n    else {\n        return ((_a = getShadowRoot(target)) !== null && _a !== void 0 ? _a : target.getRootNode());\n    }\n}\n// Default StyleStrategy implementations are defined in this module because they\n// require access to element shadowRoots, and we don't want to leak shadowRoot\n// objects out of this module.\n/**\n * https://wicg.github.io/construct-stylesheets/\n * https://developers.google.com/web/updates/2019/02/constructable-stylesheets\n *\n * @internal\n */\nexport class AdoptedStyleSheetsStrategy {\n    constructor(styles) {\n        const styleSheetCache = AdoptedStyleSheetsStrategy.styleSheetCache;\n        this.sheets = styles.map((x) => {\n            if (x instanceof CSSStyleSheet) {\n                return x;\n            }\n            let sheet = styleSheetCache.get(x);\n            if (sheet === void 0) {\n                sheet = new CSSStyleSheet();\n                sheet.replaceSync(x);\n                styleSheetCache.set(x, sheet);\n            }\n            return sheet;\n        });\n    }\n    addStylesTo(target) {\n        addAdoptedStyleSheets(normalizeStyleTarget(target), this.sheets);\n    }\n    removeStylesFrom(target) {\n        removeAdoptedStyleSheets(normalizeStyleTarget(target), this.sheets);\n    }\n}\nAdoptedStyleSheetsStrategy.styleSheetCache = new Map();\nlet id = 0;\nconst nextStyleId = () => `fast-${++id}`;\nfunction usableStyleTarget(target) {\n    return target === document ? document.body : target;\n}\n/**\n * @internal\n */\nexport class StyleElementStrategy {\n    constructor(styles) {\n        this.styles = styles;\n        this.styleClass = nextStyleId();\n    }\n    addStylesTo(target) {\n        target = usableStyleTarget(normalizeStyleTarget(target));\n        const styles = this.styles;\n        const styleClass = this.styleClass;\n        for (let i = 0; i < styles.length; i++) {\n            const element = document.createElement(\"style\");\n            element.innerHTML = styles[i];\n            element.className = styleClass;\n            target.append(element);\n        }\n    }\n    removeStylesFrom(target) {\n        target = usableStyleTarget(normalizeStyleTarget(target));\n        const styles = target.querySelectorAll(`.${this.styleClass}`);\n        for (let i = 0, ii = styles.length; i < ii; ++i) {\n            target.removeChild(styles[i]);\n        }\n    }\n}\nlet addAdoptedStyleSheets = (target, sheets) => {\n    target.adoptedStyleSheets = [...target.adoptedStyleSheets, ...sheets];\n};\nlet removeAdoptedStyleSheets = (target, sheets) => {\n    target.adoptedStyleSheets = target.adoptedStyleSheets.filter((x) => sheets.indexOf(x) === -1);\n};\nif (ElementStyles.supportsAdoptedStyleSheets) {\n    try {\n        // Test if browser implementation uses FrozenArray.\n        // If not, use push / splice to alter the stylesheets\n        // in place. This circumvents a bug in Safari 16.4 where\n        // periodically, assigning the array would previously\n        // cause sheets to be removed.\n        document.adoptedStyleSheets.push();\n        document.adoptedStyleSheets.splice();\n        addAdoptedStyleSheets = (target, sheets) => {\n            target.adoptedStyleSheets.push(...sheets);\n        };\n        removeAdoptedStyleSheets = (target, sheets) => {\n            for (const sheet of sheets) {\n                const index = target.adoptedStyleSheets.indexOf(sheet);\n                if (index !== -1) {\n                    target.adoptedStyleSheets.splice(index, 1);\n                }\n            }\n        };\n    }\n    catch (e) {\n        // Do nothing if an error is thrown, the default\n        // case handles FrozenArray.\n    }\n    ElementStyles.setDefaultStrategy(AdoptedStyleSheetsStrategy);\n}\nelse {\n    ElementStyles.setDefaultStrategy(StyleElementStrategy);\n}\n","import { isString, KernelServiceId } from \"../interfaces.js\";\nimport { Observable } from \"../observation/observable.js\";\nimport { createTypeRegistry, FAST } from \"../platform.js\";\nimport { ElementStyles } from \"../styles/element-styles.js\";\nimport { AttributeDefinition } from \"./attributes.js\";\nconst defaultShadowOptions = { mode: \"open\" };\nconst defaultElementOptions = {};\nconst fastElementBaseTypes = new Set();\nconst fastElementRegistry = FAST.getById(KernelServiceId.elementRegistry, () => createTypeRegistry());\n/**\n * Defines metadata for a FASTElement.\n * @public\n */\nexport class FASTElementDefinition {\n    constructor(type, nameOrConfig = type.definition) {\n        var _a;\n        this.platformDefined = false;\n        if (isString(nameOrConfig)) {\n            nameOrConfig = { name: nameOrConfig };\n        }\n        this.type = type;\n        this.name = nameOrConfig.name;\n        this.template = nameOrConfig.template;\n        this.registry = (_a = nameOrConfig.registry) !== null && _a !== void 0 ? _a : customElements;\n        const proto = type.prototype;\n        const attributes = AttributeDefinition.collect(type, nameOrConfig.attributes);\n        const observedAttributes = new Array(attributes.length);\n        const propertyLookup = {};\n        const attributeLookup = {};\n        for (let i = 0, ii = attributes.length; i < ii; ++i) {\n            const current = attributes[i];\n            observedAttributes[i] = current.attribute;\n            propertyLookup[current.name] = current;\n            attributeLookup[current.attribute] = current;\n            Observable.defineProperty(proto, current);\n        }\n        Reflect.defineProperty(type, \"observedAttributes\", {\n            value: observedAttributes,\n            enumerable: true,\n        });\n        this.attributes = attributes;\n        this.propertyLookup = propertyLookup;\n        this.attributeLookup = attributeLookup;\n        this.shadowOptions =\n            nameOrConfig.shadowOptions === void 0\n                ? defaultShadowOptions\n                : nameOrConfig.shadowOptions === null\n                    ? void 0\n                    : Object.assign(Object.assign({}, defaultShadowOptions), nameOrConfig.shadowOptions);\n        this.elementOptions =\n            nameOrConfig.elementOptions === void 0\n                ? defaultElementOptions\n                : Object.assign(Object.assign({}, defaultElementOptions), nameOrConfig.elementOptions);\n        this.styles = ElementStyles.normalize(nameOrConfig.styles);\n        fastElementRegistry.register(this);\n    }\n    /**\n     * Indicates if this element has been defined in at least one registry.\n     */\n    get isDefined() {\n        return this.platformDefined;\n    }\n    /**\n     * Defines a custom element based on this definition.\n     * @param registry - The element registry to define the element in.\n     * @remarks\n     * This operation is idempotent per registry.\n     */\n    define(registry = this.registry) {\n        const type = this.type;\n        if (!registry.get(this.name)) {\n            this.platformDefined = true;\n            registry.define(this.name, type, this.elementOptions);\n        }\n        return this;\n    }\n    /**\n     * Creates an instance of FASTElementDefinition.\n     * @param type - The type this definition is being created for.\n     * @param nameOrDef - The name of the element to define or a config object\n     * that describes the element to define.\n     */\n    static compose(type, nameOrDef) {\n        if (fastElementBaseTypes.has(type) || fastElementRegistry.getByType(type)) {\n            return new FASTElementDefinition(class extends type {\n            }, nameOrDef);\n        }\n        return new FASTElementDefinition(type, nameOrDef);\n    }\n    /**\n     * Registers a FASTElement base type.\n     * @param type - The type to register as a base type.\n     * @internal\n     */\n    static registerBaseType(type) {\n        fastElementBaseTypes.add(type);\n    }\n}\n/**\n * Gets the element definition associated with the specified type.\n * @param type - The custom element type to retrieve the definition for.\n */\nFASTElementDefinition.getByType = fastElementRegistry.getByType;\n/**\n * Gets the element definition associated with the instance.\n * @param instance - The custom element instance to retrieve the definition for.\n */\nFASTElementDefinition.getForInstance = fastElementRegistry.getForInstance;\n","import { isFunction, isString } from \"../interfaces.js\";\nimport { Binding } from \"../binding/binding.js\";\nimport { FAST, makeSerializationNoop } from \"../platform.js\";\nimport { oneWay } from \"../binding/one-way.js\";\nimport { oneTime } from \"../binding/one-time.js\";\nimport { HTMLBindingDirective } from \"./html-binding-directive.js\";\nimport { Compiler } from \"./compiler.js\";\nimport { HTMLDirective, } from \"./html-directive.js\";\nimport { nextId } from \"./markup.js\";\n// Much thanks to LitHTML for working this out!\nconst lastAttributeNameRegex = \n/* eslint-disable-next-line no-control-regex */\n/([ \\x09\\x0a\\x0c\\x0d])([^\\0-\\x1F\\x7F-\\x9F \"'>=/]+)([ \\x09\\x0a\\x0c\\x0d]*=[ \\x09\\x0a\\x0c\\x0d]*(?:[^ \\x09\\x0a\\x0c\\x0d\"'`<>=]*|\"[^\"]*|'[^']*))$/;\nconst noFactories = Object.create(null);\n/**\n * Inlines a template into another template.\n * @public\n */\nexport class InlineTemplateDirective {\n    /**\n     * Creates an instance of InlineTemplateDirective.\n     * @param template - The template to inline.\n     */\n    constructor(html, factories = noFactories) {\n        this.html = html;\n        this.factories = factories;\n    }\n    /**\n     * Creates HTML to be used within a template.\n     * @param add - Can be used to add  behavior factories to a template.\n     */\n    createHTML(add) {\n        const factories = this.factories;\n        for (const key in factories) {\n            add(factories[key]);\n        }\n        return this.html;\n    }\n}\n/**\n * An empty template partial.\n */\nInlineTemplateDirective.empty = new InlineTemplateDirective(\"\");\nHTMLDirective.define(InlineTemplateDirective);\nfunction createHTML(value, prevString, add, definition = HTMLDirective.getForInstance(value)) {\n    if (definition.aspected) {\n        const match = lastAttributeNameRegex.exec(prevString);\n        if (match !== null) {\n            HTMLDirective.assignAspect(value, match[2]);\n        }\n    }\n    return value.createHTML(add);\n}\n/**\n * A template capable of creating HTMLView instances or rendering directly to DOM.\n * @public\n */\nexport class ViewTemplate {\n    /**\n     * Creates an instance of ViewTemplate.\n     * @param html - The html representing what this template will instantiate, including placeholders for directives.\n     * @param factories - The directives that will be connected to placeholders in the html.\n     * @param policy - The security policy to use when compiling this template.\n     */\n    constructor(html, factories = {}, policy) {\n        this.policy = policy;\n        this.result = null;\n        this.html = html;\n        this.factories = factories;\n    }\n    /**\n     * Creates an HTMLView instance based on this template definition.\n     * @param hostBindingTarget - The element that host behaviors will be bound to.\n     */\n    create(hostBindingTarget) {\n        if (this.result === null) {\n            this.result = Compiler.compile(this.html, this.factories, this.policy);\n        }\n        return this.result.createView(hostBindingTarget);\n    }\n    /**\n     * Returns a directive that can inline the template.\n     */\n    inline() {\n        return new InlineTemplateDirective(isString(this.html) ? this.html : this.html.innerHTML, this.factories);\n    }\n    /**\n     * Sets the DOMPolicy for this template.\n     * @param policy - The policy to associated with this template.\n     * @returns The modified template instance.\n     * @remarks\n     * The DOMPolicy can only be set once for a template and cannot be\n     * set after the template is compiled.\n     */\n    withPolicy(policy) {\n        if (this.result) {\n            throw FAST.error(1208 /* Message.cannotSetTemplatePolicyAfterCompilation */);\n        }\n        if (this.policy) {\n            throw FAST.error(1207 /* Message.onlySetTemplatePolicyOnce */);\n        }\n        this.policy = policy;\n        return this;\n    }\n    /**\n     * Creates an HTMLView from this template, binds it to the source, and then appends it to the host.\n     * @param source - The data source to bind the template to.\n     * @param host - The Element where the template will be rendered.\n     * @param hostBindingTarget - An HTML element to target the host bindings at if different from the\n     * host that the template is being attached to.\n     */\n    render(source, host, hostBindingTarget) {\n        const view = this.create(hostBindingTarget);\n        view.bind(source);\n        view.appendTo(host);\n        return view;\n    }\n    /**\n     * Creates a template based on a set of static strings and dynamic values.\n     * @param strings - The static strings to create the template with.\n     * @param values - The dynamic values to create the template with.\n     * @param policy - The DOMPolicy to associated with the template.\n     * @returns A ViewTemplate.\n     * @remarks\n     * This API should not be used directly under normal circumstances because constructing\n     * a template in this way, if not done properly, can open up the application to XSS\n     * attacks. When using this API, provide a strong DOMPolicy that can properly sanitize\n     * and also be sure to manually sanitize all static strings particularly if they can\n     * come from user input.\n     */\n    static create(strings, values, policy) {\n        let html = \"\";\n        const factories = Object.create(null);\n        const add = (factory) => {\n            var _a;\n            const id = (_a = factory.id) !== null && _a !== void 0 ? _a : (factory.id = nextId());\n            factories[id] = factory;\n            return id;\n        };\n        for (let i = 0, ii = strings.length - 1; i < ii; ++i) {\n            const currentString = strings[i];\n            let currentValue = values[i];\n            let definition;\n            html += currentString;\n            if (isFunction(currentValue)) {\n                currentValue = new HTMLBindingDirective(oneWay(currentValue));\n            }\n            else if (currentValue instanceof Binding) {\n                currentValue = new HTMLBindingDirective(currentValue);\n            }\n            else if (!(definition = HTMLDirective.getForInstance(currentValue))) {\n                const staticValue = currentValue;\n                currentValue = new HTMLBindingDirective(oneTime(() => staticValue));\n            }\n            html += createHTML(currentValue, currentString, add, definition);\n        }\n        return new ViewTemplate(html + strings[strings.length - 1], factories, policy);\n    }\n}\nmakeSerializationNoop(ViewTemplate);\n/**\n * Transforms a template literal string into a ViewTemplate.\n * @param strings - The string fragments that are interpolated with the values.\n * @param values - The values that are interpolated with the string fragments.\n * @remarks\n * The html helper supports interpolation of strings, numbers, binding expressions,\n * other template instances, and Directive instances.\n * @public\n */\nexport const html = ((strings, ...values) => {\n    if (Array.isArray(strings) && Array.isArray(strings.raw)) {\n        return ViewTemplate.create(strings, values);\n    }\n    throw FAST.error(1206 /* Message.directCallToHTMLTagNotAllowed */);\n});\nhtml.partial = (html) => {\n    return new InlineTemplateDirective(html);\n};\n","import { makeSerializationNoop } from \"../platform.js\";\nimport { Binding } from \"./binding.js\";\nclass OneTimeBinding extends Binding {\n    createObserver() {\n        return this;\n    }\n    bind(controller) {\n        return this.evaluate(controller.source, controller.context);\n    }\n}\nmakeSerializationNoop(OneTimeBinding);\n/**\n * Creates a one time binding\n * @param expression - The binding to refresh when signaled.\n * @param policy - The security policy to associate with th binding.\n * @returns A binding configuration.\n * @public\n */\nexport function oneTime(expression, policy) {\n    return new OneTimeBinding(expression, policy);\n}\n","import \"../interfaces.js\";\nimport { ExecutionContext, } from \"../observation/observable.js\";\nimport { FAST } from \"../platform.js\";\nimport { DOM, DOMAspect } from \"../dom.js\";\nimport { HTMLDirective, } from \"./html-directive.js\";\nimport { Markup } from \"./markup.js\";\nfunction updateContent(target, aspect, value, controller) {\n    // If there's no actual value, then this equates to the\n    // empty string for the purposes of content bindings.\n    if (value === null || value === undefined) {\n        value = \"\";\n    }\n    // If the value has a \"create\" method, then it's a ContentTemplate.\n    if (value.create) {\n        target.textContent = \"\";\n        let view = target.$fastView;\n        // If there's no previous view that we might be able to\n        // reuse then create a new view from the template.\n        if (view === void 0) {\n            view = value.create();\n        }\n        else {\n            // If there is a previous view, but it wasn't created\n            // from the same template as the new value, then we\n            // need to remove the old view if it's still in the DOM\n            // and create a new view from the template.\n            if (target.$fastTemplate !== value) {\n                if (view.isComposed) {\n                    view.remove();\n                    view.unbind();\n                }\n                view = value.create();\n            }\n        }\n        // It's possible that the value is the same as the previous template\n        // and that there's actually no need to compose it.\n        if (!view.isComposed) {\n            view.isComposed = true;\n            view.bind(controller.source, controller.context);\n            view.insertBefore(target);\n            target.$fastView = view;\n            target.$fastTemplate = value;\n        }\n        else if (view.needsBindOnly) {\n            view.needsBindOnly = false;\n            view.bind(controller.source, controller.context);\n        }\n    }\n    else {\n        const view = target.$fastView;\n        // If there is a view and it's currently composed into\n        // the DOM, then we need to remove it.\n        if (view !== void 0 && view.isComposed) {\n            view.isComposed = false;\n            view.remove();\n            if (view.needsBindOnly) {\n                view.needsBindOnly = false;\n            }\n            else {\n                view.unbind();\n            }\n        }\n        target.textContent = value;\n    }\n}\nfunction updateTokenList(target, aspect, value) {\n    var _a;\n    const lookup = `${this.id}-t`;\n    const state = (_a = target[lookup]) !== null && _a !== void 0 ? _a : (target[lookup] = { v: 0, cv: Object.create(null) });\n    const classVersions = state.cv;\n    let version = state.v;\n    const tokenList = target[aspect];\n    // Add the classes, tracking the version at which they were added.\n    if (value !== null && value !== undefined && value.length) {\n        const names = value.split(/\\s+/);\n        for (let i = 0, ii = names.length; i < ii; ++i) {\n            const currentName = names[i];\n            if (currentName === \"\") {\n                continue;\n            }\n            classVersions[currentName] = version;\n            tokenList.add(currentName);\n        }\n    }\n    state.v = version + 1;\n    // If this is the first call to add classes, there's no need to remove old ones.\n    if (version === 0) {\n        return;\n    }\n    // Remove classes from the previous version.\n    version -= 1;\n    for (const name in classVersions) {\n        if (classVersions[name] === version) {\n            tokenList.remove(name);\n        }\n    }\n}\nconst sinkLookup = {\n    [DOMAspect.attribute]: DOM.setAttribute,\n    [DOMAspect.booleanAttribute]: DOM.setBooleanAttribute,\n    [DOMAspect.property]: (t, a, v) => (t[a] = v),\n    [DOMAspect.content]: updateContent,\n    [DOMAspect.tokenList]: updateTokenList,\n    [DOMAspect.event]: () => void 0,\n};\n/**\n * A directive that applies bindings.\n * @public\n */\nexport class HTMLBindingDirective {\n    /**\n     * Creates an instance of HTMLBindingDirective.\n     * @param dataBinding - The binding configuration to apply.\n     */\n    constructor(dataBinding) {\n        this.dataBinding = dataBinding;\n        this.updateTarget = null;\n        /**\n         * The type of aspect to target.\n         */\n        this.aspectType = DOMAspect.content;\n    }\n    /**\n     * Creates HTML to be used within a template.\n     * @param add - Can be used to add  behavior factories to a template.\n     */\n    createHTML(add) {\n        return Markup.interpolation(add(this));\n    }\n    /**\n     * Creates a behavior.\n     */\n    createBehavior() {\n        var _a;\n        if (this.updateTarget === null) {\n            const sink = sinkLookup[this.aspectType];\n            const policy = (_a = this.dataBinding.policy) !== null && _a !== void 0 ? _a : this.policy;\n            if (!sink) {\n                throw FAST.error(1205 /* Message.unsupportedBindingBehavior */);\n            }\n            this.data = `${this.id}-d`;\n            this.updateTarget = policy.protect(this.targetTagName, this.aspectType, this.targetAspect, sink);\n        }\n        return this;\n    }\n    /** @internal */\n    bind(controller) {\n        var _a;\n        const target = controller.targets[this.targetNodeId];\n        switch (this.aspectType) {\n            case DOMAspect.event:\n                target[this.data] = controller;\n                target.addEventListener(this.targetAspect, this, this.dataBinding.options);\n                break;\n            case DOMAspect.content:\n                controller.onUnbind(this);\n            // intentional fall through\n            default:\n                const observer = (_a = target[this.data]) !== null && _a !== void 0 ? _a : (target[this.data] = this.dataBinding.createObserver(this, this));\n                observer.target = target;\n                observer.controller = controller;\n                this.updateTarget(target, this.targetAspect, observer.bind(controller), controller);\n                break;\n        }\n    }\n    /** @internal */\n    unbind(controller) {\n        const target = controller.targets[this.targetNodeId];\n        const view = target.$fastView;\n        if (view !== void 0 && view.isComposed) {\n            view.unbind();\n            view.needsBindOnly = true;\n        }\n    }\n    /** @internal */\n    handleEvent(event) {\n        const controller = event.currentTarget[this.data];\n        if (controller.isBound) {\n            ExecutionContext.setEvent(event);\n            const result = this.dataBinding.evaluate(controller.source, controller.context);\n            ExecutionContext.setEvent(null);\n            if (result !== true) {\n                event.preventDefault();\n            }\n        }\n    }\n    /** @internal */\n    handleChange(binding, observer) {\n        const target = observer.target;\n        const controller = observer.controller;\n        this.updateTarget(target, this.targetAspect, observer.bind(controller), controller);\n    }\n}\nHTMLDirective.define(HTMLBindingDirective, { aspected: true });\n","import { isFunction, isString } from \"../interfaces.js\";\nimport { FAST } from \"../platform.js\";\nimport { DOM } from \"../dom.js\";\nimport { oneTime } from \"../binding/one-time.js\";\nimport { nextId, Parser } from \"./markup.js\";\nimport { HTMLBindingDirective } from \"./html-binding-directive.js\";\nimport { HTMLDirective, } from \"./html-directive.js\";\nimport { HTMLView } from \"./view.js\";\nconst targetIdFrom = (parentId, nodeIndex) => `${parentId}.${nodeIndex}`;\nconst descriptorCache = {};\n// used to prevent creating lots of objects just to track node and index while compiling\nconst next = {\n    index: 0,\n    node: null,\n};\nfunction tryWarn(name) {\n    if (!name.startsWith(\"fast-\")) {\n        FAST.warn(1204 /* Message.hostBindingWithoutHost */, { name });\n    }\n}\nconst warningHost = new Proxy(document.createElement(\"div\"), {\n    get(target, property) {\n        tryWarn(property);\n        const value = Reflect.get(target, property);\n        return isFunction(value) ? value.bind(target) : value;\n    },\n    set(target, property, value) {\n        tryWarn(property);\n        return Reflect.set(target, property, value);\n    },\n});\nclass CompilationContext {\n    constructor(fragment, directives, policy) {\n        this.fragment = fragment;\n        this.directives = directives;\n        this.policy = policy;\n        this.proto = null;\n        this.nodeIds = new Set();\n        this.descriptors = {};\n        this.factories = [];\n    }\n    addFactory(factory, parentId, nodeId, targetIndex, tagName) {\n        var _a, _b;\n        if (!this.nodeIds.has(nodeId)) {\n            this.nodeIds.add(nodeId);\n            this.addTargetDescriptor(parentId, nodeId, targetIndex);\n        }\n        factory.id = (_a = factory.id) !== null && _a !== void 0 ? _a : nextId();\n        factory.targetNodeId = nodeId;\n        factory.targetTagName = tagName;\n        factory.policy = (_b = factory.policy) !== null && _b !== void 0 ? _b : this.policy;\n        this.factories.push(factory);\n    }\n    freeze() {\n        this.proto = Object.create(null, this.descriptors);\n        return this;\n    }\n    addTargetDescriptor(parentId, targetId, targetIndex) {\n        const descriptors = this.descriptors;\n        if (targetId === \"r\" || // root\n            targetId === \"h\" || // host\n            descriptors[targetId]) {\n            return;\n        }\n        if (!descriptors[parentId]) {\n            const index = parentId.lastIndexOf(\".\");\n            const grandparentId = parentId.substring(0, index);\n            const childIndex = parseInt(parentId.substring(index + 1));\n            this.addTargetDescriptor(grandparentId, parentId, childIndex);\n        }\n        let descriptor = descriptorCache[targetId];\n        if (!descriptor) {\n            const field = `_${targetId}`;\n            descriptorCache[targetId] = descriptor = {\n                get() {\n                    var _a;\n                    return ((_a = this[field]) !== null && _a !== void 0 ? _a : (this[field] = this[parentId].childNodes[targetIndex]));\n                },\n            };\n        }\n        descriptors[targetId] = descriptor;\n    }\n    createView(hostBindingTarget) {\n        const fragment = this.fragment.cloneNode(true);\n        const targets = Object.create(this.proto);\n        targets.r = fragment;\n        targets.h = hostBindingTarget !== null && hostBindingTarget !== void 0 ? hostBindingTarget : warningHost;\n        for (const id of this.nodeIds) {\n            targets[id]; // trigger locator\n        }\n        return new HTMLView(fragment, this.factories, targets);\n    }\n}\nfunction compileAttributes(context, parentId, node, nodeId, nodeIndex, includeBasicValues = false) {\n    const attributes = node.attributes;\n    const directives = context.directives;\n    for (let i = 0, ii = attributes.length; i < ii; ++i) {\n        const attr = attributes[i];\n        const attrValue = attr.value;\n        const parseResult = Parser.parse(attrValue, directives);\n        let result = null;\n        if (parseResult === null) {\n            if (includeBasicValues) {\n                result = new HTMLBindingDirective(oneTime(() => attrValue, context.policy));\n                HTMLDirective.assignAspect(result, attr.name);\n            }\n        }\n        else {\n            /* eslint-disable-next-line @typescript-eslint/no-use-before-define */\n            result = Compiler.aggregate(parseResult, context.policy);\n        }\n        if (result !== null) {\n            node.removeAttributeNode(attr);\n            i--;\n            ii--;\n            context.addFactory(result, parentId, nodeId, nodeIndex, node.tagName);\n        }\n    }\n}\nfunction compileContent(context, node, parentId, nodeId, nodeIndex) {\n    const parseResult = Parser.parse(node.textContent, context.directives);\n    if (parseResult === null) {\n        next.node = node.nextSibling;\n        next.index = nodeIndex + 1;\n        return next;\n    }\n    let currentNode;\n    let lastNode = (currentNode = node);\n    for (let i = 0, ii = parseResult.length; i < ii; ++i) {\n        const currentPart = parseResult[i];\n        if (i !== 0) {\n            nodeIndex++;\n            nodeId = targetIdFrom(parentId, nodeIndex);\n            currentNode = lastNode.parentNode.insertBefore(document.createTextNode(\"\"), lastNode.nextSibling);\n        }\n        if (isString(currentPart)) {\n            currentNode.textContent = currentPart;\n        }\n        else {\n            currentNode.textContent = \" \";\n            HTMLDirective.assignAspect(currentPart);\n            context.addFactory(currentPart, parentId, nodeId, nodeIndex, null);\n        }\n        lastNode = currentNode;\n    }\n    next.index = nodeIndex + 1;\n    next.node = lastNode.nextSibling;\n    return next;\n}\nfunction compileChildren(context, parent, parentId) {\n    let nodeIndex = 0;\n    let childNode = parent.firstChild;\n    while (childNode) {\n        /* eslint-disable-next-line @typescript-eslint/no-use-before-define */\n        const result = compileNode(context, parentId, childNode, nodeIndex);\n        childNode = result.node;\n        nodeIndex = result.index;\n    }\n}\nfunction compileNode(context, parentId, node, nodeIndex) {\n    const nodeId = targetIdFrom(parentId, nodeIndex);\n    switch (node.nodeType) {\n        case 1: // element node\n            compileAttributes(context, parentId, node, nodeId, nodeIndex);\n            compileChildren(context, node, nodeId);\n            break;\n        case 3: // text node\n            return compileContent(context, node, parentId, nodeId, nodeIndex);\n        case 8: // comment\n            const parts = Parser.parse(node.data, context.directives);\n            if (parts !== null) {\n                context.addFactory(\n                /* eslint-disable-next-line @typescript-eslint/no-use-before-define */\n                Compiler.aggregate(parts), parentId, nodeId, nodeIndex, null);\n            }\n            break;\n    }\n    next.index = nodeIndex + 1;\n    next.node = node.nextSibling;\n    return next;\n}\nfunction isMarker(node, directives) {\n    return (node &&\n        node.nodeType == 8 &&\n        Parser.parse(node.data, directives) !== null);\n}\nconst templateTag = \"TEMPLATE\";\n/**\n * Common APIs related to compilation.\n * @public\n */\nexport const Compiler = {\n    /**\n     * Compiles a template and associated directives into a compilation\n     * result which can be used to create views.\n     * @param html - The html string or template element to compile.\n     * @param factories - The behavior factories referenced by the template.\n     * @param policy - The security policy to compile the html with.\n     * @remarks\n     * The template that is provided for compilation is altered in-place\n     * and cannot be compiled again. If the original template must be preserved,\n     * it is recommended that you clone the original and pass the clone to this API.\n     * @public\n     */\n    compile(html, factories, policy = DOM.policy) {\n        let template;\n        if (isString(html)) {\n            template = document.createElement(templateTag);\n            template.innerHTML = policy.createHTML(html);\n            const fec = template.content.firstElementChild;\n            if (fec !== null && fec.tagName === templateTag) {\n                template = fec;\n            }\n        }\n        else {\n            template = html;\n        }\n        if (!template.content.firstChild && !template.content.lastChild) {\n            template.content.appendChild(document.createComment(\"\"));\n        }\n        // https://bugs.chromium.org/p/chromium/issues/detail?id=1111864\n        const fragment = document.adoptNode(template.content);\n        const context = new CompilationContext(fragment, factories, policy);\n        compileAttributes(context, \"\", template, /* host */ \"h\", 0, true);\n        if (\n        // If the first node in a fragment is a marker, that means it's an unstable first node,\n        // because something like a when, repeat, etc. could add nodes before the marker.\n        // To mitigate this, we insert a stable first node. However, if we insert a node,\n        // that will alter the result of the TreeWalker. So, we also need to offset the target index.\n        isMarker(fragment.firstChild, factories) ||\n            // Or if there is only one node and a directive, it means the template's content\n            // is *only* the directive. In that case, HTMLView.dispose() misses any nodes inserted by\n            // the directive. Inserting a new node ensures proper disposal of nodes added by the directive.\n            (fragment.childNodes.length === 1 && Object.keys(factories).length > 0)) {\n            fragment.insertBefore(document.createComment(\"\"), fragment.firstChild);\n        }\n        compileChildren(context, fragment, /* root */ \"r\");\n        next.node = null; // prevent leaks\n        return context.freeze();\n    },\n    /**\n     * Sets the default compilation strategy that will be used by the ViewTemplate whenever\n     * it needs to compile a view preprocessed with the html template function.\n     * @param strategy - The compilation strategy to use when compiling templates.\n     */\n    setDefaultStrategy(strategy) {\n        this.compile = strategy;\n    },\n    /**\n     * Aggregates an array of strings and directives into a single directive.\n     * @param parts - A heterogeneous array of static strings interspersed with\n     * directives.\n     * @param policy - The security policy to use with the aggregated bindings.\n     * @returns A single inline directive that aggregates the behavior of all the parts.\n     */\n    aggregate(parts, policy = DOM.policy) {\n        if (parts.length === 1) {\n            return parts[0];\n        }\n        let sourceAspect;\n        let binding;\n        let isVolatile = false;\n        let bindingPolicy = void 0;\n        const partCount = parts.length;\n        const finalParts = parts.map((x) => {\n            if (isString(x)) {\n                return () => x;\n            }\n            sourceAspect = x.sourceAspect || sourceAspect;\n            binding = x.dataBinding || binding;\n            isVolatile = isVolatile || x.dataBinding.isVolatile;\n            bindingPolicy = bindingPolicy || x.dataBinding.policy;\n            return x.dataBinding.evaluate;\n        });\n        const expression = (scope, context) => {\n            let output = \"\";\n            for (let i = 0; i < partCount; ++i) {\n                output += finalParts[i](scope, context);\n            }\n            return output;\n        };\n        binding.evaluate = expression;\n        binding.isVolatile = isVolatile;\n        binding.policy = bindingPolicy !== null && bindingPolicy !== void 0 ? bindingPolicy : policy;\n        const directive = new HTMLBindingDirective(binding);\n        HTMLDirective.assignAspect(directive, sourceAspect);\n        return directive;\n    },\n};\n","import { ExecutionContext, Observable, SourceLifetime, } from \"../observation/observable.js\";\nimport { makeSerializationNoop } from \"../platform.js\";\nfunction removeNodeSequence(firstNode, lastNode) {\n    const parent = firstNode.parentNode;\n    let current = firstNode;\n    let next;\n    while (current !== lastNode) {\n        next = current.nextSibling;\n        parent.removeChild(current);\n        current = next;\n    }\n    parent.removeChild(lastNode);\n}\n/**\n * The standard View implementation, which also implements ElementView and SyntheticView.\n * @public\n */\nexport class HTMLView {\n    /**\n     * Constructs an instance of HTMLView.\n     * @param fragment - The html fragment that contains the nodes for this view.\n     * @param behaviors - The behaviors to be applied to this view.\n     */\n    constructor(fragment, factories, targets) {\n        this.fragment = fragment;\n        this.factories = factories;\n        this.targets = targets;\n        this.behaviors = null;\n        this.unbindables = [];\n        /**\n         * The data that the view is bound to.\n         */\n        this.source = null;\n        /**\n         * Indicates whether the controller is bound.\n         */\n        this.isBound = false;\n        /**\n         * Indicates how the source's lifetime relates to the controller's lifetime.\n         */\n        this.sourceLifetime = SourceLifetime.unknown;\n        /**\n         * The execution context the view is running within.\n         */\n        this.context = this;\n        /**\n         * The index of the current item within a repeat context.\n         */\n        this.index = 0;\n        /**\n         * The length of the current collection within a repeat context.\n         */\n        this.length = 0;\n        this.firstChild = fragment.firstChild;\n        this.lastChild = fragment.lastChild;\n    }\n    /**\n     * The current event within an event handler.\n     */\n    get event() {\n        return ExecutionContext.getEvent();\n    }\n    /**\n     * Indicates whether the current item within a repeat context\n     * has an even index.\n     */\n    get isEven() {\n        return this.index % 2 === 0;\n    }\n    /**\n     * Indicates whether the current item within a repeat context\n     * has an odd index.\n     */\n    get isOdd() {\n        return this.index % 2 !== 0;\n    }\n    /**\n     * Indicates whether the current item within a repeat context\n     * is the first item in the collection.\n     */\n    get isFirst() {\n        return this.index === 0;\n    }\n    /**\n     * Indicates whether the current item within a repeat context\n     * is somewhere in the middle of the collection.\n     */\n    get isInMiddle() {\n        return !this.isFirst && !this.isLast;\n    }\n    /**\n     * Indicates whether the current item within a repeat context\n     * is the last item in the collection.\n     */\n    get isLast() {\n        return this.index === this.length - 1;\n    }\n    /**\n     * Returns the typed event detail of a custom event.\n     */\n    eventDetail() {\n        return this.event.detail;\n    }\n    /**\n     * Returns the typed event target of the event.\n     */\n    eventTarget() {\n        return this.event.target;\n    }\n    /**\n     * Appends the view's DOM nodes to the referenced node.\n     * @param node - The parent node to append the view's DOM nodes to.\n     */\n    appendTo(node) {\n        node.appendChild(this.fragment);\n    }\n    /**\n     * Inserts the view's DOM nodes before the referenced node.\n     * @param node - The node to insert the view's DOM before.\n     */\n    insertBefore(node) {\n        if (this.fragment.hasChildNodes()) {\n            node.parentNode.insertBefore(this.fragment, node);\n        }\n        else {\n            const end = this.lastChild;\n            if (node.previousSibling === end)\n                return;\n            const parentNode = node.parentNode;\n            let current = this.firstChild;\n            let next;\n            while (current !== end) {\n                next = current.nextSibling;\n                parentNode.insertBefore(current, node);\n                current = next;\n            }\n            parentNode.insertBefore(end, node);\n        }\n    }\n    /**\n     * Removes the view's DOM nodes.\n     * The nodes are not disposed and the view can later be re-inserted.\n     */\n    remove() {\n        const fragment = this.fragment;\n        const end = this.lastChild;\n        let current = this.firstChild;\n        let next;\n        while (current !== end) {\n            next = current.nextSibling;\n            fragment.appendChild(current);\n            current = next;\n        }\n        fragment.appendChild(end);\n    }\n    /**\n     * Removes the view and unbinds its behaviors, disposing of DOM nodes afterward.\n     * Once a view has been disposed, it cannot be inserted or bound again.\n     */\n    dispose() {\n        removeNodeSequence(this.firstChild, this.lastChild);\n        this.unbind();\n    }\n    onUnbind(behavior) {\n        this.unbindables.push(behavior);\n    }\n    /**\n     * Binds a view's behaviors to its binding source.\n     * @param source - The binding source for the view's binding behaviors.\n     * @param context - The execution context to run the behaviors within.\n     */\n    bind(source, context = this) {\n        if (this.source === source) {\n            return;\n        }\n        let behaviors = this.behaviors;\n        if (behaviors === null) {\n            this.source = source;\n            this.context = context;\n            this.behaviors = behaviors = new Array(this.factories.length);\n            const factories = this.factories;\n            for (let i = 0, ii = factories.length; i < ii; ++i) {\n                const behavior = factories[i].createBehavior();\n                behavior.bind(this);\n                behaviors[i] = behavior;\n            }\n        }\n        else {\n            if (this.source !== null) {\n                this.evaluateUnbindables();\n            }\n            this.isBound = false;\n            this.source = source;\n            this.context = context;\n            for (let i = 0, ii = behaviors.length; i < ii; ++i) {\n                behaviors[i].bind(this);\n            }\n        }\n        this.isBound = true;\n    }\n    /**\n     * Unbinds a view's behaviors from its binding source.\n     */\n    unbind() {\n        if (!this.isBound || this.source === null) {\n            return;\n        }\n        this.evaluateUnbindables();\n        this.source = null;\n        this.context = this;\n        this.isBound = false;\n    }\n    evaluateUnbindables() {\n        const unbindables = this.unbindables;\n        for (let i = 0, ii = unbindables.length; i < ii; ++i) {\n            unbindables[i].unbind(this);\n        }\n        unbindables.length = 0;\n    }\n    /**\n     * Efficiently disposes of a contiguous range of synthetic view instances.\n     * @param views - A contiguous range of views to be disposed.\n     */\n    static disposeContiguousBatch(views) {\n        if (views.length === 0) {\n            return;\n        }\n        removeNodeSequence(views[0].firstChild, views[views.length - 1].lastChild);\n        for (let i = 0, ii = views.length; i < ii; ++i) {\n            views[i].unbind();\n        }\n    }\n}\nmakeSerializationNoop(HTMLView);\nObservable.defineProperty(HTMLView.prototype, \"index\");\nObservable.defineProperty(HTMLView.prototype, \"length\");\n","import { Observable } from \"../observation/observable.js\";\nimport { emptyArray } from \"../platform.js\";\nimport { ArrayObserver } from \"../observation/arrays.js\";\nimport { normalizeBinding } from \"../binding/normalize.js\";\nimport { Markup } from \"./markup.js\";\nimport { HTMLDirective, } from \"./html-directive.js\";\nimport { HTMLView } from \"./view.js\";\nconst defaultRepeatOptions = Object.freeze({\n    positioning: false,\n    recycle: true,\n});\nfunction bindWithoutPositioning(view, items, index, controller) {\n    view.context.parent = controller.source;\n    view.context.parentContext = controller.context;\n    view.bind(items[index]);\n}\nfunction bindWithPositioning(view, items, index, controller) {\n    view.context.parent = controller.source;\n    view.context.parentContext = controller.context;\n    view.context.length = items.length;\n    view.context.index = index;\n    view.bind(items[index]);\n}\n/**\n * A behavior that renders a template for each item in an array.\n * @public\n */\nexport class RepeatBehavior {\n    /**\n     * Creates an instance of RepeatBehavior.\n     * @param location - The location in the DOM to render the repeat.\n     * @param dataBinding - The array to render.\n     * @param isItemsBindingVolatile - Indicates whether the items binding has volatile dependencies.\n     * @param templateBinding - The template to render for each item.\n     * @param isTemplateBindingVolatile - Indicates whether the template binding has volatile dependencies.\n     * @param options - Options used to turn on special repeat features.\n     */\n    constructor(directive) {\n        this.directive = directive;\n        this.items = null;\n        this.itemsObserver = null;\n        this.bindView = bindWithoutPositioning;\n        /** @internal */\n        this.views = [];\n        this.itemsBindingObserver = directive.dataBinding.createObserver(this, directive);\n        this.templateBindingObserver = directive.templateBinding.createObserver(this, directive);\n        if (directive.options.positioning) {\n            this.bindView = bindWithPositioning;\n        }\n    }\n    /**\n     * Bind this behavior.\n     * @param controller - The view controller that manages the lifecycle of this behavior.\n     */\n    bind(controller) {\n        this.location = controller.targets[this.directive.targetNodeId];\n        this.controller = controller;\n        this.items = this.itemsBindingObserver.bind(controller);\n        this.template = this.templateBindingObserver.bind(controller);\n        this.observeItems(true);\n        this.refreshAllViews();\n        controller.onUnbind(this);\n    }\n    /**\n     * Unbinds this behavior.\n     */\n    unbind() {\n        if (this.itemsObserver !== null) {\n            this.itemsObserver.unsubscribe(this);\n        }\n        this.unbindAllViews();\n    }\n    /**\n     * Handles changes in the array, its items, and the repeat template.\n     * @param source - The source of the change.\n     * @param args - The details about what was changed.\n     */\n    handleChange(source, args) {\n        if (args === this.itemsBindingObserver) {\n            this.items = this.itemsBindingObserver.bind(this.controller);\n            this.observeItems();\n            this.refreshAllViews();\n        }\n        else if (args === this.templateBindingObserver) {\n            this.template = this.templateBindingObserver.bind(this.controller);\n            this.refreshAllViews(true);\n        }\n        else if (!args[0]) {\n            return;\n        }\n        else if (args[0].reset) {\n            this.refreshAllViews();\n        }\n        else {\n            this.updateViews(args);\n        }\n    }\n    observeItems(force = false) {\n        if (!this.items) {\n            this.items = emptyArray;\n            return;\n        }\n        const oldObserver = this.itemsObserver;\n        const newObserver = (this.itemsObserver = Observable.getNotifier(this.items));\n        const hasNewObserver = oldObserver !== newObserver;\n        if (hasNewObserver && oldObserver !== null) {\n            oldObserver.unsubscribe(this);\n        }\n        if (hasNewObserver || force) {\n            newObserver.subscribe(this);\n        }\n    }\n    updateViews(splices) {\n        const views = this.views;\n        const bindView = this.bindView;\n        const items = this.items;\n        const template = this.template;\n        const controller = this.controller;\n        const recycle = this.directive.options.recycle;\n        const leftoverViews = [];\n        let leftoverIndex = 0;\n        let availableViews = 0;\n        for (let i = 0, ii = splices.length; i < ii; ++i) {\n            const splice = splices[i];\n            const removed = splice.removed;\n            let removeIndex = 0;\n            let addIndex = splice.index;\n            const end = addIndex + splice.addedCount;\n            const removedViews = views.splice(splice.index, removed.length);\n            const totalAvailableViews = (availableViews =\n                leftoverViews.length + removedViews.length);\n            for (; addIndex < end; ++addIndex) {\n                const neighbor = views[addIndex];\n                const location = neighbor ? neighbor.firstChild : this.location;\n                let view;\n                if (recycle && availableViews > 0) {\n                    if (removeIndex <= totalAvailableViews && removedViews.length > 0) {\n                        view = removedViews[removeIndex];\n                        removeIndex++;\n                    }\n                    else {\n                        view = leftoverViews[leftoverIndex];\n                        leftoverIndex++;\n                    }\n                    availableViews--;\n                }\n                else {\n                    view = template.create();\n                }\n                views.splice(addIndex, 0, view);\n                bindView(view, items, addIndex, controller);\n                view.insertBefore(location);\n            }\n            if (removedViews[removeIndex]) {\n                leftoverViews.push(...removedViews.slice(removeIndex));\n            }\n        }\n        for (let i = leftoverIndex, ii = leftoverViews.length; i < ii; ++i) {\n            leftoverViews[i].dispose();\n        }\n        if (this.directive.options.positioning) {\n            for (let i = 0, viewsLength = views.length; i < viewsLength; ++i) {\n                const context = views[i].context;\n                context.length = viewsLength;\n                context.index = i;\n            }\n        }\n    }\n    refreshAllViews(templateChanged = false) {\n        const items = this.items;\n        const template = this.template;\n        const location = this.location;\n        const bindView = this.bindView;\n        const controller = this.controller;\n        let itemsLength = items.length;\n        let views = this.views;\n        let viewsLength = views.length;\n        if (itemsLength === 0 || templateChanged || !this.directive.options.recycle) {\n            // all views need to be removed\n            HTMLView.disposeContiguousBatch(views);\n            viewsLength = 0;\n        }\n        if (viewsLength === 0) {\n            // all views need to be created\n            this.views = views = new Array(itemsLength);\n            for (let i = 0; i < itemsLength; ++i) {\n                const view = template.create();\n                bindView(view, items, i, controller);\n                views[i] = view;\n                view.insertBefore(location);\n            }\n        }\n        else {\n            // attempt to reuse existing views with new data\n            let i = 0;\n            for (; i < itemsLength; ++i) {\n                if (i < viewsLength) {\n                    const view = views[i];\n                    bindView(view, items, i, controller);\n                }\n                else {\n                    const view = template.create();\n                    bindView(view, items, i, controller);\n                    views.push(view);\n                    view.insertBefore(location);\n                }\n            }\n            const removed = views.splice(i, viewsLength - i);\n            for (i = 0, itemsLength = removed.length; i < itemsLength; ++i) {\n                removed[i].dispose();\n            }\n        }\n    }\n    unbindAllViews() {\n        const views = this.views;\n        for (let i = 0, ii = views.length; i < ii; ++i) {\n            views[i].unbind();\n        }\n    }\n}\n/**\n * A directive that configures list rendering.\n * @public\n */\nexport class RepeatDirective {\n    /**\n     * Creates an instance of RepeatDirective.\n     * @param dataBinding - The binding that provides the array to render.\n     * @param templateBinding - The template binding used to obtain a template to render for each item in the array.\n     * @param options - Options used to turn on special repeat features.\n     */\n    constructor(dataBinding, templateBinding, options) {\n        this.dataBinding = dataBinding;\n        this.templateBinding = templateBinding;\n        this.options = options;\n        ArrayObserver.enable();\n    }\n    /**\n     * Creates a placeholder string based on the directive's index within the template.\n     * @param index - The index of the directive within the template.\n     */\n    createHTML(add) {\n        return Markup.comment(add(this));\n    }\n    /**\n     * Creates a behavior for the provided target node.\n     * @param target - The node instance to create the behavior for.\n     */\n    createBehavior() {\n        return new RepeatBehavior(this);\n    }\n}\nHTMLDirective.define(RepeatDirective);\n/**\n * A directive that enables list rendering.\n * @param items - The array to render.\n * @param template - The template or a template binding used obtain a template\n * to render for each item in the array.\n * @param options - Options used to turn on special repeat features.\n * @public\n */\nexport function repeat(items, template, options = defaultRepeatOptions) {\n    const dataBinding = normalizeBinding(items);\n    const templateBinding = normalizeBinding(template);\n    return new RepeatDirective(dataBinding, templateBinding, Object.assign(Object.assign({}, defaultRepeatOptions), options));\n}\n","import { emptyArray } from \"../platform.js\";\nimport { SubscriberSet } from \"./notifier.js\";\nimport { Observable } from \"./observable.js\";\nimport { Updates } from \"./update-queue.js\";\n/**\n * A splice map is a representation of how a previous array of items\n * was transformed into a new array of items. Conceptually it is a list of\n * tuples of\n *\n *   (index, removed, addedCount)\n *\n * which are kept in ascending index order of. The tuple represents that at\n * the |index|, |removed| sequence of items were removed, and counting forward\n * from |index|, |addedCount| items were added.\n * @public\n */\nexport class Splice {\n    /**\n     * Creates a splice.\n     * @param index - The index that the splice occurs at.\n     * @param removed - The items that were removed.\n     * @param addedCount - The  number of items that were added.\n     */\n    constructor(index, removed, addedCount) {\n        this.index = index;\n        this.removed = removed;\n        this.addedCount = addedCount;\n    }\n    /**\n     * Adjusts the splice index based on the provided array.\n     * @param array - The array to adjust to.\n     * @returns The same splice, mutated based on the reference array.\n     */\n    adjustTo(array) {\n        let index = this.index;\n        const arrayLength = array.length;\n        if (index > arrayLength) {\n            index = arrayLength - this.addedCount;\n        }\n        else if (index < 0) {\n            index = arrayLength + this.removed.length + index - this.addedCount;\n        }\n        this.index = index < 0 ? 0 : index;\n        return this;\n    }\n}\n/**\n * Indicates what level of feature support the splice\n * strategy provides.\n * @public\n */\nexport const SpliceStrategySupport = Object.freeze({\n    /**\n     * Only supports resets.\n     */\n    reset: 1,\n    /**\n     * Supports tracking splices and resets.\n     */\n    splice: 2,\n    /**\n     * Supports tracking splices and resets, while applying some form\n     * of optimization, such as merging, to the splices.\n     */\n    optimized: 3,\n});\nconst reset = new Splice(0, emptyArray, 0);\nreset.reset = true;\nconst resetSplices = [reset];\n// Note: This function is *based* on the computation of the Levenshtein\n// \"edit\" distance. The one change is that \"updates\" are treated as two\n// edits - not one. With Array splices, an update is really a delete\n// followed by an add. By retaining this, we optimize for \"keeping\" the\n// maximum array items in the original array. For example:\n//\n//   'xxxx123' to '123yyyy'\n//\n// With 1-edit updates, the shortest path would be just to update all seven\n// characters. With 2-edit updates, we delete 4, leave 3, and add 4. This\n// leaves the substring '123' intact.\nfunction calcEditDistances(current, currentStart, currentEnd, old, oldStart, oldEnd) {\n    // \"Deletion\" columns\n    const rowCount = oldEnd - oldStart + 1;\n    const columnCount = currentEnd - currentStart + 1;\n    const distances = new Array(rowCount);\n    let north;\n    let west;\n    // \"Addition\" rows. Initialize null column.\n    for (let i = 0; i < rowCount; ++i) {\n        distances[i] = new Array(columnCount);\n        distances[i][0] = i;\n    }\n    // Initialize null row\n    for (let j = 0; j < columnCount; ++j) {\n        distances[0][j] = j;\n    }\n    for (let i = 1; i < rowCount; ++i) {\n        for (let j = 1; j < columnCount; ++j) {\n            if (current[currentStart + j - 1] === old[oldStart + i - 1]) {\n                distances[i][j] = distances[i - 1][j - 1];\n            }\n            else {\n                north = distances[i - 1][j] + 1;\n                west = distances[i][j - 1] + 1;\n                distances[i][j] = north < west ? north : west;\n            }\n        }\n    }\n    return distances;\n}\n// This starts at the final weight, and walks \"backward\" by finding\n// the minimum previous weight recursively until the origin of the weight\n// matrix.\nfunction spliceOperationsFromEditDistances(distances) {\n    let i = distances.length - 1;\n    let j = distances[0].length - 1;\n    let current = distances[i][j];\n    const edits = [];\n    while (i > 0 || j > 0) {\n        if (i === 0) {\n            edits.push(2 /* Edit.add */);\n            j--;\n            continue;\n        }\n        if (j === 0) {\n            edits.push(3 /* Edit.delete */);\n            i--;\n            continue;\n        }\n        const northWest = distances[i - 1][j - 1];\n        const west = distances[i - 1][j];\n        const north = distances[i][j - 1];\n        let min;\n        if (west < north) {\n            min = west < northWest ? west : northWest;\n        }\n        else {\n            min = north < northWest ? north : northWest;\n        }\n        if (min === northWest) {\n            if (northWest === current) {\n                edits.push(0 /* Edit.leave */);\n            }\n            else {\n                edits.push(1 /* Edit.update */);\n                current = northWest;\n            }\n            i--;\n            j--;\n        }\n        else if (min === west) {\n            edits.push(3 /* Edit.delete */);\n            i--;\n            current = west;\n        }\n        else {\n            edits.push(2 /* Edit.add */);\n            j--;\n            current = north;\n        }\n    }\n    return edits.reverse();\n}\nfunction sharedPrefix(current, old, searchLength) {\n    for (let i = 0; i < searchLength; ++i) {\n        if (current[i] !== old[i]) {\n            return i;\n        }\n    }\n    return searchLength;\n}\nfunction sharedSuffix(current, old, searchLength) {\n    let index1 = current.length;\n    let index2 = old.length;\n    let count = 0;\n    while (count < searchLength && current[--index1] === old[--index2]) {\n        count++;\n    }\n    return count;\n}\nfunction intersect(start1, end1, start2, end2) {\n    // Disjoint\n    if (end1 < start2 || end2 < start1) {\n        return -1;\n    }\n    // Adjacent\n    if (end1 === start2 || end2 === start1) {\n        return 0;\n    }\n    // Non-zero intersect, span1 first\n    if (start1 < start2) {\n        if (end1 < end2) {\n            return end1 - start2; // Overlap\n        }\n        return end2 - start2; // Contained\n    }\n    // Non-zero intersect, span2 first\n    if (end2 < end1) {\n        return end2 - start1; // Overlap\n    }\n    return end1 - start1; // Contained\n}\n/**\n * @remarks\n * Lacking individual splice mutation information, the minimal set of\n * splices can be synthesized given the previous state and final state of an\n * array. The basic approach is to calculate the edit distance matrix and\n * choose the shortest path through it.\n *\n * Complexity: O(l * p)\n *   l: The length of the current array\n *   p: The length of the old array\n */\nfunction calc(current, currentStart, currentEnd, old, oldStart, oldEnd) {\n    let prefixCount = 0;\n    let suffixCount = 0;\n    const minLength = Math.min(currentEnd - currentStart, oldEnd - oldStart);\n    if (currentStart === 0 && oldStart === 0) {\n        prefixCount = sharedPrefix(current, old, minLength);\n    }\n    if (currentEnd === current.length && oldEnd === old.length) {\n        suffixCount = sharedSuffix(current, old, minLength - prefixCount);\n    }\n    currentStart += prefixCount;\n    oldStart += prefixCount;\n    currentEnd -= suffixCount;\n    oldEnd -= suffixCount;\n    if (currentEnd - currentStart === 0 && oldEnd - oldStart === 0) {\n        return emptyArray;\n    }\n    if (currentStart === currentEnd) {\n        const splice = new Splice(currentStart, [], 0);\n        while (oldStart < oldEnd) {\n            splice.removed.push(old[oldStart++]);\n        }\n        return [splice];\n    }\n    else if (oldStart === oldEnd) {\n        return [new Splice(currentStart, [], currentEnd - currentStart)];\n    }\n    const ops = spliceOperationsFromEditDistances(calcEditDistances(current, currentStart, currentEnd, old, oldStart, oldEnd));\n    const splices = [];\n    let splice = void 0;\n    let index = currentStart;\n    let oldIndex = oldStart;\n    for (let i = 0; i < ops.length; ++i) {\n        switch (ops[i]) {\n            case 0 /* Edit.leave */:\n                if (splice !== void 0) {\n                    splices.push(splice);\n                    splice = void 0;\n                }\n                index++;\n                oldIndex++;\n                break;\n            case 1 /* Edit.update */:\n                if (splice === void 0) {\n                    splice = new Splice(index, [], 0);\n                }\n                splice.addedCount++;\n                index++;\n                splice.removed.push(old[oldIndex]);\n                oldIndex++;\n                break;\n            case 2 /* Edit.add */:\n                if (splice === void 0) {\n                    splice = new Splice(index, [], 0);\n                }\n                splice.addedCount++;\n                index++;\n                break;\n            case 3 /* Edit.delete */:\n                if (splice === void 0) {\n                    splice = new Splice(index, [], 0);\n                }\n                splice.removed.push(old[oldIndex]);\n                oldIndex++;\n                break;\n            // no default\n        }\n    }\n    if (splice !== void 0) {\n        splices.push(splice);\n    }\n    return splices;\n}\nfunction merge(splice, splices) {\n    let inserted = false;\n    let insertionOffset = 0;\n    for (let i = 0; i < splices.length; i++) {\n        const current = splices[i];\n        current.index += insertionOffset;\n        if (inserted) {\n            continue;\n        }\n        const intersectCount = intersect(splice.index, splice.index + splice.removed.length, current.index, current.index + current.addedCount);\n        if (intersectCount >= 0) {\n            // Merge the two splices\n            splices.splice(i, 1);\n            i--;\n            insertionOffset -= current.addedCount - current.removed.length;\n            splice.addedCount += current.addedCount - intersectCount;\n            const deleteCount = splice.removed.length + current.removed.length - intersectCount;\n            if (!splice.addedCount && !deleteCount) {\n                // merged splice is a noop. discard.\n                inserted = true;\n            }\n            else {\n                let currentRemoved = current.removed;\n                if (splice.index < current.index) {\n                    // some prefix of splice.removed is prepended to current.removed.\n                    const prepend = splice.removed.slice(0, current.index - splice.index);\n                    prepend.push(...currentRemoved);\n                    currentRemoved = prepend;\n                }\n                if (splice.index + splice.removed.length >\n                    current.index + current.addedCount) {\n                    // some suffix of splice.removed is appended to current.removed.\n                    const append = splice.removed.slice(current.index + current.addedCount - splice.index);\n                    currentRemoved.push(...append);\n                }\n                splice.removed = currentRemoved;\n                if (current.index < splice.index) {\n                    splice.index = current.index;\n                }\n            }\n        }\n        else if (splice.index < current.index) {\n            // Insert splice here.\n            inserted = true;\n            splices.splice(i, 0, splice);\n            i++;\n            const offset = splice.addedCount - splice.removed.length;\n            current.index += offset;\n            insertionOffset += offset;\n        }\n    }\n    if (!inserted) {\n        splices.push(splice);\n    }\n}\nfunction project(array, changes) {\n    let splices = [];\n    const initialSplices = [];\n    for (let i = 0, ii = changes.length; i < ii; i++) {\n        merge(changes[i], initialSplices);\n    }\n    for (let i = 0, ii = initialSplices.length; i < ii; ++i) {\n        const splice = initialSplices[i];\n        if (splice.addedCount === 1 && splice.removed.length === 1) {\n            if (splice.removed[0] !== array[splice.index]) {\n                splices.push(splice);\n            }\n            continue;\n        }\n        splices = splices.concat(calc(array, splice.index, splice.index + splice.addedCount, splice.removed, 0, splice.removed.length));\n    }\n    return splices;\n}\n/**\n * A SpliceStrategy that attempts to merge all splices into the minimal set of\n * splices needed to represent the change from the old array to the new array.\n * @public\n */\nlet defaultSpliceStrategy = Object.freeze({\n    support: SpliceStrategySupport.optimized,\n    normalize(previous, current, changes) {\n        if (previous === void 0) {\n            if (changes === void 0) {\n                return emptyArray;\n            }\n            return project(current, changes);\n        }\n        return resetSplices;\n    },\n    pop(array, observer, pop, args) {\n        const notEmpty = array.length > 0;\n        const result = pop.apply(array, args);\n        if (notEmpty) {\n            observer.addSplice(new Splice(array.length, [result], 0));\n        }\n        return result;\n    },\n    push(array, observer, push, args) {\n        const result = push.apply(array, args);\n        observer.addSplice(new Splice(array.length - args.length, [], args.length).adjustTo(array));\n        return result;\n    },\n    reverse(array, observer, reverse, args) {\n        const result = reverse.apply(array, args);\n        observer.reset(array);\n        return result;\n    },\n    shift(array, observer, shift, args) {\n        const notEmpty = array.length > 0;\n        const result = shift.apply(array, args);\n        if (notEmpty) {\n            observer.addSplice(new Splice(0, [result], 0));\n        }\n        return result;\n    },\n    sort(array, observer, sort, args) {\n        const result = sort.apply(array, args);\n        observer.reset(array);\n        return result;\n    },\n    splice(array, observer, splice, args) {\n        const result = splice.apply(array, args);\n        observer.addSplice(new Splice(+args[0], result, args.length > 2 ? args.length - 2 : 0).adjustTo(array));\n        return result;\n    },\n    unshift(array, observer, unshift, args) {\n        const result = unshift.apply(array, args);\n        observer.addSplice(new Splice(0, [], args.length).adjustTo(array));\n        return result;\n    },\n});\n/**\n * Functionality related to tracking changes in arrays.\n * @public\n */\nexport const SpliceStrategy = Object.freeze({\n    /**\n     * A set of changes that represent a full array reset.\n     */\n    reset: resetSplices,\n    /**\n     * Sets the default strategy to use for array observers.\n     * @param strategy - The splice strategy to use.\n     */\n    setDefaultStrategy(strategy) {\n        defaultSpliceStrategy = strategy;\n    },\n});\nfunction setNonEnumerable(target, property, value) {\n    Reflect.defineProperty(target, property, {\n        value,\n        enumerable: false,\n    });\n}\nclass DefaultArrayObserver extends SubscriberSet {\n    constructor(subject) {\n        super(subject);\n        this.oldCollection = void 0;\n        this.splices = void 0;\n        this.needsQueue = true;\n        this._strategy = null;\n        this._lengthObserver = void 0;\n        this.call = this.flush;\n        setNonEnumerable(subject, \"$fastController\", this);\n    }\n    get strategy() {\n        return this._strategy;\n    }\n    set strategy(value) {\n        this._strategy = value;\n    }\n    get lengthObserver() {\n        let observer = this._lengthObserver;\n        if (observer === void 0) {\n            const array = this.subject;\n            this._lengthObserver = observer = {\n                length: array.length,\n                handleChange() {\n                    if (this.length !== array.length) {\n                        this.length = array.length;\n                        Observable.notify(observer, \"length\");\n                    }\n                },\n            };\n            this.subscribe(observer);\n        }\n        return observer;\n    }\n    subscribe(subscriber) {\n        this.flush();\n        super.subscribe(subscriber);\n    }\n    addSplice(splice) {\n        if (this.splices === void 0) {\n            this.splices = [splice];\n        }\n        else {\n            this.splices.push(splice);\n        }\n        this.enqueue();\n    }\n    reset(oldCollection) {\n        this.oldCollection = oldCollection;\n        this.enqueue();\n    }\n    flush() {\n        var _a;\n        const splices = this.splices;\n        const oldCollection = this.oldCollection;\n        if (splices === void 0 && oldCollection === void 0) {\n            return;\n        }\n        this.needsQueue = true;\n        this.splices = void 0;\n        this.oldCollection = void 0;\n        this.notify(((_a = this._strategy) !== null && _a !== void 0 ? _a : defaultSpliceStrategy).normalize(oldCollection, this.subject, splices));\n    }\n    enqueue() {\n        if (this.needsQueue) {\n            this.needsQueue = false;\n            Updates.enqueue(this);\n        }\n    }\n}\nlet enabled = false;\n/**\n * An observer for arrays.\n * @public\n */\nexport const ArrayObserver = Object.freeze({\n    /**\n     * Enables the array observation mechanism.\n     * @remarks\n     * Array observation is enabled automatically when using the\n     * {@link RepeatDirective}, so calling this API manually is\n     * not typically necessary.\n     */\n    enable() {\n        if (enabled) {\n            return;\n        }\n        enabled = true;\n        Observable.setArrayObserverFactory((collection) => new DefaultArrayObserver(collection));\n        const proto = Array.prototype;\n        if (!proto.$fastPatch) {\n            setNonEnumerable(proto, \"$fastPatch\", 1);\n            [\n                proto.pop,\n                proto.push,\n                proto.reverse,\n                proto.shift,\n                proto.sort,\n                proto.splice,\n                proto.unshift,\n            ].forEach(method => {\n                proto[method.name] = function (...args) {\n                    var _a;\n                    const o = this.$fastController;\n                    return o === void 0\n                        ? method.apply(this, args)\n                        : ((_a = o.strategy) !== null && _a !== void 0 ? _a : defaultSpliceStrategy)[method.name](this, o, method, args);\n                };\n            });\n        }\n    },\n});\n/**\n * Enables observing the length of an array.\n * @param array - The array to observe the length of.\n * @returns The length of the array.\n * @public\n */\nexport function lengthOf(array) {\n    if (!array) {\n        return 0;\n    }\n    let arrayObserver = array.$fastController;\n    if (arrayObserver === void 0) {\n        ArrayObserver.enable();\n        arrayObserver = Observable.getNotifier(array);\n    }\n    Observable.track(arrayObserver.lengthObserver, \"length\");\n    return array.length;\n}\n","import { isFunction } from \"../interfaces.js\";\nimport { Binding } from \"./binding.js\";\nimport { oneWay } from \"./one-way.js\";\nimport { oneTime } from \"./one-time.js\";\n/**\n * Normalizes the input value into a binding.\n * @param value - The value to create the default binding for.\n * @returns A binding configuration for the provided value.\n * @public\n */\nexport function normalizeBinding(value) {\n    return isFunction(value)\n        ? oneWay(value)\n        : value instanceof Binding\n            ? value\n            : oneTime(() => value);\n}\n","import { isString } from \"../interfaces.js\";\nimport { HTMLDirective } from \"./html-directive.js\";\nimport { NodeObservationDirective } from \"./node-observation.js\";\nconst slotEvent = \"slotchange\";\n/**\n * The runtime behavior for slotted node observation.\n * @public\n */\nexport class SlottedDirective extends NodeObservationDirective {\n    /**\n     * Begins observation of the nodes.\n     * @param target - The target to observe.\n     */\n    observe(target) {\n        target.addEventListener(slotEvent, this);\n    }\n    /**\n     * Disconnects observation of the nodes.\n     * @param target - The target to unobserve.\n     */\n    disconnect(target) {\n        target.removeEventListener(slotEvent, this);\n    }\n    /**\n     * Retrieves the raw nodes that should be assigned to the source property.\n     * @param target - The target to get the node to.\n     */\n    getNodes(target) {\n        return target.assignedNodes(this.options);\n    }\n    /** @internal */\n    handleEvent(event) {\n        const target = event.currentTarget;\n        this.updateTarget(this.getSource(target), this.computeNodes(target));\n    }\n}\nHTMLDirective.define(SlottedDirective);\n/**\n * A directive that observes the `assignedNodes()` of a slot and updates a property\n * whenever they change.\n * @param propertyOrOptions - The options used to configure slotted node observation.\n * @public\n */\nexport function slotted(propertyOrOptions) {\n    if (isString(propertyOrOptions)) {\n        propertyOrOptions = { property: propertyOrOptions };\n    }\n    return new SlottedDirective(propertyOrOptions);\n}\n","import { isFunction } from \"../interfaces.js\";\nconst noTemplate = () => null;\nfunction normalizeBinding(value) {\n    return value === undefined ? noTemplate : isFunction(value) ? value : () => value;\n}\n/**\n * A directive that enables basic conditional rendering in a template.\n * @param condition - The condition to test for rendering.\n * @param templateOrTemplateBinding - The template or a binding that gets\n * the template to render when the condition is true.\n * @param elseTemplateOrTemplateBinding - Optional template or binding that that\n * gets the template to render when the conditional is false.\n * @public\n */\nexport function when(condition, templateOrTemplateBinding, elseTemplateOrTemplateBinding) {\n    const dataBinding = isFunction(condition) ? condition : () => condition;\n    const templateBinding = normalizeBinding(templateOrTemplateBinding);\n    const elseBinding = normalizeBinding(elseTemplateOrTemplateBinding);\n    return (source, context) => dataBinding(source, context)\n        ? templateBinding(source, context)\n        : elseBinding(source, context);\n}\n","import {Observable as $hgUW1$Observable} from \"@microsoft/fast-element\";\n\n\nclass $e23529bbb092cbf2$export$7254cc27399e90bd {\n    constructor(value = null){\n        /** \n     * Propriété privée pour stocker l'historique des valeurs d'état, limitée aux 10 dernières entrées.\n    */ this._history = [];\n        /** \n     * Propriété privée pour stocker la valeur actuelle de l'état, initialisée à `null`.\n    */ this._value = null;\n        /** \n     * Propriété privée pour notifier les observateurs des changements d'état, initialisée avec `Observable.getNotifier`.\n    */ this._notifier = (0, $hgUW1$Observable).getNotifier(this);\n        this._value = value;\n    }\n    /** \n   * Getter pour la valeur actuelle de l'état. Utilise `Observable.track` pour suivre les changements.\n  */ get value() {\n        (0, $hgUW1$Observable).track(this, \"value\");\n        return this._value;\n    }\n    /**\n   * Setter pour mettre à jour la valeur de l'état. Ajoute la valeur actuelle à l'historique et notifie\n   * les observateurs du changement.\n   * @param {T} value - Nouvelle valeur de l'état.\n  */ set value(value) {\n        this._value = value;\n        this._history = [\n            this._value,\n            ...this._history.reverse()\n        ].reduce((results, value)=>{\n            if (results.length > 10) results.push(value);\n            return results;\n        }, []).reverse();\n        (0, $hgUW1$Observable).notify(this, \"value\");\n    }\n    /**\n   * Méthode statique pour initialiser un nouvel objet `State` avec une valeur initiale facultative.\n   * @param {T} [value=null] - Valeur initiale de l'état.\n   * @returns Une nouvelle instance de `State` avec la valeur spécifiée.\n  */ static init(value = null) {\n        return new $e23529bbb092cbf2$export$7254cc27399e90bd(value);\n    }\n    /**\n   * Renvoie un tableau avec l'état actuel et une fonction pour mettre à jour l'état.\n   * @returns Un tableau contenant l'état actuel et une fonction de mise à jour.\n  */ get mutator() {\n        return [\n            this,\n            (value)=>{\n                this.value = value;\n            }\n        ];\n    }\n    /** \n   * Abonne une fonction de rappel qui sera appelée à chaque changement de valeur de l'état.\n   * @param {function} callback - Fonction à appeler lors d'un changement de valeur.\n  */ subscribe(callback) {\n        this._notifier.subscribe({\n            handleChange: (state, key)=>{\n                callback(state[key]);\n            }\n        });\n    }\n    /**\n   * Convertit l'état en une valeur primitive pour les objets, ou en Proxy pour les objets complexes.\n   * @returns La valeur primitive ou un Proxy pour les objets complexes.\n  */ [Symbol.toPrimitive]() {\n        return typeof this.value != \"object\" ? this.value : new Proxy(this.value, {\n            get (target, key) {\n                return target[key] ? target[key] : undefined;\n            }\n        });\n    }\n}\n\n\n\nfunction $75bc972ccc621f94$export$e6a0daad8304de(value = null) {\n    return (0, $e23529bbb092cbf2$export$7254cc27399e90bd).init(value).mutator;\n}\n\n\n\n\nexport {$e23529bbb092cbf2$export$7254cc27399e90bd as State, $75bc972ccc621f94$export$e6a0daad8304de as createState};\n//# sourceMappingURL=module.js.map\n","export { State } from './models/state.js';\nexport { createState } from './createState.js';","import { Notifier, Observable } from \"@microsoft/fast-element\";\n\n/** \n * La classe `State` gère et suit les valeurs d'état avec des capacités d'historique et d'abonnement.\n */\nexport class State<T = any>{\n\n  /** \n   * Propriété privée pour stocker l'historique des valeurs d'état, limitée aux 10 dernières entrées.\n  */\n  private _history : T[] = [];\n\n  /** \n   * Propriété privée pour stocker la valeur actuelle de l'état, initialisée à `null`.\n  */\n  private _value:T = null;\n\n  /** \n   * Propriété privée pour notifier les observateurs des changements d'état, initialisée avec `Observable.getNotifier`.\n  */\n  private _notifier:Notifier = Observable.getNotifier( this );\n\n  constructor( value = null ){\n    this._value = value;\n  }\n\n\n  /** \n   * Getter pour la valeur actuelle de l'état. Utilise `Observable.track` pour suivre les changements.\n  */\n  get value() {\n    Observable.track(this, 'value');\n    return this._value;\n  };\n\n  /**\n   * Setter pour mettre à jour la valeur de l'état. Ajoute la valeur actuelle à l'historique et notifie\n   * les observateurs du changement.\n   * @param {T} value - Nouvelle valeur de l'état.\n  */\n  set value(value: T) {\n    this._value = value;\n\n    this._history = [ this._value , ...this._history.reverse() ].reduce(( results , value ) => {\n      if(results.length > 10){\n        results.push( value );\n      };\n      return results;\n    } , []).reverse();\n\n    Observable.notify(this, 'value');\n  }\n\n  /**\n   * Méthode statique pour initialiser un nouvel objet `State` avec une valeur initiale facultative.\n   * @param {T} [value=null] - Valeur initiale de l'état.\n   * @returns Une nouvelle instance de `State` avec la valeur spécifiée.\n  */\n  static init<T = any>( value : T = null ){\n    return new State<T>( value );\n  }\n\n  /**\n   * Renvoie un tableau avec l'état actuel et une fonction pour mettre à jour l'état.\n   * @returns Un tableau contenant l'état actuel et une fonction de mise à jour.\n  */\n  get mutator():[ State<T> & T , ( newValue:T ) => void ]{\n    return [ this as any , ( value:T ) => {\n      this.value = value;\n    } ]\n  }\n\n  /** \n   * Abonne une fonction de rappel qui sera appelée à chaque changement de valeur de l'état.\n   * @param {function} callback - Fonction à appeler lors d'un changement de valeur.\n  */\n  subscribe( callback:(newValue: any) => void ){\n    this._notifier.subscribe( { handleChange : ( state , key ) => {\n      callback( state[key] );\n    } } );\n  };\n\n  /**\n   * Convertit l'état en une valeur primitive pour les objets, ou en Proxy pour les objets complexes.\n   * @returns La valeur primitive ou un Proxy pour les objets complexes.\n  */\n  [Symbol.toPrimitive](){\n    return typeof this.value != \"object\" ? this.value : new Proxy( this.value , {\n      get( target , key ){\n        return target[key] ? target[key] : undefined;\n      }\n    } )\n  }\n\n}","import { State } from \"./models/state.js\";\n\n/**\n * La fonction createState crée un état avec une valeur initiale et renvoie son mutateur.\n * @param {T} [value=null] - Le paramètre `value` dans la fonction `createState` est la valeur initiale\n * que vous souhaitez définir pour l'état. Il est facultatif et la valeur par défaut est « null » si\n * aucune valeur n'est fournie lors de l'appel de la fonction.\n * @returns La fonction `createState` renvoie la fonction `mutator` à partir de l'objet `State`\n * initialisé avec la `valeur` fournie.\n * ## Exemple \n * ```typescript\n * let [ counter , setCounter ] = createState<number>(0);\n * \n * counter.subscribe(( newValue ) => {\n *  \n *  console.log({newValue})\n * \n * })\n * ```\n */\nexport function createState< T = any >( value:T = null ):State< T >[\"mutator\"]{\n\n  return State.init( value ).mutator;\n\n}","import {createState as $hgUW1$createState} from \"@lithium-framework/state\";\n\n\nclass $89fec59bbef2bb37$export$98c71376181af907 extends Map {\n    /**\n   * Initialise une nouvelle instance de la classe `_storage` avec des enregistrements initiaux facultatifs et un validateur optionnel.\n   * @param {RECORD} [records] - Un objet contenant des paires clé-valeur représentant des enregistrements de données.\n   * @param {StateValidator} [validator] - Une fonction de validation optionnelle appelée lors de la modification d'un état.\n   * @returns {Storage<RECORD>} Une nouvelle instance de la classe `_storage` initialisée avec les enregistrements et le validateur fournis.\n   * @example\n   * ```typescript\n   * const records = { count: 0, name: \"John\" };\n   * const storage = _storage.init(records);\n   * ```\n   */ static init(records, validator) {\n        return new $89fec59bbef2bb37$export$98c71376181af907(records, validator);\n    }\n    /**\n   * Constructeur qui initialise la classe `_storage` avec des enregistrements optionnels et un validateur.\n   * @param {RECORD} [records] - Un objet contenant des paires clé-valeur représentant des enregistrements de données.\n   * @param {StateValidator} [validator] - Une fonction de validation optionnelle appelée lors de la modification d'un état.\n   */ constructor(records, validator){\n        super();\n        this._validator = null;\n        if (validator) this._validator = validator;\n        // Si des enregistrements sont fournis, les ajouter au _storage\n        if (records) Object.keys(records).forEach((key)=>{\n            this.set(key, (0, $hgUW1$createState)(records[key]));\n        });\n    }\n    /**\n   * Récupère la valeur du stockage en fonction d'une clé spécifiée.\n   * Si un validateur est défini, il valide la nouvelle valeur avant de l'appliquer.\n   * @template T - Le type de la valeur de l'état.\n   * @param {StorageKeys<RECORD>} key - La clé utilisée pour accéder à un enregistrement spécifique en stockage.\n   * @returns {State<T>[\"mutator\"]} La fonction `mutator` associée à la clé spécifiée de l'objet `State`.\n   * @example\n   * ```typescript\n   * const storage = _storage.init({ count: 0 });\n   * const [count, setCount] = storage.get(\"count\");\n   * setCount(10); // met à jour la valeur si la validation réussit\n   * ```\n   */ get(key) {\n        if (!this._validator) return super.get(key);\n        else {\n            let [state, setter] = super.get(key);\n            return [\n                state,\n                (newValue)=>{\n                    let previousValue = state.value;\n                    let result = this._validator(key, previousValue, newValue);\n                    if (result instanceof Promise) result.then(()=>setter(newValue)).catch((error)=>console.error(error));\n                    else if (result == true) setter(newValue);\n                }\n            ];\n        }\n    }\n}\n\n\nfunction $0718d8712747089f$export$d184a47a971dd4b9(records = {}, stateValidator) {\n    // Création d'un proxy contenant le stockage\n    return new Proxy((0, $89fec59bbef2bb37$export$98c71376181af907).init(records, stateValidator), {\n        /**\n     * Intercepte les opérations d'accès aux propriétés du stockage.\n     * @param {Storage<RECORD>} target - L'objet cible auquel les opérations sont appliquées.\n     * @param {string} key - La clé de l'état ou de la méthode accédée.\n     * @param {any} receiver - L'objet Proxy qui intercepte l'opération.\n     * @returns {any} La méthode ou la valeur de l'état correspondant à la clé.\n     * @example\n     * ```typescript\n     * const storage = createStorage({ count: 0 });\n     * console.log(storage.count[0].value); // affiche 0\n     * storage.count ; // met à jour la valeur de count à 5\n     * ```\n    */ get (target, key, receiver) {\n            // Retourne les méthodes du stockage\n            if (target[key]) {\n                if (typeof target[key] == \"function\") return target[key].bind(target);\n                else return target[key];\n            } else if (target.has(key)) return target.get(key);\n            else return undefined;\n        },\n        /**\n     * Intercepte les opérations de mise à jour des propriétés du stockage.\n     * @param {Storage<RECORD>} target - L'objet cible auquel les opérations sont appliquées.\n     * @param {string} key - La clé de l'état à mettre à jour.\n     * @param {any} newValue - La nouvelle valeur à assigner à l'état.\n     * @param {any} receiver - L'objet Proxy qui intercepte l'opération.\n     * @returns {boolean} Un indicateur de succès de la mise à jour.\n     * @example\n     * ```typescript\n     * const storage = createStorage({ count: 0 });\n     * storage.count ; // met à jour la valeur de count à 5\n     * console.log(storage.count[0].value); // affiche 5\n     * ```\n    */ set (target, key, newValue, receiver) {\n            if (target.has(key)) {\n                // Mise à jour du state contenant la valeur\n                target.get(key)[1](newValue);\n                return true;\n            } else return undefined;\n        }\n    });\n}\n\n\n\n\nexport {$0718d8712747089f$export$d184a47a971dd4b9 as createStorage};\n//# sourceMappingURL=module.js.map\n","export { createStorage } from './create-storage.js';\nexport type { Storage , StorageKeys , StorageValues , StateValidator } from './models/storage.js'","import { _storage, Storage, StateValidator } from './models/storage.js';\n\n/**\n * La fonction `createStorage` crée un objet proxy pour gérer le stockage avec des méthodes d'accès et de mise à jour des données.\n * @template RECORD - Le type de l'enregistrement de stockage.\n * @param {Partial<RECORD>} [records={}] - Un objet partiel de type `RECORD`, contenant des données initiales pour le stockage. \n * @param {StateValidator} [stateValidator] - Une fonction de validation optionnelle appelée lors de la modification d'un état.\n * @returns {Storage<RECORD>} Un objet Proxy qui entoure l'objet de stockage créé en appelant `_storage.init` avec les enregistrements fournis.\n * @example\n * ```typescript\n * const initialData = { counter: 0, name: \"Alice\" };\n * const validator: StateValidator<number> = (key, previousValue, newValue) => newValue >= 0;\n * const storage = createStorage(initialData, validator);\n * \n * let [ counter , setCounter ] = storage.get('counter');\n * setCounter( 10 ); // met à jour la valeur si la validation réussit\n * console.log(+counter); // affiche 10\n * ```\n */\nexport function createStorage<RECORD extends Record<string, any>>(records: Partial<RECORD> = {}, stateValidator?: StateValidator): Storage<RECORD> {\n\n  // Création d'un proxy contenant le stockage\n  return new Proxy(_storage.init<RECORD>(records as RECORD, stateValidator), {\n\n    /**\n     * Intercepte les opérations d'accès aux propriétés du stockage.\n     * @param {Storage<RECORD>} target - L'objet cible auquel les opérations sont appliquées.\n     * @param {string} key - La clé de l'état ou de la méthode accédée.\n     * @param {any} receiver - L'objet Proxy qui intercepte l'opération.\n     * @returns {any} La méthode ou la valeur de l'état correspondant à la clé.\n     * @example\n     * ```typescript\n     * const storage = createStorage({ count: 0 });\n     * console.log(storage.count[0].value); // affiche 0\n     * storage.count ; // met à jour la valeur de count à 5\n     * ```\n    */\n    get(target, key: string & any, receiver) {\n      // Retourne les méthodes du stockage\n      if (target[key]) {\n        if (typeof target[key] == \"function\") return (target[key] as any).bind(target);\n        // Retourne les variables du stockage\n        else return target[key];\n      }\n      // Si la clé n'est pas dans le stockage\n      // Vérification de la présence de la clé dans le map du stockage\n      // Si présence de celle-ci, elle est retournée\n      else if (target.has(key)) return target.get(key);\n      // Sinon la clé n'existe pas et retourne undefined\n      else return undefined;\n    },\n\n    /**\n     * Intercepte les opérations de mise à jour des propriétés du stockage.\n     * @param {Storage<RECORD>} target - L'objet cible auquel les opérations sont appliquées.\n     * @param {string} key - La clé de l'état à mettre à jour.\n     * @param {any} newValue - La nouvelle valeur à assigner à l'état.\n     * @param {any} receiver - L'objet Proxy qui intercepte l'opération.\n     * @returns {boolean} Un indicateur de succès de la mise à jour.\n     * @example\n     * ```typescript\n     * const storage = createStorage({ count: 0 });\n     * storage.count ; // met à jour la valeur de count à 5\n     * console.log(storage.count[0].value); // affiche 5\n     * ```\n    */\n    set(target, key: string & any, newValue, receiver) {\n      if (target.has(key)) {\n        // Mise à jour du state contenant la valeur\n        target.get(key)[1](newValue);\n        return true;\n      }\n      // Sinon return undefined\n      else return undefined;\n    }\n  }) as any;\n\n}\n","import { State, createState } from '@lithium-framework/state';\n\n/**\n * Représente la fonction appelée lors du changement d'un état.\n * Cette fonction permet de valider la nouvelle valeur avant de l'appliquer à l'état.\n * La nouvelle valeur est stockée dans le state correspondant en fonction du succès ou de l'échec de l'opération.\n *\n * @template T - Le type de la valeur de l'état.\n * @param {string} key - La clé de l'état en cours de modification.\n * @param {T} previousValue - La valeur précédente de l'état avant la modification.\n * @param {T} newValue - La nouvelle valeur proposée pour l'état.\n * @returns {Promise<any> | boolean} - Une promesse ou une valeur booléenne indiquant le succès ou l'échec de la modification.\n * @example\n * ```typescript\n * const validator: StateValidator<number> = (key, previousValue, newValue) => {\n *   if (newValue >= 0) return true;\n *   return false;\n * };\n * ```\n */\nexport type StateValidator<T = any> = (key: string, previousValue: T, newValue: T) => Promise<any> | boolean;\n\n/** \n * Type représentant les clés des valeurs d'un enregistrement.\n * @template RECORD - Le type de l'enregistrement.\n */\nexport type StorageKeys<RECORD> = keyof RECORD;\n\n/** \n * Type représentant les mutateurs des valeurs d'un enregistrement.\n * @template RECORD - Le type de l'enregistrement.\n */\nexport type StorageValues<RECORD> = State<RECORD[StorageKeys<RECORD>]>[\"mutator\"];\n\n/** \n * La classe `_storage` étend `Map` pour stocker les valeurs d'état et fournit des méthodes\n * d'initialisation et d'accès aux mutateurs par clé.\n * @template RECORD - Le type de l'enregistrement stocké.\n */\nexport class _storage<RECORD extends Record<string, any>> extends Map<StorageKeys<RECORD>, StorageValues<RECORD>> {\n\n  private _validator: StateValidator = null;\n\n  /**\n   * Initialise une nouvelle instance de la classe `_storage` avec des enregistrements initiaux facultatifs et un validateur optionnel.\n   * @param {RECORD} [records] - Un objet contenant des paires clé-valeur représentant des enregistrements de données.\n   * @param {StateValidator} [validator] - Une fonction de validation optionnelle appelée lors de la modification d'un état.\n   * @returns {Storage<RECORD>} Une nouvelle instance de la classe `_storage` initialisée avec les enregistrements et le validateur fournis.\n   * @example\n   * ```typescript\n   * const records = { count: 0, name: \"John\" };\n   * const storage = _storage.init(records);\n   * ```\n   */\n  static init<RECORD extends Record<string, any>>(records?: RECORD, validator?: StateValidator): Storage<RECORD> {\n    return new _storage<RECORD>(records, validator) as Storage<RECORD>;\n  }\n\n  /**\n   * Constructeur qui initialise la classe `_storage` avec des enregistrements optionnels et un validateur.\n   * @param {RECORD} [records] - Un objet contenant des paires clé-valeur représentant des enregistrements de données.\n   * @param {StateValidator} [validator] - Une fonction de validation optionnelle appelée lors de la modification d'un état.\n   */\n  constructor(records?: RECORD, validator?: StateValidator) {\n    super();\n\n    if (validator) this._validator = validator;\n\n    // Si des enregistrements sont fournis, les ajouter au _storage\n    if (records) {\n      Object.keys(records).forEach((key) => {\n        this.set(key, createState(records[key]));\n      });\n    }\n  }\n\n  /**\n   * Récupère la valeur du stockage en fonction d'une clé spécifiée.\n   * Si un validateur est défini, il valide la nouvelle valeur avant de l'appliquer.\n   * @template T - Le type de la valeur de l'état.\n   * @param {StorageKeys<RECORD>} key - La clé utilisée pour accéder à un enregistrement spécifique en stockage.\n   * @returns {State<T>[\"mutator\"]} La fonction `mutator` associée à la clé spécifiée de l'objet `State`.\n   * @example\n   * ```typescript\n   * const storage = _storage.init({ count: 0 });\n   * const [count, setCount] = storage.get(\"count\");\n   * setCount(10); // met à jour la valeur si la validation réussit\n   * ```\n   */\n  get<T = any>(key: StorageKeys<RECORD>): State<T>[\"mutator\"] {\n    if (!this._validator) return super.get(key)!;\n\n    else {\n      let [state, setter] = super.get(key)!;\n      return [state, (newValue: T) => {\n        let previousValue = state.value;\n        let result = this._validator(key as string, previousValue, newValue);\n\n        if (result instanceof Promise) {\n          result\n            .then(() => setter(newValue as any))\n            .catch((error) => console.error(error));\n        } else if (result == true) {\n          setter(newValue as any);\n        }\n      }];\n    }\n  }\n}\n\n/** \n * Type `Storage` qui étend partiellement `_storage`.\n * @template RECORD - Le type de l'enregistrement.\n */\nexport type Storage<RECORD extends Record<string, any>> = _storage<RECORD> & { [key in StorageKeys<RECORD>]: StorageValues<RECORD> };\n","import $hgUW1$getrandomvalues from \"get-random-values\";\n\n// ===============================================\n// https://www.npmjs.com/package/get-random-values\n// ===============================================\n\nclass $149c1bd638913645$export$74e446f6456d826d extends String {\n    /**\n   * Obtient l'identifiant de composant en extrayant la première partie de l'UUID.\n   * @returns L'identifiant de composant.\n   * @example\n   * ```typescript\n   *  const uuid = new _HUID('123456789012-1234-5678-90ab-abcdefabcdef');\n   *  console.log(uuid.componentId); // '123456789012'\n   * ```\n  */ get componentId() {\n        return this.split(\"-\")[0];\n    }\n    /**\n   * Obtient la première section de l'UUID après division par '-'.\n   * @returns La première section de l'UUID.\n   * @example\n   * ```typescript\n   *  const uuid = new _HUID('123456789012-1234-5678-90ab-abcdefabcdef');\n   *  console.log(uuid.section1); // '1234'\n   * ```\n  */ get section1() {\n        return this.split(\"-\")[1];\n    }\n    /**\n   * Obtient la deuxième section de l'UUID après division par '-'.\n   * @returns La deuxième section de l'UUID.\n   * @example\n   * ```typescipt\n   *  const uuid = new _HUID('123456789012-1234-5678-90ab-abcdefabcdef');\n   *  console.log(uuid.section2); // '5678'\n   * ```\n  */ get section2() {\n        return this.split(\"-\")[2];\n    }\n    /**\n   * Obtient la troisième section de l'UUID après division par '-'.\n   * @returns La troisième section de l'UUID.\n   * @example\n   * ```typescript\n   *  const uuid = new _HUID('123456789012-1234-5678-90ab-abcdefabcdef');\n   *  console.log(uuid.section3); // '90ab'\n   * ```\n  */ get section3() {\n        return this.split(\"-\")[3];\n    }\n    /**\n   * Obtient l'identifiant de collection en extrayant la cinquième partie de l'UUID.\n   * @returns L'identifiant de collection.\n   * @example\n   * ```typescript\n   *  const uuid = new _HUID('123456789012-1234-5678-90ab-abcdefabcdef');\n   *  console.log(uuid.collectionId); // 'abcdefabcdef'\n   * ```\n  */ get collectionId() {\n        return this.split(\"-\")[4];\n    }\n    /**\n   * Obtient l'identifiant parent en concaténant les sections 1, 2 et 3.\n   * @returns L'identifiant parent.\n   * @example\n   * ```typescript\n   *  const uuid = new _HUID('123456789012-1234-5678-90ab-abcdefabcdef');\n   *  console.log(uuid.parentId); // '1234567890ab'\n   * ```\n  */ get parentId() {\n        return [\n            this.section1,\n            this.section2,\n            this.section3\n        ].join(\"\");\n    }\n    /**\n   * Étend l'UUID hiérarchique avec des options personnalisées.\n   * @param {HierarchicalUUIDOptions} [options] - Options pour personnaliser l'UUID.\n   * @returns Un nouvel UUID hiérarchique (_HUID).\n   * @example\n   * ```typescript\n   *  const uuid = new _HUID('123456789012-1234-5678-90ab-abcdefabcdef');\n   *  const extendedUUID = uuid.extend({ parentId: '098765432109', collectionId: 'abcdefabcdef' });\n   *  console.log(extendedUUID); // Un nouvel _HUID avec les sections mises à jour.\n   * ```\n  */ extend(options) {\n        return $149c1bd638913645$export$31b40729666a4ae0.hv1({\n            parentId: this.componentId,\n            collectionId: this.collectionId\n        });\n    }\n}\nclass $149c1bd638913645$export$31b40729666a4ae0 {\n    /**\n   * Obtient une valeur par défaut pour l'identifiant de composant.\n   * @returns '000000000000' en tant que ComponentId.\n  */ static get componentId() {\n        return \"000000000000\";\n    }\n    /**\n   * Obtient une valeur par défaut pour la première section de l'UUID.\n   * @returns '0000' en tant que Segment.\n  */ static get segment1() {\n        return \"0000\";\n    }\n    /**\n   * Obtient une valeur par défaut pour la deuxième section de l'UUID.\n   * @returns '0000' en tant que Segment.\n  */ static get segment2() {\n        return \"0000\";\n    }\n    /**\n   * Obtient une valeur par défaut pour la troisième section de l'UUID.\n   * @returns '0000' en tant que Segment.\n  */ static get segment3() {\n        return \"0000\";\n    }\n    /**\n   * Obtient une valeur par défaut pour l'identifiant de collection.\n   * @returns '000000000000' en tant que CollectionId.\n  */ static get collectionId() {\n        return \"000000000000\";\n    }\n    /**\n   * Obtient un UUID NIL (null) par défaut.\n   * @returns L'UUID NIL sous forme de chaîne.\n  */ static get NIL() {\n        return new $149c1bd638913645$export$74e446f6456d826d(`${$149c1bd638913645$export$31b40729666a4ae0.componentId}-${$149c1bd638913645$export$31b40729666a4ae0.segment1}-${$149c1bd638913645$export$31b40729666a4ae0.segment2}-${$149c1bd638913645$export$31b40729666a4ae0.segment3}-${$149c1bd638913645$export$31b40729666a4ae0.collectionId}`);\n    }\n    /**\n   * Encode une chaîne de longueur fixe en remplaçant certains caractères par des valeurs hexadécimales aléatoires.\n   * @param chaine - Une chaîne de longueur fixe.\n   * @returns Une chaîne de longueur fixe avec des valeurs hexadécimales aléatoires.\n   * @example\n   * ```typescript\n   *  const encoded = uuid.encode('123456789012');\n   *  console.log(encoded); // '1a2b3c4d5e6f'\n   * ```\n  */ static encode(chaine) {\n        return chaine.replace(/[018]/g, (c)=>{\n            return (c ^ (0, $hgUW1$getrandomvalues)(new Uint8Array(1))[0] & 15 >> c / 4).toString(16);\n        });\n    }\n    /**\n   * Génère un UUID de version 4 en utilisant des valeurs aléatoires.\n   * @returns Un UUID de version 4 sous forme de chaîne.\n   * @example\n   * ```typescript\n   *  const uuidV4 = uuid.v4();\n   *  console.log(uuidV4); // Un UUID de version 4.\n   * ```\n  */ static v4() {\n        return $149c1bd638913645$export$31b40729666a4ae0.NIL.replace(/[018]/g, (c)=>{\n            return (c ^ (0, $hgUW1$getrandomvalues)(new Uint8Array(1))[0] & 15 >> c / 4).toString(16);\n        });\n    }\n    /**\n   * Génère un UUID hiérarchique en fonction des options fournies.\n   * @param {HierarchicalUUIDOptions} [options] - Options pour personnaliser l'UUID.\n   * @returns Un nouvel UUID hiérarchique (_HUID).\n   * @example\n   * ```typescript\n   *  const hierarchicalUUID = uuid.hv1({ parentId: '123456789012', collectionId: 'abcdefabcdef' });\n   *  console.log(hierarchicalUUID); // Un nouvel UUID hiérarchique (_HUID).\n   * ```\n  */ static hv1(options) {\n        if (!options) options = {\n            parentId: null,\n            collectionId: null\n        };\n        let componentId = $149c1bd638913645$export$31b40729666a4ae0.encode($149c1bd638913645$export$31b40729666a4ae0.componentId);\n        let segment1 = $149c1bd638913645$export$31b40729666a4ae0.encode($149c1bd638913645$export$31b40729666a4ae0.segment1);\n        let segment2 = $149c1bd638913645$export$31b40729666a4ae0.encode($149c1bd638913645$export$31b40729666a4ae0.segment2);\n        let segment3 = $149c1bd638913645$export$31b40729666a4ae0.encode($149c1bd638913645$export$31b40729666a4ae0.segment3);\n        let collectionId = $149c1bd638913645$export$31b40729666a4ae0.encode($149c1bd638913645$export$31b40729666a4ae0.collectionId);\n        if (options.parentId && options.parentId.length == 12) {\n            segment1 = options.parentId.slice(0, 4);\n            segment2 = options.parentId.slice(4, 8);\n            segment3 = options.parentId.slice(8, 12);\n        } else console.error(\"parentId.length exeded 12 char length.\");\n        if (options.collectionId) collectionId = options.collectionId;\n        return new $149c1bd638913645$export$74e446f6456d826d(`${componentId}-${segment1}-${segment2}-${segment3}-${collectionId}`);\n    }\n}\n\n\nexport {$149c1bd638913645$export$74e446f6456d826d as _HUID, $149c1bd638913645$export$31b40729666a4ae0 as uuid};\n//# sourceMappingURL=module.js.map\n","// ===============================================\n// https://www.npmjs.com/package/get-random-values\n// ===============================================\nimport { default as getRandomValues } from 'get-random-values';\n\nexport type FixedLengthString<Length extends number> = string & { __fixedLength: Length };\nexport type ComponentId = FixedLengthString<12>;\nexport type Segment = FixedLengthString<4>;\nexport type ParentSegementId = `${Segment}-${Segment}-${Segment}`;\nexport type CollectionId = FixedLengthString<12>;\nexport type HUID = `${ComponentId}-${ParentSegementId}-${CollectionId}`;\n\n/** \n * Interface pour les options de l'UUID hiérarchique.\n */\nexport interface HierarchicalUUIDOptions {\n  /** \n   * Identifiant parent (optionnel). \n   */\n  parentId?: FixedLengthString<12>;\n\n  /**\n   * Identifiant de collection (optionnel).\n   */\n  collectionId?: FixedLengthString<12>;\n}\n\n/** \n * Classe _HUID pour manipuler les UUID hiérarchiques.\n*/\nexport class _HUID extends String{\n\n  /**\n   * Obtient l'identifiant de composant en extrayant la première partie de l'UUID.\n   * @returns L'identifiant de composant.\n   * @example\n   * ```typescript\n   *  const uuid = new _HUID('123456789012-1234-5678-90ab-abcdefabcdef');\n   *  console.log(uuid.componentId); // '123456789012'\n   * ```\n  */\n  get componentId(){ return this.split('-')[0] as ComponentId; }\n\n  /**\n   * Obtient la première section de l'UUID après division par '-'.\n   * @returns La première section de l'UUID.\n   * @example\n   * ```typescript\n   *  const uuid = new _HUID('123456789012-1234-5678-90ab-abcdefabcdef');\n   *  console.log(uuid.section1); // '1234'\n   * ```\n  */\n  get section1(){ return this.split('-')[1] as Segment; }\n\n  /**\n   * Obtient la deuxième section de l'UUID après division par '-'.\n   * @returns La deuxième section de l'UUID.\n   * @example\n   * ```typescipt\n   *  const uuid = new _HUID('123456789012-1234-5678-90ab-abcdefabcdef');\n   *  console.log(uuid.section2); // '5678'\n   * ```\n  */\n  get section2(){ return this.split('-')[2] as Segment; }\n\n  /**\n   * Obtient la troisième section de l'UUID après division par '-'.\n   * @returns La troisième section de l'UUID.\n   * @example\n   * ```typescript\n   *  const uuid = new _HUID('123456789012-1234-5678-90ab-abcdefabcdef');\n   *  console.log(uuid.section3); // '90ab'\n   * ```\n  */\n  get section3(){ return this.split('-')[3] as Segment; }\n\n  /**\n   * Obtient l'identifiant de collection en extrayant la cinquième partie de l'UUID.\n   * @returns L'identifiant de collection.\n   * @example\n   * ```typescript\n   *  const uuid = new _HUID('123456789012-1234-5678-90ab-abcdefabcdef');\n   *  console.log(uuid.collectionId); // 'abcdefabcdef'\n   * ```\n  */\n  get collectionId(){ return this.split('-')[4] as CollectionId; }\n\n  /**\n   * Obtient l'identifiant parent en concaténant les sections 1, 2 et 3.\n   * @returns L'identifiant parent.\n   * @example\n   * ```typescript\n   *  const uuid = new _HUID('123456789012-1234-5678-90ab-abcdefabcdef');\n   *  console.log(uuid.parentId); // '1234567890ab'\n   * ```\n  */\n  get parentId(){ return [this.section1,this.section2,this.section3].join('') as FixedLengthString<12>; }\n\n  /**\n   * Étend l'UUID hiérarchique avec des options personnalisées.\n   * @param {HierarchicalUUIDOptions} [options] - Options pour personnaliser l'UUID.\n   * @returns Un nouvel UUID hiérarchique (_HUID).\n   * @example\n   * ```typescript\n   *  const uuid = new _HUID('123456789012-1234-5678-90ab-abcdefabcdef');\n   *  const extendedUUID = uuid.extend({ parentId: '098765432109', collectionId: 'abcdefabcdef' });\n   *  console.log(extendedUUID); // Un nouvel _HUID avec les sections mises à jour.\n   * ```\n  */\n  extend(options?:HierarchicalUUIDOptions){\n\n    return uuid.hv1({\n      parentId : this.componentId,\n      collectionId : this.collectionId,\n    })\n\n  }\n\n}\n\n/** \n * Classe pour générer des UUID.\n*/\nexport class uuid{\n\n  /**\n   * Obtient une valeur par défaut pour l'identifiant de composant.\n   * @returns '000000000000' en tant que ComponentId.\n  */\n  static get componentId(){ return '000000000000' as ComponentId; }\n\n  /**\n   * Obtient une valeur par défaut pour la première section de l'UUID.\n   * @returns '0000' en tant que Segment.\n  */\n  static get segment1(){ return '0000' as Segment; }\n\n  /**\n   * Obtient une valeur par défaut pour la deuxième section de l'UUID.\n   * @returns '0000' en tant que Segment.\n  */\n  static get segment2(){ return '0000' as Segment; }\n\n  /**\n   * Obtient une valeur par défaut pour la troisième section de l'UUID.\n   * @returns '0000' en tant que Segment.\n  */\n  static get segment3(){ return '0000' as Segment; }\n\n  /**\n   * Obtient une valeur par défaut pour l'identifiant de collection.\n   * @returns '000000000000' en tant que CollectionId.\n  */\n  static get collectionId(){ return '000000000000' as CollectionId; }\n\n  /**\n   * Obtient un UUID NIL (null) par défaut.\n   * @returns L'UUID NIL sous forme de chaîne.\n  */\n  static get NIL(){ return new _HUID(`${uuid.componentId}-${uuid.segment1}-${uuid.segment2}-${uuid.segment3}-${uuid.collectionId}`); }\n\n  /**\n   * Encode une chaîne de longueur fixe en remplaçant certains caractères par des valeurs hexadécimales aléatoires.\n   * @param chaine - Une chaîne de longueur fixe.\n   * @returns Une chaîne de longueur fixe avec des valeurs hexadécimales aléatoires.\n   * @example\n   * ```typescript\n   *  const encoded = uuid.encode('123456789012');\n   *  console.log(encoded); // '1a2b3c4d5e6f'\n   * ```\n  */\n  static encode< N extends number = 4 | 12 >( chaine:FixedLengthString<N> ){\n    return chaine.replace(/[018]/g, (c:any) =>\n    {\n      return (c ^ getRandomValues(new Uint8Array(1))[0] & 15 >> c / 4).toString(16)\n    }) as FixedLengthString<N> | FixedLengthString<N>\n  }\n\n  /**\n   * Génère un UUID de version 4 en utilisant des valeurs aléatoires.\n   * @returns Un UUID de version 4 sous forme de chaîne.\n   * @example\n   * ```typescript\n   *  const uuidV4 = uuid.v4();\n   *  console.log(uuidV4); // Un UUID de version 4.\n   * ```\n  */\n  static v4(  ) {\n\n    return uuid.NIL.replace(/[018]/g, (c:any) =>\n      {\n        return (c ^ getRandomValues(new Uint8Array(1))[0] & 15 >> c / 4).toString(16)\n      }\n    ) as `${string}-${string}-${string}-${string}-${string}`;\n\n  }\n\n  /**\n   * Génère un UUID hiérarchique en fonction des options fournies.\n   * @param {HierarchicalUUIDOptions} [options] - Options pour personnaliser l'UUID.\n   * @returns Un nouvel UUID hiérarchique (_HUID).\n   * @example\n   * ```typescript\n   *  const hierarchicalUUID = uuid.hv1({ parentId: '123456789012', collectionId: 'abcdefabcdef' });\n   *  console.log(hierarchicalUUID); // Un nouvel UUID hiérarchique (_HUID).\n   * ```\n  */\n  static hv1( options?:HierarchicalUUIDOptions ) {\n\n    if(!options)options = {\n      parentId : null,\n      collectionId : null\n    };\n\n    let componentId = uuid.encode( uuid.componentId );\n    let segment1 = uuid.encode( uuid.segment1 );\n    let segment2 = uuid.encode( uuid.segment2 );\n    let segment3 = uuid.encode( uuid.segment3 );\n    let collectionId = uuid.encode( uuid.collectionId );\n\n    if(options.parentId && options.parentId.length == 12){\n      segment1 = options.parentId.slice(0,4) as FixedLengthString<4>;\n      segment2 = options.parentId.slice(4,8) as FixedLengthString<4>;\n      segment3 = options.parentId.slice(8,12) as FixedLengthString<4>;\n    }\n    else console.error( 'parentId.length exeded 12 char length.' )\n\n    if(options.collectionId)collectionId = options.collectionId;\n\n    return new _HUID(`${ componentId }-${ segment1 }-${ segment2 }-${ segment3 }-${ collectionId }`);\n\n  }\n\n}","/* eslint-disable no-var, operator-linebreak */\n\nvar window = require('global/window');\nvar nodeCrypto = require('crypto');\n\n/**\n * @template {ArrayBufferView | null} T\n * @param {T} buf\n * @returns {T}\n */\nfunction getRandomValues(buf) {\n  if (window.crypto && window.crypto.getRandomValues) {\n    return window.crypto.getRandomValues(buf);\n  }\n  if (typeof window.msCrypto === 'object' && typeof window.msCrypto.getRandomValues === 'function') {\n    return window.msCrypto.getRandomValues(buf);\n  }\n  if (nodeCrypto.randomBytes) {\n    if (!(buf instanceof Uint8Array)) {\n      throw new TypeError('expected Uint8Array');\n    }\n    if (buf.length > 65536) {\n      var e = new Error();\n      // @ts-expect-error\n      e.code = 22;\n      e.message = 'Failed to execute \\'getRandomValues\\' on \\'Crypto\\': The ' +\n        'ArrayBufferView\\'s byte length (' + buf.length + ') exceeds the ' +\n        'number of bytes of entropy available via this API (65536).';\n      e.name = 'QuotaExceededError';\n      throw e;\n    }\n    var bytes = nodeCrypto.randomBytes(buf.length);\n    buf.set(bytes);\n    return buf;\n  }\n  else {\n    throw new Error('No secure random number generator available.');\n  }\n}\n\nmodule.exports = getRandomValues;\n","var win;\n\nif (typeof window !== \"undefined\") {\n    win = window;\n} else if (typeof global !== \"undefined\") {\n    win = global;\n} else if (typeof self !== \"undefined\"){\n    win = self;\n} else {\n    win = {};\n}\n\nmodule.exports = win;\n","\"use strict\";","import { render , html , css } from '@lithium-framework/core';\nimport { NavigatorInformations } from '../navigator-informations';\n\nexport function HelloWorld(){\n\n  return html`<div>\n    <h1>Hello World !</h1>\n    ${NavigatorInformations()}\n  </div>`;\n\n}","import { html } from '@lithium-framework/core';\n\nexport function NavigatorInformations(){\n\n  return html`<div>\n    <h3>running on</h3>\n    <p>${navigator.userAgent}</p>\n  </div>`\n\n}"],"names":["$3b68c0e8977f93f3$var$kernelMode","$3b68c0e8977f93f3$export$f2080b9a9a32b8d3","$d0c4de69aef7cbef$var$DefaultStyleStrategy","$900ecc1621c31c17$var$elementControllerStrategy","$4483ebefeee2609f$var$win","$parcel$global","globalThis","$parcel$interopDefault","a","__esModule","default","$3b68c0e8977f93f3$var$kernelAttr","document","currentScript","getAttribute","scripts","getElementsByTagName","length","e","Object","freeze","updateQueue","observable","contextEvent","elementRegistry","postfix","Math","random","toString","substring","$3b68c0e8977f93f3$export$f6e2535fb5126e54","object","$3b68c0e8977f93f3$export$844ec244b1367d54","$3b68c0e8977f93f3$export$8793edee2d425525","self","window","result","Function","$3cd519730db4770f$var$propConfig","configurable","enumerable","writable","FAST","Reflect","defineProperty","assign","value","create","$3cd519730db4770f$export$360e186c37756536","getById","storage","id","initialize","found","error","warn","code","Error","addMessages","$3cd519730db4770f$export$d3ae4127996a91af","$3cd519730db4770f$export$a31396a98752ddb5","typeToDefinition","Map","register","definition","has","type","set","getByType","key","get","getForInstance","constructor","$3cd519730db4770f$export$df500aa24c905daf","metadataLookup","WeakMap","target","metadata","currentTarget","getPrototypeOf","slice","$3cd519730db4770f$export$997c5e5ecebc1b61","prototype","toJSON","$d0b09140ab7069d2$export$26ef613a0934aa5f","tasks","pendingErrors","rAF","requestAnimationFrame","updateAsync","throwFirstError","shift","process","index","tryRunTask","task","call","push","setTimeout","scan","newLength","enqueue","callable","next","Promise","setMode","isAsync","$0d21722c4bcdf3f6$export$f35d03caf9a2ecdf","subject","initialSubscriber","sub1","sub2","spillover","subscriber","indexOf","subscribe","unsubscribe","splice","notify","args","handleChange","i","ii","$0d21722c4bcdf3f6$export$af6e57f0938b1389","subscribers","subjectSubscribers","propertyName","_a","_b","propertyToWatch","propertyToUnwatch","$11afc8bee2de7865$export$9a9eae009eb8780f","unknown","coupled","$11afc8bee2de7865$export$77cea355fa80b5f4","watcher","queueUpdate","volatileRegex","notifierLookup","createArrayObserver","array","getNotifier","source","$fastController","Array","isArray","getAccessors","DefaultObservableAccessor","name","field","callback","getValue","watch","setValue","newValue","oldValue","ExpressionNotifierImplementation","expression","isVolatileBinding","needsRefresh","needsQueue","first","last","propertySource","notifier","bind","controller","observe","context","isBound","requiresUnbind","onUnbind","sourceLifetime","unbind","dispose","previousWatcher","disconnect","current","prev","prevValue","records","setArrayObserverFactory","factory","track","trackVolatile","nameOrAccessor","binding","test","$11afc8bee2de7865$export$e338fff42eed603a","descriptor","apply","$11afc8bee2de7865$var$contextEvent","event","$11afc8bee2de7865$export$f7c638676c8af91d","getEvent","eventDetail","detail","eventTarget","setEvent","$a73d76e1ed9a350a$export$b0076a1a9e24da9","none","attribute","booleanAttribute","property","content","tokenList","$a73d76e1ed9a350a$var$createHTML","html","$a73d76e1ed9a350a$var$fastTrustedType","trustedTypes","createPolicy","createHTML","$a73d76e1ed9a350a$var$defaultPolicy","protect","tagName","aspect","aspectName","sink","$a73d76e1ed9a350a$var$fastPolicy","$a73d76e1ed9a350a$export$cb0933279c36a66b","policy","setPolicy","setAttribute","element","attributeName","removeAttribute","setBooleanAttribute","$d78e6668348adb99$var$booleanMode","$d78e6668348adb99$var$reflectMode","$d78e6668348adb99$export$8b80b92e472f3c0a","locate","$d78e6668348adb99$export$2aee1c8d7bab360b","toView","fromView","$d78e6668348adb99$export$722ab06c0d846d74","Owner","toLowerCase","mode","converter","guards","Set","fieldName","callbackName","hasCallback","tryReflectToAttribute","onAttributeChangedCallback","add","delete","latestValue","collect","attributeLists","attributes","list","j","jj","config","$d78e6668348adb99$export$7aabe8b3a840d2fd","configOrTarget","prop","decorator","$target","$prop","arguments","$90d39a98aede8ee9$export$f4f50f872cf9bd86","evaluate","isVolatile","$b65473616eab8774$var$marker","$b65473616eab8774$var$interpolationStart","$b65473616eab8774$var$interpolationEnd","$b65473616eab8774$var$interpolationEndLength","$b65473616eab8774$var$id","$b65473616eab8774$export$79a1817568da084b","$b65473616eab8774$export$b925b7ba50a6200f","interpolation","comment","$b65473616eab8774$export$7acfa6ed01010e37","parse","factories","parts","split","literal","factoryId","$cc34801bb3d5b869$var$registry","$cc34801bb3d5b869$export$3b3d5ef3c555d599","define","options","assignAspect","directive","aspectType","sourceAspect","targetAspect","$cc34801bb3d5b869$export$683728dd3b823b8d","createBehavior","$cd46e5ddbf9444c5$var$selectElements","nodeType","$cd46e5ddbf9444c5$export$7a5d735b2ab6389d","selector","matches","$cd46e5ddbf9444c5$export$755ec928f38200a4","_id","_controllerProperty","targets","targetNodeId","updateTarget","computeNodes","getSource","nodes","getNodes","filter","$355868edc94eec3f$export$8e0d942365449f1b","observerProperty","Symbol","handleEvent","mutations","observer","childList","MutationObserver","from","querySelectorAll","childNodes","$355868edc94eec3f$export$bacb5cc5a11aef16","propertyOrOptions","$e5081770006036c8$var$OneWayBinding","createObserver","$e5081770006036c8$export$d013c21e6c7cf47e","$edde11c6a7f3b16f$var$registry","$edde11c6a7f3b16f$export$c6882ecf5b9a1390","$d0c4de69aef7cbef$export$5cb32fda821782e2","styles","WeakSet","_strategy","behaviors","map","x","reduce","curr","concat","strategy","withStrategy","addStylesTo","removeStylesFrom","isAttachedTo","withBehaviors","Strategy","$d0c4de69aef7cbef$var$reduceStyles","setDefaultStrategy","normalize","$8a2daa2cdb630d6b$var$handleChange","style","setProperty","supportsAdoptedStyleSheets","adoptedStyleSheets","CSSStyleSheet","$8a2daa2cdb630d6b$export$a4f733160e5c8f6c","dataBinding","createCSS","addedCallback","$cssBindings","attr","forEach","v","k","connectedCallback","removedCallback","_","$980f24b602662b21$var$marker","$980f24b602662b21$var$varId","$980f24b602662b21$var$nextCSSVariable","$980f24b602662b21$var$collectStyles","strings","values","cssString","behavior","trim","$980f24b602662b21$export$dbf350e5966cf602","elementStyles","$980f24b602662b21$var$CSSPartial","css","stylesheets","accumulated","addStyles","removeStyles","partial","$86847ab2171a29a7$var$defaultShadowOptions","$86847ab2171a29a7$var$defaultElementOptions","$86847ab2171a29a7$var$fastElementBaseTypes","$86847ab2171a29a7$var$fastElementRegistry","$86847ab2171a29a7$export$dbb8b6d358bc70ba","nameOrConfig","platformDefined","template","registry","customElements","proto","observedAttributes","propertyLookup","attributeLookup","shadowOptions","elementOptions","isDefined","compose","nameOrDef","registerBaseType","$900ecc1621c31c17$var$defaultEventOptions","bubbles","composed","cancelable","$900ecc1621c31c17$var$isConnectedPropertyName","$900ecc1621c31c17$var$shadowRoots","$900ecc1621c31c17$var$getShadowRoot","shadowRoot","$900ecc1621c31c17$export$c72c0f72b4b26c7e","boundObservables","needsInitialization","hasExistingShadowRoot","_template","stage","guardBehaviorConnection","_mainStyles","view","attachShadow","accessors","isConnected","resolveTemplate","renderTemplate","mainStyles","resolveStyles","addBehavior","targetBehaviors","count","removeBehavior","force","disconnectedCallback","HTMLElement","append","sourceBehaviors","removeChild","connect","propertyNames","keys","attrDef","emit","dispatchEvent","CustomEvent","host","child","firstChild","render","forCustomElement","setStrategy","$900ecc1621c31c17$var$normalizeStyleTarget","getRootNode","$900ecc1621c31c17$export$ff9a4b215f625f9a","styleSheetCache","sheets","sheet","replaceSync","$900ecc1621c31c17$var$addAdoptedStyleSheets","$900ecc1621c31c17$var$removeAdoptedStyleSheets","$900ecc1621c31c17$var$id","$900ecc1621c31c17$var$nextStyleId","$900ecc1621c31c17$var$usableStyleTarget","body","styleClass","createElement","innerHTML","className","$718243fe498ffbb9$var$createFASTElement","BaseType","$emit","attributeChangedCallback","$718243fe498ffbb9$var$define","$718243fe498ffbb9$export$904ba5187827962e","$718243fe498ffbb9$export$da64fc29f17f9d0e","$1cb9f88fe9a2a07c$var$OneTimeBinding","$3302dfbf2f7c135c$var$sinkLookup","t","textContent","$fastView","$fastTemplate","isComposed","remove","needsBindOnly","insertBefore","lookup","state","cv","classVersions","version","names","currentName","$3302dfbf2f7c135c$export$c590b280af2e6950","data","targetTagName","addEventListener","preventDefault","$b2fda19b3cbf824f$var$removeNodeSequence","firstNode","lastNode","parent","parentNode","nextSibling","aspected","$b2fda19b3cbf824f$export$1b0b7079c4551d79","fragment","unbindables","lastChild","isEven","isOdd","isFirst","isInMiddle","isLast","appendTo","node","appendChild","hasChildNodes","end","previousSibling","evaluateUnbindables","disposeContiguousBatch","views","$3fc19233194093b1$var$targetIdFrom","parentId","nodeIndex","$3fc19233194093b1$var$descriptorCache","$3fc19233194093b1$var$next","$3fc19233194093b1$var$tryWarn","startsWith","$3fc19233194093b1$var$warningHost","Proxy","$3fc19233194093b1$var$CompilationContext","directives","nodeIds","descriptors","addFactory","nodeId","targetIndex","addTargetDescriptor","targetId","lastIndexOf","grandparentId","childIndex","parseInt","createView","hostBindingTarget","cloneNode","r","h","$3fc19233194093b1$var$compileAttributes","includeBasicValues","attrValue","parseResult","$3fc19233194093b1$export$3a6335acfcf707c9","aggregate","removeAttributeNode","$3fc19233194093b1$var$templateTag","compile","fec","firstElementChild","createComment","adoptNode","$3fc19233194093b1$var$compileChildren","childNode","$3fc19233194093b1$var$compileNode","$3fc19233194093b1$var$compileContent","currentNode","currentPart","createTextNode","bindingPolicy","partCount","finalParts","scope","output","$13859427fd7d4158$var$lastAttributeNameRegex","$13859427fd7d4158$var$noFactories","$13859427fd7d4158$export$f5439a5bc3830f91","empty","$13859427fd7d4158$export$98f7e629c251afe6","inline","withPolicy","currentString","currentValue","staticValue","$13859427fd7d4158$var$createHTML","prevString","match","exec","$13859427fd7d4158$export$c0bb0b647f701bb5","raw","$f6b72f64aec7b7fd$export$ceb3ee475cfd64d1","removed","addedCount","adjustTo","arrayLength","$f6b72f64aec7b7fd$export$2bfb3010befe266c","reset","optimized","$f6b72f64aec7b7fd$var$reset","$f6b72f64aec7b7fd$var$resetSplices","$f6b72f64aec7b7fd$var$defaultSpliceStrategy","support","previous","changes","$f6b72f64aec7b7fd$var$project","splices","initialSplices","$f6b72f64aec7b7fd$var$merge","inserted","insertionOffset","start1","end1","start2","end2","intersectCount","deleteCount","currentRemoved","prepend","offset","$f6b72f64aec7b7fd$var$calc","currentStart","currentEnd","old","oldStart","oldEnd","prefixCount","suffixCount","minLength","min","$f6b72f64aec7b7fd$var$sharedPrefix","searchLength","$f6b72f64aec7b7fd$var$sharedSuffix","index1","index2","ops","$f6b72f64aec7b7fd$var$spliceOperationsFromEditDistances","distances","edits","northWest","west","north","reverse","$f6b72f64aec7b7fd$var$calcEditDistances","rowCount","columnCount","oldIndex","pop","notEmpty","addSplice","sort","unshift","$f6b72f64aec7b7fd$var$setNonEnumerable","$f6b72f64aec7b7fd$var$DefaultArrayObserver","oldCollection","_lengthObserver","flush","lengthObserver","$f6b72f64aec7b7fd$var$enabled","$f6b72f64aec7b7fd$export$ddffcc348cf2aba1","enable","collection","$fastPatch","method","o","$b5c42f5d900245a1$export$6cdc818096b8be3c","$0f5a316a6a8083aa$var$defaultRepeatOptions","positioning","recycle","$0f5a316a6a8083aa$var$bindWithoutPositioning","items","parentContext","$0f5a316a6a8083aa$var$bindWithPositioning","$0f5a316a6a8083aa$export$9320ef0c85148109","itemsObserver","bindView","itemsBindingObserver","templateBindingObserver","templateBinding","location","observeItems","refreshAllViews","unbindAllViews","updateViews","oldObserver","newObserver","hasNewObserver","leftoverViews","leftoverIndex","availableViews","removeIndex","addIndex","removedViews","totalAvailableViews","neighbor","viewsLength","templateChanged","itemsLength","$0f5a316a6a8083aa$export$3e91f6eae87714ce","$0f5a316a6a8083aa$export$76d90c956114f2c2","$f0500467d56d4fb6$var$slotEvent","$f0500467d56d4fb6$export$321a4334e9cbbbe2","removeEventListener","assignedNodes","$f0500467d56d4fb6$export$e2355138873b532d","$d89edc18265c27a8$var$noTemplate","$d89edc18265c27a8$var$normalizeBinding","undefined","$d89edc18265c27a8$export$a55877ca9db47377","condition","templateOrTemplateBinding","elseTemplateOrTemplateBinding","elseBinding","$31e6c2aa607ee0bb$export$7254cc27399e90bd","_history","_value","_notifier","results","init","mutator","toPrimitive","$31e6c2aa607ee0bb$export$e6a0daad8304de","$b5c7b0ba95a33835$var$$89fec59bbef2bb37$export$98c71376181af907","validator","_validator","setter","previousValue","then","catch","console","$b5c7b0ba95a33835$export$d184a47a971dd4b9","stateValidator","receiver","$f6d0b2db2e882702$exports","$4483ebefeee2609f$exports","$eca075ad100d834d$exports","buf","crypto","getRandomValues","msCrypto","randomBytes","Uint8Array","TypeError","message","bytes","$62068595a8a6c46f$export$74e446f6456d826d","String","componentId","section1","section2","section3","collectionId","join","extend","$62068595a8a6c46f$export$31b40729666a4ae0","hv1","segment1","segment2","segment3","NIL","encode","chaine","replace","c","v4","$01b13827b3d331b3$var$$parcel$export","n","s","$01b13827b3d331b3$var$$parcel$exportWildcard","dest","hasOwnProperty","$01b13827b3d331b3$var$$ed2a677aa7485959$exports","$01b13827b3d331b3$export$6dad889f9b7e7685","$01b13827b3d331b3$export$b3890eb0ae9dca99","$01b13827b3d331b3$export$b176171395436676","initialObject","observabe","createProxy","$data","store","propKey","$01b13827b3d331b3$export$dcc5cf24d8fb3b41","$01b13827b3d331b3$var$$535bb7ac3b1a1d6d$exports","$01b13827b3d331b3$var$$b1b98f19caab25c2$exports","$01b13827b3d331b3$export$683a0e8baad8b9c3","$01b13827b3d331b3$var$$a1f8df21dd3b8ee9$exports","$01b13827b3d331b3$export$ca000e230c0caa3e","propertyKey","constructible","states","$states","$01b13827b3d331b3$var$$ed2a677aa7485959$var$_classPrivateFieldLooseBase","$01b13827b3d331b3$var$$ed2a677aa7485959$var$id","$01b13827b3d331b3$var$$ed2a677aa7485959$var$_state_keys","createState","includes","JSON","stringify","fromEntries","useState","log","createConsumable","container","$01b13827b3d331b3$var$$5193209399721411$exports","$01b13827b3d331b3$var$$21522158c10703ef$exports","$01b13827b3d331b3$export$ca3487b83ec6860a","$01b13827b3d331b3$export$5761d9f85430a54b","$01b13827b3d331b3$export$eaa89ade56b7c0c1","fn","parentElement","use","$01b13827b3d331b3$var$$f6651d38d609160e$exports","$01b13827b3d331b3$export$7d1e3a5e95ceca43","$01b13827b3d331b3$export$1ef8aea9a6de98d","$01b13827b3d331b3$export$eff4d24c3ff7876e","$01b13827b3d331b3$var$$c66c6ea353620255$exports","$01b13827b3d331b3$export$28205fa712822499","$01b13827b3d331b3$export$792c882b75ca2192","$01b13827b3d331b3$export$60241385465d0a34","_state","_callback","$01b13827b3d331b3$var$$6e530dd7df9f7fe5$exports","$01b13827b3d331b3$export$81053cd05d55c9d8","$01b13827b3d331b3$export$18211b6e76035cfa","$01b13827b3d331b3$export$1d567c320f4763bc","$01b13827b3d331b3$var$$15db1e855f042fe6$exports","$01b13827b3d331b3$export$f36d8f10294685f8","$01b13827b3d331b3$export$51c6edf8ee19b71a","$01b13827b3d331b3$export$a40009bd2c363351","loading","$01b13827b3d331b3$var$$fde9406d76ec24a9$exports","$01b13827b3d331b3$export$77cea355fa80b5f4","$01b13827b3d331b3$var$$c5a7ff2cef84a00c$exports","$01b13827b3d331b3$export$c0bb0b647f701bb5","$01b13827b3d331b3$export$7f8b9f308979d41d","navigator","userAgent","HelloWorld","global","HTMLElementTagNameMap","ViewTemplate","ObservableObject","_state_keys","_classPrivateFieldLooseKey","ComponentExecutionContext","Record","T","States","_classPrivateFieldLooseBase","ComponentContext","Observable","createObservableObject","Key","Value","DecoratorAttributeConfiguration","attrState","when","repeat","children","elements","slotted","HTMLDirective","HTMLBindingDirective","HTMLView","Binding","Subscriber","BindingDirective","ExpressionObserver","AsyncAppendBindig","AsyncAppendDirective","asyncAppend","StatelessAttachedAttributeDirective","IElementRef","Node","createRef","RefDirective","ref","State","StateBindig","StateDirective","Properties","StyleBindig","StyleDirective","UntilBindig","UntilDirective","until","createStorage","uuid","customElement","volatile","_html","HTMLTemplateTag","WebComponent","FASTElement","Notifier","Storage","StorageKeys","StorageValues","StateValidator","_storage","Partial","RECORD","FixedLengthString","__fixedLength","Length","ComponentId","Segment","ParentSegementId","CollectionId","HUID","HierarchicalUUIDOptions","_HUID","N","NavigatorInformations"],"version":3,"file":"index.5930ac23.js.map"}