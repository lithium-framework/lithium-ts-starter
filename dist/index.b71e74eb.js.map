{"mappings":"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","sources":["node_modules/@parcel/runtime-browser-hmr/lib/runtime-4c503020227742a8.js","src/index.ts","node_modules/@lithium-framework/core/dist/module.js","node_modules/@lithium-framework/core/dist/src/index.ts","node_modules/@lithium-framework/core/dist/src/dom/index.ts","node_modules/@lithium-framework/core/dist/src/utils/observable-object/index.ts","node_modules/@lithium-framework/core/dist/src/utils/observable-object/models.ts","node_modules/@lithium-framework/core/dist/src/decorators/index.ts","node_modules/@lithium-framework/core/dist/src/decorators/attributeState.ts","node_modules/@lithium-framework/core/dist/src/decorators/state.ts","node_modules/@lithium-framework/core/dist/src/directives/index.ts","node_modules/@lithium-framework/core/dist/src/directives/assyncAppend.ts","node_modules/@lithium-framework/core/dist/src/directives/ref.ts","node_modules/@lithium-framework/core/dist/src/directives/state.ts","node_modules/@lithium-framework/core/dist/src/directives/style.ts","node_modules/@lithium-framework/core/dist/src/directives/until.ts","node_modules/@lithium-framework/core/dist/src/utils/index.ts","node_modules/@lithium-framework/core/dist/src/webComponent/index.ts","node_modules/@lithium-framework/core/dist/src/webComponent/model.ts","node_modules/@microsoft/fast-element/dist/esm/index.js","node_modules/@microsoft/fast-element/dist/esm/platform.js","node_modules/@microsoft/fast-element/dist/esm/interfaces.js","node_modules/@parcel/transformer-js/src/esmodule-helpers.js","node_modules/@microsoft/fast-element/dist/esm/polyfills.js","node_modules/@microsoft/fast-element/dist/esm/dom.js","node_modules/@microsoft/fast-element/dist/esm/observation/observable.js","node_modules/@microsoft/fast-element/dist/esm/observation/update-queue.js","node_modules/@microsoft/fast-element/dist/esm/observation/notifier.js","node_modules/@microsoft/fast-element/dist/esm/observation/arrays.js","node_modules/@microsoft/fast-element/dist/esm/binding/binding.js","node_modules/@microsoft/fast-element/dist/esm/binding/one-way.js","node_modules/@microsoft/fast-element/dist/esm/binding/one-time.js","node_modules/@microsoft/fast-element/dist/esm/binding/normalize.js","node_modules/@microsoft/fast-element/dist/esm/styles/element-styles.js","node_modules/@microsoft/fast-element/dist/esm/styles/css.js","node_modules/@microsoft/fast-element/dist/esm/styles/css-directive.js","node_modules/@microsoft/fast-element/dist/esm/styles/css-binding-directive.js","node_modules/@microsoft/fast-element/dist/esm/styles/host.js","node_modules/@microsoft/fast-element/dist/esm/styles/style-strategy.js","node_modules/@microsoft/fast-element/dist/esm/templating/template.js","node_modules/@microsoft/fast-element/dist/esm/templating/html-binding-directive.js","node_modules/@microsoft/fast-element/dist/esm/templating/html-directive.js","node_modules/@microsoft/fast-element/dist/esm/templating/markup.js","node_modules/@microsoft/fast-element/dist/esm/templating/compiler.js","node_modules/@microsoft/fast-element/dist/esm/templating/view.js","node_modules/@microsoft/fast-element/dist/esm/templating/when.js","node_modules/@microsoft/fast-element/dist/esm/templating/repeat.js","node_modules/@microsoft/fast-element/dist/esm/templating/slotted.js","node_modules/@microsoft/fast-element/dist/esm/templating/node-observation.js","node_modules/@microsoft/fast-element/dist/esm/templating/children.js","node_modules/@microsoft/fast-element/dist/esm/components/fast-element.js","node_modules/@microsoft/fast-element/dist/esm/components/element-controller.js","node_modules/@microsoft/fast-element/dist/esm/components/fast-definitions.js","node_modules/@microsoft/fast-element/dist/esm/components/attributes.js","node_modules/@lithium-framework/state/dist/module.js","node_modules/@lithium-framework/state/dist/src/index.ts","node_modules/@lithium-framework/state/dist/src/models/state.ts","node_modules/@lithium-framework/state/dist/src/createState.ts","node_modules/@lithium-framework/context/dist/module.js","node_modules/@lithium-framework/context/dist/src/index.ts","node_modules/@lithium-framework/context/dist/src/create-storage.ts","node_modules/@lithium-framework/context/dist/src/models/storage.ts","node_modules/@lithium-framework/huid/dist/module.js","node_modules/@lithium-framework/huid/dist/src/index.ts","node_modules/get-random-values/index.js","node_modules/global/window.js","node_modules/@parcel/node-resolver-core/lib/_empty.js","src/components/hello-world/index.ts","src/components/navigator-informations/index.ts"],"sourcesContent":["var HMR_HOST = null;var HMR_PORT = null;var HMR_SECURE = false;var HMR_ENV_HASH = \"d6ea1d42532a7575\";var HMR_USE_SSE = false;module.bundle.HMR_BUNDLE_ID = \"5c1b77e3b71e74eb\";\"use strict\";\n\n/* global HMR_HOST, HMR_PORT, HMR_ENV_HASH, HMR_SECURE, HMR_USE_SSE, chrome, browser, __parcel__import__, __parcel__importScripts__, ServiceWorkerGlobalScope */\n/*::\nimport type {\n  HMRAsset,\n  HMRMessage,\n} from '@parcel/reporter-dev-server/src/HMRServer.js';\ninterface ParcelRequire {\n  (string): mixed;\n  cache: {|[string]: ParcelModule|};\n  hotData: {|[string]: mixed|};\n  Module: any;\n  parent: ?ParcelRequire;\n  isParcelRequire: true;\n  modules: {|[string]: [Function, {|[string]: string|}]|};\n  HMR_BUNDLE_ID: string;\n  root: ParcelRequire;\n}\ninterface ParcelModule {\n  hot: {|\n    data: mixed,\n    accept(cb: (Function) => void): void,\n    dispose(cb: (mixed) => void): void,\n    // accept(deps: Array<string> | string, cb: (Function) => void): void,\n    // decline(): void,\n    _acceptCallbacks: Array<(Function) => void>,\n    _disposeCallbacks: Array<(mixed) => void>,\n  |};\n}\ninterface ExtensionContext {\n  runtime: {|\n    reload(): void,\n    getURL(url: string): string;\n    getManifest(): {manifest_version: number, ...};\n  |};\n}\ndeclare var module: {bundle: ParcelRequire, ...};\ndeclare var HMR_HOST: string;\ndeclare var HMR_PORT: string;\ndeclare var HMR_ENV_HASH: string;\ndeclare var HMR_SECURE: boolean;\ndeclare var HMR_USE_SSE: boolean;\ndeclare var chrome: ExtensionContext;\ndeclare var browser: ExtensionContext;\ndeclare var __parcel__import__: (string) => Promise<void>;\ndeclare var __parcel__importScripts__: (string) => Promise<void>;\ndeclare var globalThis: typeof self;\ndeclare var ServiceWorkerGlobalScope: Object;\n*/\nvar OVERLAY_ID = '__parcel__error__overlay__';\nvar OldModule = module.bundle.Module;\nfunction Module(moduleName) {\n  OldModule.call(this, moduleName);\n  this.hot = {\n    data: module.bundle.hotData[moduleName],\n    _acceptCallbacks: [],\n    _disposeCallbacks: [],\n    accept: function (fn) {\n      this._acceptCallbacks.push(fn || function () {});\n    },\n    dispose: function (fn) {\n      this._disposeCallbacks.push(fn);\n    }\n  };\n  module.bundle.hotData[moduleName] = undefined;\n}\nmodule.bundle.Module = Module;\nmodule.bundle.hotData = {};\nvar checkedAssets /*: {|[string]: boolean|} */, assetsToDispose /*: Array<[ParcelRequire, string]> */, assetsToAccept /*: Array<[ParcelRequire, string]> */;\n\nfunction getHostname() {\n  return HMR_HOST || (location.protocol.indexOf('http') === 0 ? location.hostname : 'localhost');\n}\nfunction getPort() {\n  return HMR_PORT || location.port;\n}\n\n// eslint-disable-next-line no-redeclare\nvar parent = module.bundle.parent;\nif ((!parent || !parent.isParcelRequire) && typeof WebSocket !== 'undefined') {\n  var hostname = getHostname();\n  var port = getPort();\n  var protocol = HMR_SECURE || location.protocol == 'https:' && !['localhost', '127.0.0.1', '0.0.0.0'].includes(hostname) ? 'wss' : 'ws';\n  var ws;\n  if (HMR_USE_SSE) {\n    ws = new EventSource('/__parcel_hmr');\n  } else {\n    try {\n      ws = new WebSocket(protocol + '://' + hostname + (port ? ':' + port : '') + '/');\n    } catch (err) {\n      if (err.message) {\n        console.error(err.message);\n      }\n      ws = {};\n    }\n  }\n\n  // Web extension context\n  var extCtx = typeof browser === 'undefined' ? typeof chrome === 'undefined' ? null : chrome : browser;\n\n  // Safari doesn't support sourceURL in error stacks.\n  // eval may also be disabled via CSP, so do a quick check.\n  var supportsSourceURL = false;\n  try {\n    (0, eval)('throw new Error(\"test\"); //# sourceURL=test.js');\n  } catch (err) {\n    supportsSourceURL = err.stack.includes('test.js');\n  }\n\n  // $FlowFixMe\n  ws.onmessage = async function (event /*: {data: string, ...} */) {\n    checkedAssets = {} /*: {|[string]: boolean|} */;\n    assetsToAccept = [];\n    assetsToDispose = [];\n    var data /*: HMRMessage */ = JSON.parse(event.data);\n    if (data.type === 'update') {\n      // Remove error overlay if there is one\n      if (typeof document !== 'undefined') {\n        removeErrorOverlay();\n      }\n      let assets = data.assets.filter(asset => asset.envHash === HMR_ENV_HASH);\n\n      // Handle HMR Update\n      let handled = assets.every(asset => {\n        return asset.type === 'css' || asset.type === 'js' && hmrAcceptCheck(module.bundle.root, asset.id, asset.depsByBundle);\n      });\n      if (handled) {\n        console.clear();\n\n        // Dispatch custom event so other runtimes (e.g React Refresh) are aware.\n        if (typeof window !== 'undefined' && typeof CustomEvent !== 'undefined') {\n          window.dispatchEvent(new CustomEvent('parcelhmraccept'));\n        }\n        await hmrApplyUpdates(assets);\n\n        // Dispose all old assets.\n        let processedAssets = {} /*: {|[string]: boolean|} */;\n        for (let i = 0; i < assetsToDispose.length; i++) {\n          let id = assetsToDispose[i][1];\n          if (!processedAssets[id]) {\n            hmrDispose(assetsToDispose[i][0], id);\n            processedAssets[id] = true;\n          }\n        }\n\n        // Run accept callbacks. This will also re-execute other disposed assets in topological order.\n        processedAssets = {};\n        for (let i = 0; i < assetsToAccept.length; i++) {\n          let id = assetsToAccept[i][1];\n          if (!processedAssets[id]) {\n            hmrAccept(assetsToAccept[i][0], id);\n            processedAssets[id] = true;\n          }\n        }\n      } else fullReload();\n    }\n    if (data.type === 'error') {\n      // Log parcel errors to console\n      for (let ansiDiagnostic of data.diagnostics.ansi) {\n        let stack = ansiDiagnostic.codeframe ? ansiDiagnostic.codeframe : ansiDiagnostic.stack;\n        console.error('🚨 [parcel]: ' + ansiDiagnostic.message + '\\n' + stack + '\\n\\n' + ansiDiagnostic.hints.join('\\n'));\n      }\n      if (typeof document !== 'undefined') {\n        // Render the fancy html overlay\n        removeErrorOverlay();\n        var overlay = createErrorOverlay(data.diagnostics.html);\n        // $FlowFixMe\n        document.body.appendChild(overlay);\n      }\n    }\n  };\n  if (ws instanceof WebSocket) {\n    ws.onerror = function (e) {\n      if (e.message) {\n        console.error(e.message);\n      }\n    };\n    ws.onclose = function () {\n      console.warn('[parcel] 🚨 Connection to the HMR server was lost');\n    };\n  }\n}\nfunction removeErrorOverlay() {\n  var overlay = document.getElementById(OVERLAY_ID);\n  if (overlay) {\n    overlay.remove();\n    console.log('[parcel] ✨ Error resolved');\n  }\n}\nfunction createErrorOverlay(diagnostics) {\n  var overlay = document.createElement('div');\n  overlay.id = OVERLAY_ID;\n  let errorHTML = '<div style=\"background: black; opacity: 0.85; font-size: 16px; color: white; position: fixed; height: 100%; width: 100%; top: 0px; left: 0px; padding: 30px; font-family: Menlo, Consolas, monospace; z-index: 9999;\">';\n  for (let diagnostic of diagnostics) {\n    let stack = diagnostic.frames.length ? diagnostic.frames.reduce((p, frame) => {\n      return `${p}\n<a href=\"/__parcel_launch_editor?file=${encodeURIComponent(frame.location)}\" style=\"text-decoration: underline; color: #888\" onclick=\"fetch(this.href); return false\">${frame.location}</a>\n${frame.code}`;\n    }, '') : diagnostic.stack;\n    errorHTML += `\n      <div>\n        <div style=\"font-size: 18px; font-weight: bold; margin-top: 20px;\">\n          🚨 ${diagnostic.message}\n        </div>\n        <pre>${stack}</pre>\n        <div>\n          ${diagnostic.hints.map(hint => '<div>💡 ' + hint + '</div>').join('')}\n        </div>\n        ${diagnostic.documentation ? `<div>📝 <a style=\"color: violet\" href=\"${diagnostic.documentation}\" target=\"_blank\">Learn more</a></div>` : ''}\n      </div>\n    `;\n  }\n  errorHTML += '</div>';\n  overlay.innerHTML = errorHTML;\n  return overlay;\n}\nfunction fullReload() {\n  if ('reload' in location) {\n    location.reload();\n  } else if (extCtx && extCtx.runtime && extCtx.runtime.reload) {\n    extCtx.runtime.reload();\n  }\n}\nfunction getParents(bundle, id) /*: Array<[ParcelRequire, string]> */{\n  var modules = bundle.modules;\n  if (!modules) {\n    return [];\n  }\n  var parents = [];\n  var k, d, dep;\n  for (k in modules) {\n    for (d in modules[k][1]) {\n      dep = modules[k][1][d];\n      if (dep === id || Array.isArray(dep) && dep[dep.length - 1] === id) {\n        parents.push([bundle, k]);\n      }\n    }\n  }\n  if (bundle.parent) {\n    parents = parents.concat(getParents(bundle.parent, id));\n  }\n  return parents;\n}\nfunction updateLink(link) {\n  var href = link.getAttribute('href');\n  if (!href) {\n    return;\n  }\n  var newLink = link.cloneNode();\n  newLink.onload = function () {\n    if (link.parentNode !== null) {\n      // $FlowFixMe\n      link.parentNode.removeChild(link);\n    }\n  };\n  newLink.setAttribute('href',\n  // $FlowFixMe\n  href.split('?')[0] + '?' + Date.now());\n  // $FlowFixMe\n  link.parentNode.insertBefore(newLink, link.nextSibling);\n}\nvar cssTimeout = null;\nfunction reloadCSS() {\n  if (cssTimeout) {\n    return;\n  }\n  cssTimeout = setTimeout(function () {\n    var links = document.querySelectorAll('link[rel=\"stylesheet\"]');\n    for (var i = 0; i < links.length; i++) {\n      // $FlowFixMe[incompatible-type]\n      var href /*: string */ = links[i].getAttribute('href');\n      var hostname = getHostname();\n      var servedFromHMRServer = hostname === 'localhost' ? new RegExp('^(https?:\\\\/\\\\/(0.0.0.0|127.0.0.1)|localhost):' + getPort()).test(href) : href.indexOf(hostname + ':' + getPort());\n      var absolute = /^https?:\\/\\//i.test(href) && href.indexOf(location.origin) !== 0 && !servedFromHMRServer;\n      if (!absolute) {\n        updateLink(links[i]);\n      }\n    }\n    cssTimeout = null;\n  }, 50);\n}\nfunction hmrDownload(asset) {\n  if (asset.type === 'js') {\n    if (typeof document !== 'undefined') {\n      let script = document.createElement('script');\n      script.src = asset.url + '?t=' + Date.now();\n      if (asset.outputFormat === 'esmodule') {\n        script.type = 'module';\n      }\n      return new Promise((resolve, reject) => {\n        var _document$head;\n        script.onload = () => resolve(script);\n        script.onerror = reject;\n        (_document$head = document.head) === null || _document$head === void 0 || _document$head.appendChild(script);\n      });\n    } else if (typeof importScripts === 'function') {\n      // Worker scripts\n      if (asset.outputFormat === 'esmodule') {\n        return __parcel__import__(asset.url + '?t=' + Date.now());\n      } else {\n        return new Promise((resolve, reject) => {\n          try {\n            __parcel__importScripts__(asset.url + '?t=' + Date.now());\n            resolve();\n          } catch (err) {\n            reject(err);\n          }\n        });\n      }\n    }\n  }\n}\nasync function hmrApplyUpdates(assets) {\n  global.parcelHotUpdate = Object.create(null);\n  let scriptsToRemove;\n  try {\n    // If sourceURL comments aren't supported in eval, we need to load\n    // the update from the dev server over HTTP so that stack traces\n    // are correct in errors/logs. This is much slower than eval, so\n    // we only do it if needed (currently just Safari).\n    // https://bugs.webkit.org/show_bug.cgi?id=137297\n    // This path is also taken if a CSP disallows eval.\n    if (!supportsSourceURL) {\n      let promises = assets.map(asset => {\n        var _hmrDownload;\n        return (_hmrDownload = hmrDownload(asset)) === null || _hmrDownload === void 0 ? void 0 : _hmrDownload.catch(err => {\n          // Web extension fix\n          if (extCtx && extCtx.runtime && extCtx.runtime.getManifest().manifest_version == 3 && typeof ServiceWorkerGlobalScope != 'undefined' && global instanceof ServiceWorkerGlobalScope) {\n            extCtx.runtime.reload();\n            return;\n          }\n          throw err;\n        });\n      });\n      scriptsToRemove = await Promise.all(promises);\n    }\n    assets.forEach(function (asset) {\n      hmrApply(module.bundle.root, asset);\n    });\n  } finally {\n    delete global.parcelHotUpdate;\n    if (scriptsToRemove) {\n      scriptsToRemove.forEach(script => {\n        if (script) {\n          var _document$head2;\n          (_document$head2 = document.head) === null || _document$head2 === void 0 || _document$head2.removeChild(script);\n        }\n      });\n    }\n  }\n}\nfunction hmrApply(bundle /*: ParcelRequire */, asset /*:  HMRAsset */) {\n  var modules = bundle.modules;\n  if (!modules) {\n    return;\n  }\n  if (asset.type === 'css') {\n    reloadCSS();\n  } else if (asset.type === 'js') {\n    let deps = asset.depsByBundle[bundle.HMR_BUNDLE_ID];\n    if (deps) {\n      if (modules[asset.id]) {\n        // Remove dependencies that are removed and will become orphaned.\n        // This is necessary so that if the asset is added back again, the cache is gone, and we prevent a full page reload.\n        let oldDeps = modules[asset.id][1];\n        for (let dep in oldDeps) {\n          if (!deps[dep] || deps[dep] !== oldDeps[dep]) {\n            let id = oldDeps[dep];\n            let parents = getParents(module.bundle.root, id);\n            if (parents.length === 1) {\n              hmrDelete(module.bundle.root, id);\n            }\n          }\n        }\n      }\n      if (supportsSourceURL) {\n        // Global eval. We would use `new Function` here but browser\n        // support for source maps is better with eval.\n        (0, eval)(asset.output);\n      }\n\n      // $FlowFixMe\n      let fn = global.parcelHotUpdate[asset.id];\n      modules[asset.id] = [fn, deps];\n    } else if (bundle.parent) {\n      hmrApply(bundle.parent, asset);\n    }\n  }\n}\nfunction hmrDelete(bundle, id) {\n  let modules = bundle.modules;\n  if (!modules) {\n    return;\n  }\n  if (modules[id]) {\n    // Collect dependencies that will become orphaned when this module is deleted.\n    let deps = modules[id][1];\n    let orphans = [];\n    for (let dep in deps) {\n      let parents = getParents(module.bundle.root, deps[dep]);\n      if (parents.length === 1) {\n        orphans.push(deps[dep]);\n      }\n    }\n\n    // Delete the module. This must be done before deleting dependencies in case of circular dependencies.\n    delete modules[id];\n    delete bundle.cache[id];\n\n    // Now delete the orphans.\n    orphans.forEach(id => {\n      hmrDelete(module.bundle.root, id);\n    });\n  } else if (bundle.parent) {\n    hmrDelete(bundle.parent, id);\n  }\n}\nfunction hmrAcceptCheck(bundle /*: ParcelRequire */, id /*: string */, depsByBundle /*: ?{ [string]: { [string]: string } }*/) {\n  if (hmrAcceptCheckOne(bundle, id, depsByBundle)) {\n    return true;\n  }\n\n  // Traverse parents breadth first. All possible ancestries must accept the HMR update, or we'll reload.\n  let parents = getParents(module.bundle.root, id);\n  let accepted = false;\n  while (parents.length > 0) {\n    let v = parents.shift();\n    let a = hmrAcceptCheckOne(v[0], v[1], null);\n    if (a) {\n      // If this parent accepts, stop traversing upward, but still consider siblings.\n      accepted = true;\n    } else {\n      // Otherwise, queue the parents in the next level upward.\n      let p = getParents(module.bundle.root, v[1]);\n      if (p.length === 0) {\n        // If there are no parents, then we've reached an entry without accepting. Reload.\n        accepted = false;\n        break;\n      }\n      parents.push(...p);\n    }\n  }\n  return accepted;\n}\nfunction hmrAcceptCheckOne(bundle /*: ParcelRequire */, id /*: string */, depsByBundle /*: ?{ [string]: { [string]: string } }*/) {\n  var modules = bundle.modules;\n  if (!modules) {\n    return;\n  }\n  if (depsByBundle && !depsByBundle[bundle.HMR_BUNDLE_ID]) {\n    // If we reached the root bundle without finding where the asset should go,\n    // there's nothing to do. Mark as \"accepted\" so we don't reload the page.\n    if (!bundle.parent) {\n      return true;\n    }\n    return hmrAcceptCheck(bundle.parent, id, depsByBundle);\n  }\n  if (checkedAssets[id]) {\n    return true;\n  }\n  checkedAssets[id] = true;\n  var cached = bundle.cache[id];\n  assetsToDispose.push([bundle, id]);\n  if (!cached || cached.hot && cached.hot._acceptCallbacks.length) {\n    assetsToAccept.push([bundle, id]);\n    return true;\n  }\n}\nfunction hmrDispose(bundle /*: ParcelRequire */, id /*: string */) {\n  var cached = bundle.cache[id];\n  bundle.hotData[id] = {};\n  if (cached && cached.hot) {\n    cached.hot.data = bundle.hotData[id];\n  }\n  if (cached && cached.hot && cached.hot._disposeCallbacks.length) {\n    cached.hot._disposeCallbacks.forEach(function (cb) {\n      cb(bundle.hotData[id]);\n    });\n  }\n  delete bundle.cache[id];\n}\nfunction hmrAccept(bundle /*: ParcelRequire */, id /*: string */) {\n  // Execute the module.\n  bundle(id);\n\n  // Run the accept callbacks in the new version of the module.\n  var cached = bundle.cache[id];\n  if (cached && cached.hot && cached.hot._acceptCallbacks.length) {\n    cached.hot._acceptCallbacks.forEach(function (cb) {\n      var assetsToAlsoAccept = cb(function () {\n        return getParents(module.bundle.root, id);\n      });\n      if (assetsToAlsoAccept && assetsToAccept.length) {\n        assetsToAlsoAccept.forEach(function (a) {\n          hmrDispose(a[0], a[1]);\n        });\n\n        // $FlowFixMe[method-unbinding]\n        assetsToAccept.push.apply(assetsToAccept, assetsToAlsoAccept);\n      }\n    });\n  }\n}","import { render , html } from '@lithium-framework/core';\nimport { HelloWorld } from './components/hello-world';\n\nimport \"./index.scss\";\n\nrender( html`<main-application>${HelloWorld}</main-application>` ,document.body )",null,"export * from './dom';\nexport * from './decorators';\nexport * from './directives';\nexport * from './utils';\nexport * from './webComponent';\n\n// import { MainApplication } from './dom/index.js';\n\nexport declare module global{\n  interface HTMLElementTagNameMap{\n    // 'lithium-router' : Router;\n    // 'main-application' : MainApplication;\n  }\n}\n\n// namespace Lithium{\n//   export const DOM = require('./dom/index.js');\n//   export const Decorators = require('./decorators/index.js');\n//   export const Directives = require('./directives/index.js');\n//   export const Utils = require('./utils/index.js');\n//   export const Component = require('./webComponent/index.js');\n// };\n\n// export default Lithium;\n\n// (() => {\n\n//   if(globalThis.window){\n\n//     window['lithium'] = {\n\n//     };\n\n//   }\n  \n// })()","import { ViewTemplate } from '@microsoft/fast-element/dist/esm';\nimport { ObservableObject } from '../utils/observable-object';\nimport { state } from '../decorators';\n\n// import './router/index.js'\n// import './application/index.js'\n\nexport class ComponentExecutionContext< T = any , States extends Record<string , any> = Record<string , any> >{\n\n  $states = ObservableObject.init< any , any >({});\n  get states(){ return this.$states }\n  #_state_keys:string[] = [];\n  \n  createState = <T>( key:keyof States , value:T ):[ state:T , setter:( newValue:T ) => void ] => {\n\n    if(this.#_state_keys.includes(key as string))return this.useState( key );\n\n    Object.defineProperty( this , key , {\n      get(){\n        return JSON.parse(this.states[key]);\n      },\n      set( value ){\n        \n        if(!this.#_state_keys.includes(key)){\n\n          this.#_state_keys.push( key );\n\n          this.$states = ObservableObject.init({\n            [key] :  JSON.stringify(value),\n            ...Object.fromEntries(\n              new Map(\n                Array.from( this.#_state_keys , ( key ) => {\n                  return [ key , this.$states[`${key}`] ]\n                } )\n              )\n            )\n          });\n\n        }\n\n        this.$states[key] = JSON.stringify(value);\n\n      }\n    });\n\n    this[key as string] = value;\n    return this.useState( key );\n\n  }\n\n  useState = <T>( key:keyof States ):[ state:T , setter:( newValue:T ) => void ] => {\n\n    return [ this[key as string] , ( newValue ) => {\n      console.log({ newValue })\n      this[key as string] = newValue;\n    } ];\n\n  }\n\n  createConsumable = <T = any>( key:string , value:T ) => {\n    state( this , key , value , false );\n  }\n\n  constructor( data?:T ){\n      Object.assign( this , data );\n  }\n\n  static init< T extends Record<string , any> = {} >( data?:T ):ComponentContext<T>{\n      return new ComponentExecutionContext( data ) as any as ComponentContext<T>;\n  }\n\n}\n\nexport type ComponentContext< T = Record<string , any> , States = Record<string , any> > = ComponentExecutionContext<T , States> & T;\n\nexport function render< T extends Record<string , any> = {} , Storage extends Record<string , any> = Record<string , any> >(template: ViewTemplate<ComponentContext<any, Record<string, any>>, any>, container: HTMLElement = document.body , data = {} ) {\n\n  let context = ComponentExecutionContext.init(data);\n  return template.render( context , container);\n\n}\n\n// export * from './router';\n// export * from './application/index.js';","import { ObservableObject , Observable } from './models';\n\nexport function createObservableObject< Key extends string , Value extends any >( initialObject:Record< Key , Value > ){\n  return ObservableObject.init< Key , Value >( initialObject );\n}\n\nexport { ObservableObject , Observable };","import { Observable } from \"@microsoft/fast-element/dist/esm\";\n\nexport class ObservableObject< key extends string , value extends any = any > extends Object{\n\n  static init< key extends string , value extends any >( initialObject:Record<key , value> ){\n    let observabe = new ObservableObject< key , value >( initialObject );\n    return observabe.createProxy();\n  }\n\n  $data:Record<string , value> = {};\n\n  constructor( initialObject:Record<key , value> ){\n    super();\n\n    Object.keys( initialObject ).forEach(( key:any ) => {\n      this.set( key , initialObject[key] );\n    })\n\n  };\n\n  set = <T extends value = any>( key:key , value:T ) => {   \n\n    this.$data[`_${key}`] = value as any;\n    Observable.defineProperty( this.$data, key);\n    return this.$data[key];\n\n  }\n\n  createProxy(){\n\n    return new Proxy( this.$data , {\n      get( store , propKey:string ){\n\n        let result:any = undefined;\n\n        try{\n          result = store[propKey];\n        }\n        catch(error){\n          console.error(error);\n        }\n        finally{\n          return result;\n        }\n\n      },\n      set( store , propKey: string, value: any ){\n\n        if(store[propKey]){\n          store[propKey] = value;\n        }\n        else {\n          store[ `_${propKey}` ] = value;\n          Observable.defineProperty( store, propKey);\n        }\n\n        return true;\n  \n      }\n    })\n\n  }\n\n}\n\nexport { Observable };","export * from './attributeState';\nexport * from './state';","import { DecoratorAttributeConfiguration, attr } from \"@microsoft/fast-element\";\nimport { state } from './state';\n\n/**\n * @AttributeState decorator\n * A decorator to define a property as both an attribute and a state on a WebComponent.\n * This combines the behavior of @attr and @State decorators.\n * \n * @param {DecoratorAttributeConfiguration} options - Options to configure the attribute.\n * @returns {Function} - The decorator function.\n * \n * @example\n * ```typescript\n * // Define an editable title component using the AttributeState decorator\n * \n * customElement({\n *     name: 'editable-title',\n *     template : html`...`\n * })\n * class EditableTitle extends WebComponent {\n *     AttributeState() level: number = 2;\n *     AttributeState() editable: string = \"false\";\n *     State value: string = \"Hello World\";\n * \n *     handleInput(event) {\n *         this.value = event.target.innerText;\n *     }\n * \n *     connectedCallback() {\n *         super.connectedCallback();\n *     }\n * }\n * ```\n */\nexport function attrState( options:DecoratorAttributeConfiguration = {} ){\n\n  return ( target, propertyKey: string ) => {\n    attr( options )( target , propertyKey );\n    state( target , propertyKey );\n  }\n\n}\n\nexport { attr };","import { observable } from \"@microsoft/fast-element\";\n\n/**\n * @State decorator\n * A decorator to define a state property on a WebComponent.\n * This state property is observable, and its changes are detected and handled.\n * \n * @param {Object} target - The prototype of the class where the state property is defined.\n * @param {string} propertyKey - The name of the property to be defined as a state.\n * \n * @example\n * ```typescript\n * /// Define a counter component using the State decorator\n\n * customElement({\n *     name: 'counter-element',\n *     template: html`...`\n * })\n * class CounterElement extends WebComponent {\n *     State count: number = 0;\n * \n *     increment() {\n *         this.count += 1;\n *     }\n * \n *     connectedCallback() {\n *         super.connectedCallback();s\n *     }\n * }\n * ```\n */\nexport function state(target, propertyKey: string , value:any = null , constructible = false){\n\n  if(constructible)target.constructor.states = target.constructor.states || {};\n\n  Object.defineProperty( target , propertyKey , {\n    get(){\n      return target.$states[propertyKey];\n    },\n    set(newValue){\n      target.$states[propertyKey] = newValue;\n      return true;\n    },\n    enumerable: true,\n    configurable: true\n  } );\n\n  observable(target, propertyKey);\n\n  if(value)target[propertyKey] = value;\n\n}","import {\n  when,\n  repeat,\n  // ref,\n  children,\n  elements,\n  slotted,\n} from '@microsoft/fast-element';\n\nexport {\n  when,\n  repeat,\n  children,\n  elements,\n  slotted\n}\n\nexport * from './assyncAppend.js';\nexport * from './ref.js';\nexport * from './state.js';\nexport * from './style.js';\nexport * from './until.js';","import { ViewTemplate, HTMLDirective , HTMLBindingDirective, HTMLView , html , Binding } from '@microsoft/fast-element';\nimport type { Subscriber , BindingDirective, ExpressionObserver } from '@microsoft/fast-element';\n\nexport class AsyncAppendBindig extends Binding{\n\n  createObserver(subscriber: Subscriber, directive: BindingDirective): ExpressionObserver<any, any, any> {\n\n    console.log({ subscriber , directive })\n\n    return {\n      bind(controller){\n        console.log({ controller })\n      }\n    }\n\n  }\n  \n}\n\nexport class AsyncAppendDirective<T = any> extends HTMLBindingDirective {\n\n  fn:Promise<T> = null;\n  callback:( result:T ) => ViewTemplate = null;\n\n  constructor( fn:Promise<T> , callback:( result:T ) => ViewTemplate ) {\n    super( new AsyncAppendBindig( (x) => null ) );\n    Object.assign( this , { fn , callback } );\n  }\n\n  createBehavior():any {\n\n    let { targetNodeId } = this;\n\n    return {\n        bind : (source:HTMLView ) => {\n\n          let target = source.targets[targetNodeId];\n\n          this.fn\n          .then(( result ) => {\n            this.callback( result ).render( source , target instanceof HTMLElement ? target : target.parentElement );\n          })\n          .catch(( error ) => {\n            console.error(error)\n            html`<span>Error: ${error}</span>`.render( source , target instanceof HTMLElement ? target : target.parentElement );\n          })\n\n        },\n        unbind : () => {\n            // Nettoyage si nécessaire\n        }\n    };\n\n  }\n\n  static use<T>( fn:Promise<T> , callback:( result:T ) => ViewTemplate ){\n    return new AsyncAppendDirective( fn , callback);\n  }\n\n}\n\nHTMLDirective.define( AsyncAppendDirective );\n\nexport { Subscriber }\n\nexport const asyncAppend = <T = any>( fn:Promise<T> , callback:( result:T ) => ViewTemplate ) => AsyncAppendDirective.use<T>( fn , callback );","import { HTMLDirective, HTMLView, Binding, BindingDirective, ExpressionObserver, Subscriber, StatelessAttachedAttributeDirective } from '@microsoft/fast-element';\n\nexport interface IElementRef< T extends Node >{\n  value : T | null;\n}\n\nexport function createRef< T extends Node >():IElementRef<T>{\n  return {\n    value : null\n  }\n}\n\nexport class RefDirective<T extends Node> extends StatelessAttachedAttributeDirective<IElementRef<T>> {\n\n  options:IElementRef<T> = null;\n\n  constructor( options:IElementRef<T> ) {\n    super( options );\n    Object.assign( this , { options } )\n  }\n\n  bind(controller: HTMLView): void {\n\n    let { lastChild:target } = controller;\n\n    this.options.value = target as any;\n\n  }\n\n  static use<T extends Node>( options:IElementRef<T> ){\n    return new RefDirective<T>( options );\n  }\n\n}\n\nHTMLDirective.define( RefDirective )\n\nexport const ref = <T extends Node>( options:IElementRef<T> ) => RefDirective.use<T>( options );","// import { ViewTemplate, HTMLBindingDirective, ExecutionContext } from '@microsoft/fast-element';\nimport { State , createState } from '@lithium-framework/state';\nimport { ViewTemplate, HTMLDirective , HTMLBindingDirective, HTMLView , Binding, BindingDirective, ExpressionObserver, Subscriber } from '@microsoft/fast-element';\n\nexport class StateBindig extends Binding{\n\n  createObserver(subscriber: Subscriber, directive: BindingDirective): ExpressionObserver<any, any, any> {\n\n    console.log({ subscriber , directive })\n\n    return {\n      bind(controller){\n        console.log({ controller })\n      }\n    }\n\n  }\n  \n}\n\nexport class StateDirective<T = any> extends HTMLBindingDirective {\n\n    _state:State<T> = null;\n    get state(){ return this._state.mutator[0] }\n    set state( value:T ){ this._state.mutator[1](value) }\n\n    _callback:( newValue:T ) => ViewTemplate = null;\n\n    constructor( state: State<T> , callback:( newValue:T ) => ViewTemplate ) {\n        super( new StateBindig( (x) => null ) );\n        this._state = state;\n        this._callback = callback;\n    }\n\n  createBehavior():any {\n\n    let { targetNodeId } = this;\n    let view:HTMLView = null;\n\n    return {\n        bind : (source:HTMLView) => {\n\n            let target = source.targets[targetNodeId];\n\n            if(this._callback){\n\n                this._state.subscribe(() => {\n                    view.dispose();\n                    view = this._callback( this.state ).render( source , target.parentElement );\n                });\n\n                view = this._callback( this.state ).render( source , target.parentElement );\n\n            }\n\n            else{\n\n                this._state.subscribe(() => {\n                    if(\"textContent\" in target){\n                        target.textContent = `${this.state}`;\n                    }\n                });\n\n                if(\"textContent\" in target){\n                    target.textContent = `${this.state}`;\n                }\n\n            }\n\n        },\n        unbind : () => {\n            // Nettoyage si nécessaire\n        }\n    };\n\n  }\n\n  static use<T = any>( state , callback ){\n    return new StateDirective<T>( state , callback )\n  }\n\n}\n\nHTMLDirective.define( StateDirective )\n\nexport const useState = <T>( state: State<T> , callback?:( newValue:T ) => ViewTemplate ) => StateDirective.use<T>( state , callback );","import { HTMLDirective, HTMLBindingDirective, HTMLView , Binding, BindingDirective, ExpressionObserver, Subscriber } from '@microsoft/fast-element';\nimport { Properties } from '../utils/css-object';\n\nexport class StyleBindig extends Binding{\n\n  createObserver(subscriber: Subscriber, directive: BindingDirective): ExpressionObserver<any, any, any> {\n\n    console.log({ subscriber , directive })\n\n    return {\n      bind(controller){\n        console.log({ controller })\n      }\n    }\n\n  }\n  \n}\n\nexport class StyleDirective extends HTMLBindingDirective {\n\n  css:Properties = null;\n\n  constructor( css:Properties ) {\n      super( new StyleBindig( (x) => null ) );\n      Object.assign( this , { css } );\n\n  }\n\ncreateBehavior():any {\n\n  let { targetNodeId } = this;\n  let view:HTMLView = null;\n\n  return {\n      bind : (source:HTMLView) => {\n\n        let target = source.targets[targetNodeId];\n        if(target instanceof HTMLElement)Object.assign( target.style , this.css );\n\n      },\n      unbind : () => {\n          // Nettoyage si nécessaire\n      }\n  };\n\n}\n\nstatic use( css:Properties ){\n  return new StyleDirective( css )\n}\n\n}\n\nHTMLDirective.define( StyleDirective );\n\nexport const style = ( css:Properties ) => StyleDirective.use( css );","import { ViewTemplate , html , HTMLDirective, HTMLBindingDirective, HTMLView , Binding, BindingDirective, ExpressionObserver, Subscriber } from '@microsoft/fast-element';\n\nexport class UntilBindig extends Binding{\n\n  createObserver(subscriber: Subscriber, directive: BindingDirective): ExpressionObserver<any, any, any> {\n\n    console.log({ subscriber , directive })\n\n    return {\n      bind(controller){\n        console.log({ controller })\n      }\n    }\n\n  }\n  \n}\n\nexport class UntilDirective extends HTMLBindingDirective {\n\n  fn:Promise<ViewTemplate> = null;\n  template:ViewTemplate = null;\n\n  constructor( fn:Promise<ViewTemplate> , template:ViewTemplate ) {\n    super( new UntilBindig( (x) => null ) );\n    Object.assign( this , { fn , template } );\n}\n\ncreateBehavior():any {\n\n  let { targetNodeId } = this;\n\n  return {\n    bind : (source:HTMLView) => {\n\n      let target = source.targets[targetNodeId];\n      let loading = this.template.render( source , target instanceof HTMLElement ? target : target.parentElement );\n\n      this.fn\n      .then(( result ) => {\n        loading.dispose()\n        result.render( source , target instanceof HTMLElement ? target : target.parentElement );\n      })\n      .catch(( error ) => {\n        console.error(error);\n        loading.dispose();\n        html`<span>Error: ${error}</span>`.render( source , target instanceof HTMLElement ? target : target.parentElement );\n      })\n\n    },\n    unbind : () => {\n        // Nettoyage si nécessaire\n    }\n};\n\n}\n\nstatic use( fn:Promise<ViewTemplate> , template: ViewTemplate ){\n  return new UntilDirective( fn , template);\n}\n\n}\n\nHTMLDirective.define( UntilDirective );\n\nexport const until = ( fn:Promise<ViewTemplate> , template:ViewTemplate ) => UntilDirective.use( fn , template );","export {\n  Observable,\n} from '@microsoft/fast-element/dist/esm';\n\nexport {\n  // _cssObject,\n  // Properties,\n  // createCSS\n} from './css-object';\n\nexport {\n  createObservableObject,\n  ObservableObject\n} from './observable-object';\n\nexport { \n  State,\n  createState\n} from '@lithium-framework/state';\n\nexport { \n  createStorage,\n  // Storage, \n  // StorageKeys, \n  // StorageValues, \n  // StateValidator\n} from '@lithium-framework/context';\n\nexport {\n  // ComponentId,\n  // Segment,\n  // ParentSegementId,\n  // CollectionId,\n  // HUID,\n  // HierarchicalUUIDOptions,\n  uuid\n} from '@lithium-framework/huid';\n\n// export{\n//   Observable,\n//   volatile,\n  // State,\n  // createState,\n  // createStorage,\n  // Storage, \n  // StorageKeys, \n  // StorageValues, \n  // StateValidator,\n  // ComponentId,\n  // Segment,\n  // ParentSegementId,\n  // CollectionId,\n  // HUID,\n  // HierarchicalUUIDOptions,\n  // uuid\n// }","import { \n  customElement , \n  css, \n  html, \n  ViewTemplate,\n  HTMLView,\n  volatile\n} from \"@microsoft/fast-element/dist/esm\";\n\nexport {\n  customElement , \n  css, \n  html, \n  ViewTemplate,\n  HTMLView,\n  volatile\n};\n\nexport { \n  WebComponent \n} from './model';","import { FASTElement } from \"@microsoft/fast-element\";\nimport { ObservableObject } from '../utils/observable-object';\n\n/* The WebComponent class extends FASTElement and provides state management functionality using\nObservableObject. */\nexport class WebComponent extends FASTElement{\n\n  /* The `static states = {};` line is declaring a static property named `states` on the `WebComponent`\n  class and initializing it as an empty object `{}`. This property is intended to hold the initial\n  state values for the component. By defining it as a static property, it is shared among all\n  instances of the `WebComponent` class rather than being specific to individual instances. This\n  allows all instances of the class to access and modify the same set of state values. */\n  static states = {};\n\n  /* The line ` = ObservableObject.init( this.constructor[\"states\"] );` is initializing an\n  instance property named `` on the `WebComponent` class. This property is being set to the\n  result of calling the `init` method of the `ObservableObject` class, passing in the initial state\n  values defined in the `states` static property of the `WebComponent` class\n  (`this.constructor[\"states\"]`). */\n  $states = ObservableObject.init( this.constructor[\"states\"] );\n\n  constructor(){\n    super();\n\n    Object.keys(this.constructor[\"states\"]).forEach( key => {\n      // delete this[key];\n      Object.defineProperty( this , key , {\n        get(){\n          return this.$states[key];\n        },\n        set( value ){\n          this.$states[key] = value;\n        }\n      } )\n      \n    });\n\n  }\n\n  connectedCallback() {\n    super.connectedCallback();\n  }\n\n  static define = FASTElement.define\n  \n}","export { FAST, emptyArray } from \"./platform.js\";\n// DOM\nexport { DOMAspect, DOM } from \"./dom.js\";\n// Observation\nexport { ExecutionContext, Observable, observable, SourceLifetime, volatile, } from \"./observation/observable.js\";\nexport { PropertyChangeNotifier, SubscriberSet, } from \"./observation/notifier.js\";\nexport { ArrayObserver, lengthOf, Splice, SpliceStrategy, SpliceStrategySupport, } from \"./observation/arrays.js\";\nexport { Updates } from \"./observation/update-queue.js\";\n// Binding\nexport { Binding } from \"./binding/binding.js\";\nexport { listener, oneWay } from \"./binding/one-way.js\";\nexport { oneTime } from \"./binding/one-time.js\";\nexport { normalizeBinding } from \"./binding/normalize.js\";\n// Styles\nexport { ElementStyles, } from \"./styles/element-styles.js\";\nexport { css } from \"./styles/css.js\";\nexport { cssDirective, CSSDirective, } from \"./styles/css-directive.js\";\nexport {} from \"./styles/host.js\";\nexport {} from \"./styles/style-strategy.js\";\nexport { CSSBindingDirective } from \"./styles/css-binding-directive.js\";\n// Templating\nexport { html, InlineTemplateDirective, ViewTemplate, } from \"./templating/template.js\";\nexport { Compiler } from \"./templating/compiler.js\";\nexport { Markup, Parser } from \"./templating/markup.js\";\nexport { HTMLBindingDirective, } from \"./templating/html-binding-directive.js\";\nexport { htmlDirective, HTMLDirective, StatelessAttachedAttributeDirective, } from \"./templating/html-directive.js\";\nexport { ref, RefDirective } from \"./templating/ref.js\";\nexport { when } from \"./templating/when.js\";\nexport { repeat, RepeatBehavior, RepeatDirective, } from \"./templating/repeat.js\";\nexport { slotted, SlottedDirective, } from \"./templating/slotted.js\";\nexport { children, ChildrenDirective, } from \"./templating/children.js\";\nexport { HTMLView } from \"./templating/view.js\";\nexport { elements, NodeObservationDirective, } from \"./templating/node-observation.js\";\n// Components\nexport { customElement, FASTElement } from \"./components/fast-element.js\";\nexport { FASTElementDefinition, } from \"./components/fast-definitions.js\";\nexport { attr, AttributeConfiguration, AttributeDefinition, booleanConverter, nullableBooleanConverter, nullableNumberConverter, } from \"./components/attributes.js\";\nexport { ElementController, } from \"./components/element-controller.js\";\n","import { noop } from \"./interfaces.js\";\nimport \"./polyfills.js\";\n// ensure FAST global - duplicated debug.ts\nconst propConfig = {\n    configurable: false,\n    enumerable: false,\n    writable: false,\n};\nif (globalThis.FAST === void 0) {\n    Reflect.defineProperty(globalThis, \"FAST\", Object.assign({ value: Object.create(null) }, propConfig));\n}\n/**\n * The FAST global.\n * @public\n */\nexport const FAST = globalThis.FAST;\nif (FAST.getById === void 0) {\n    const storage = Object.create(null);\n    Reflect.defineProperty(FAST, \"getById\", Object.assign({ value(id, initialize) {\n            let found = storage[id];\n            if (found === void 0) {\n                found = initialize ? (storage[id] = initialize()) : null;\n            }\n            return found;\n        } }, propConfig));\n}\nif (FAST.error === void 0) {\n    Object.assign(FAST, {\n        warn() { },\n        error(code) {\n            return new Error(`Error ${code}`);\n        },\n        addMessages() { },\n    });\n}\n/**\n * A readonly, empty array.\n * @remarks\n * Typically returned by APIs that return arrays when there are\n * no actual items to return.\n * @public\n */\nexport const emptyArray = Object.freeze([]);\n/**\n * Do not change. Part of shared kernel contract.\n * @internal\n */\nexport function createTypeRegistry() {\n    const typeToDefinition = new Map();\n    return Object.freeze({\n        register(definition) {\n            if (typeToDefinition.has(definition.type)) {\n                return false;\n            }\n            typeToDefinition.set(definition.type, definition);\n            return true;\n        },\n        getByType(key) {\n            return typeToDefinition.get(key);\n        },\n        getForInstance(object) {\n            if (object === null || object === void 0) {\n                return void 0;\n            }\n            return typeToDefinition.get(object.constructor);\n        },\n    });\n}\n/**\n * Creates a function capable of locating metadata associated with a type.\n * @returns A metadata locator function.\n * @internal\n */\nexport function createMetadataLocator() {\n    const metadataLookup = new WeakMap();\n    return function (target) {\n        let metadata = metadataLookup.get(target);\n        if (metadata === void 0) {\n            let currentTarget = Reflect.getPrototypeOf(target);\n            while (metadata === void 0 && currentTarget !== null) {\n                metadata = metadataLookup.get(currentTarget);\n                currentTarget = Reflect.getPrototypeOf(currentTarget);\n            }\n            metadata = metadata === void 0 ? [] : metadata.slice(0);\n            metadataLookup.set(target, metadata);\n        }\n        return metadata;\n    };\n}\n/**\n * Makes a type noop for JSON serialization.\n * @param type - The type to make noop for JSON serialization.\n * @internal\n */\nexport function makeSerializationNoop(type) {\n    type.prototype.toJSON = noop;\n}\n","let kernelMode;\nconst kernelAttr = \"fast-kernel\";\ntry {\n    if (document.currentScript) {\n        kernelMode = document.currentScript.getAttribute(kernelAttr);\n    }\n    else {\n        const scripts = document.getElementsByTagName(\"script\");\n        const currentScript = scripts[scripts.length - 1];\n        kernelMode = currentScript.getAttribute(kernelAttr);\n    }\n}\ncatch (e) {\n    kernelMode = \"isolate\";\n}\nlet KernelServiceId;\nswitch (kernelMode) {\n    case \"share\": // share the kernel across major versions\n        KernelServiceId = Object.freeze({\n            updateQueue: 1,\n            observable: 2,\n            contextEvent: 3,\n            elementRegistry: 4,\n        });\n        break;\n    case \"share-v2\": // only share the kernel with other v2 instances\n        KernelServiceId = Object.freeze({\n            updateQueue: 1.2,\n            observable: 2.2,\n            contextEvent: 3.2,\n            elementRegistry: 4.2,\n        });\n        break;\n    default:\n        // fully isolate the kernel from all other FAST instances\n        const postfix = `-${Math.random().toString(36).substring(2, 8)}`;\n        KernelServiceId = Object.freeze({\n            updateQueue: `1.2${postfix}`,\n            observable: `2.2${postfix}`,\n            contextEvent: `3.2${postfix}`,\n            elementRegistry: `4.2${postfix}`,\n        });\n        break;\n}\nexport { KernelServiceId };\n/**\n * Determines whether or not an object is a function.\n * @public\n */\nexport const isFunction = (object) => typeof object === \"function\";\n/**\n * Determines whether or not an object is a string.\n * @public\n */\nexport const isString = (object) => typeof object === \"string\";\n/**\n * A function which does nothing.\n * @public\n */\nexport const noop = () => void 0;\n","exports.interopDefault = function (a) {\n  return a && a.__esModule ? a : {default: a};\n};\n\nexports.defineInteropFlag = function (a) {\n  Object.defineProperty(a, '__esModule', {value: true});\n};\n\nexports.exportAll = function (source, dest) {\n  Object.keys(source).forEach(function (key) {\n    if (\n      key === 'default' ||\n      key === '__esModule' ||\n      Object.prototype.hasOwnProperty.call(dest, key)\n    ) {\n      return;\n    }\n\n    Object.defineProperty(dest, key, {\n      enumerable: true,\n      get: function () {\n        return source[key];\n      },\n    });\n  });\n\n  return dest;\n};\n\nexports.export = function (dest, destName, get) {\n  Object.defineProperty(dest, destName, {\n    enumerable: true,\n    get: get,\n  });\n};\n","/* eslint-disable @typescript-eslint/ban-ts-comment */\n(function ensureGlobalThis() {\n    if (typeof globalThis !== \"undefined\") {\n        // We're running in a modern environment.\n        return;\n    }\n    // @ts-ignore\n    if (typeof global !== \"undefined\") {\n        // We're running in NodeJS\n        // @ts-ignore\n        global.globalThis = global;\n    }\n    else if (typeof self !== \"undefined\") {\n        self.globalThis = self;\n    }\n    else if (typeof window !== \"undefined\") {\n        // We're running in the browser's main thread.\n        window.globalThis = window;\n    }\n    else {\n        // Hopefully we never get here...\n        // Not all environments allow eval and Function. Use only as a last resort:\n        // eslint-disable-next-line no-new-func\n        const result = new Function(\"return this\")();\n        result.globalThis = result;\n    }\n})();\n","import \"./interfaces.js\";\nimport { FAST } from \"./platform.js\";\n/**\n * The type of HTML aspect to target.\n * @public\n */\nexport const DOMAspect = Object.freeze({\n    /**\n     * Not aspected.\n     */\n    none: 0,\n    /**\n     * An attribute.\n     */\n    attribute: 1,\n    /**\n     * A boolean attribute.\n     */\n    booleanAttribute: 2,\n    /**\n     * A property.\n     */\n    property: 3,\n    /**\n     * Content\n     */\n    content: 4,\n    /**\n     * A token list.\n     */\n    tokenList: 5,\n    /**\n     * An event.\n     */\n    event: 6,\n});\nconst createHTML = html => html;\nconst fastTrustedType = globalThis.trustedTypes\n    ? globalThis.trustedTypes.createPolicy(\"fast-html\", { createHTML })\n    : { createHTML };\nlet defaultPolicy = Object.freeze({\n    createHTML(value) {\n        return fastTrustedType.createHTML(value);\n    },\n    protect(tagName, aspect, aspectName, sink) {\n        return sink;\n    },\n});\nconst fastPolicy = defaultPolicy;\n/**\n * Common DOM APIs.\n * @public\n */\nexport const DOM = Object.freeze({\n    /**\n     * Gets the dom policy used by the templating system.\n     */\n    get policy() {\n        return defaultPolicy;\n    },\n    /**\n     * Sets the dom policy used by the templating system.\n     * @param policy - The policy to set.\n     * @remarks\n     * This API can only be called once, for security reasons. It should be\n     * called by the application developer at the start of their program.\n     */\n    setPolicy(value) {\n        if (defaultPolicy !== fastPolicy) {\n            throw FAST.error(1201 /* Message.onlySetDOMPolicyOnce */);\n        }\n        defaultPolicy = value;\n    },\n    /**\n     * Sets an attribute value on an element.\n     * @param element - The element to set the attribute value on.\n     * @param attributeName - The attribute name to set.\n     * @param value - The value of the attribute to set.\n     * @remarks\n     * If the value is `null` or `undefined`, the attribute is removed, otherwise\n     * it is set to the provided value using the standard `setAttribute` API.\n     */\n    setAttribute(element, attributeName, value) {\n        value === null || value === undefined\n            ? element.removeAttribute(attributeName)\n            : element.setAttribute(attributeName, value);\n    },\n    /**\n     * Sets a boolean attribute value.\n     * @param element - The element to set the boolean attribute value on.\n     * @param attributeName - The attribute name to set.\n     * @param value - The value of the attribute to set.\n     * @remarks\n     * If the value is true, the attribute is added; otherwise it is removed.\n     */\n    setBooleanAttribute(element, attributeName, value) {\n        value\n            ? element.setAttribute(attributeName, \"\")\n            : element.removeAttribute(attributeName);\n    },\n});\n","import { isFunction, isString, KernelServiceId, } from \"../interfaces.js\";\nimport { createMetadataLocator, FAST, makeSerializationNoop } from \"../platform.js\";\nimport { Updates } from \"./update-queue.js\";\nimport { PropertyChangeNotifier, SubscriberSet } from \"./notifier.js\";\n/**\n * Describes how the source's lifetime relates to its controller's lifetime.\n * @public\n */\nexport const SourceLifetime = Object.freeze({\n    /**\n     * The source to controller lifetime relationship is unknown.\n     */\n    unknown: void 0,\n    /**\n     * The source and controller lifetimes are coupled to one another.\n     * They can/will be GC'd together.\n     */\n    coupled: 1,\n});\n/**\n * Common Observable APIs.\n * @public\n */\nexport const Observable = FAST.getById(KernelServiceId.observable, () => {\n    const queueUpdate = Updates.enqueue;\n    const volatileRegex = /(:|&&|\\|\\||if|\\?\\.)/;\n    const notifierLookup = new WeakMap();\n    let watcher = void 0;\n    let createArrayObserver = (array) => {\n        throw FAST.error(1101 /* Message.needsArrayObservation */);\n    };\n    function getNotifier(source) {\n        var _a;\n        let found = (_a = source.$fastController) !== null && _a !== void 0 ? _a : notifierLookup.get(source);\n        if (found === void 0) {\n            Array.isArray(source)\n                ? (found = createArrayObserver(source))\n                : notifierLookup.set(source, (found = new PropertyChangeNotifier(source)));\n        }\n        return found;\n    }\n    const getAccessors = createMetadataLocator();\n    class DefaultObservableAccessor {\n        constructor(name) {\n            this.name = name;\n            this.field = `_${name}`;\n            this.callback = `${name}Changed`;\n        }\n        getValue(source) {\n            if (watcher !== void 0) {\n                watcher.watch(source, this.name);\n            }\n            return source[this.field];\n        }\n        setValue(source, newValue) {\n            const field = this.field;\n            const oldValue = source[field];\n            if (oldValue !== newValue) {\n                source[field] = newValue;\n                const callback = source[this.callback];\n                if (isFunction(callback)) {\n                    callback.call(source, oldValue, newValue);\n                }\n                getNotifier(source).notify(this.name);\n            }\n        }\n    }\n    class ExpressionNotifierImplementation extends SubscriberSet {\n        constructor(expression, initialSubscriber, isVolatileBinding = false) {\n            super(expression, initialSubscriber);\n            this.expression = expression;\n            this.isVolatileBinding = isVolatileBinding;\n            this.needsRefresh = true;\n            this.needsQueue = true;\n            this.isAsync = true;\n            this.first = this;\n            this.last = null;\n            this.propertySource = void 0;\n            this.propertyName = void 0;\n            this.notifier = void 0;\n            this.next = void 0;\n        }\n        setMode(isAsync) {\n            this.isAsync = this.needsQueue = isAsync;\n        }\n        bind(controller) {\n            this.controller = controller;\n            const value = this.observe(controller.source, controller.context);\n            if (!controller.isBound && this.requiresUnbind(controller)) {\n                controller.onUnbind(this);\n            }\n            return value;\n        }\n        requiresUnbind(controller) {\n            return (controller.sourceLifetime !== SourceLifetime.coupled ||\n                this.first !== this.last ||\n                this.first.propertySource !== controller.source);\n        }\n        unbind(controller) {\n            this.dispose();\n        }\n        observe(source, context) {\n            if (this.needsRefresh && this.last !== null) {\n                this.dispose();\n            }\n            const previousWatcher = watcher;\n            watcher = this.needsRefresh ? this : void 0;\n            this.needsRefresh = this.isVolatileBinding;\n            let result;\n            try {\n                result = this.expression(source, context);\n            }\n            finally {\n                watcher = previousWatcher;\n            }\n            return result;\n        }\n        // backwards compat with v1 kernel\n        disconnect() {\n            this.dispose();\n        }\n        dispose() {\n            if (this.last !== null) {\n                let current = this.first;\n                while (current !== void 0) {\n                    current.notifier.unsubscribe(this, current.propertyName);\n                    current = current.next;\n                }\n                this.last = null;\n                this.needsRefresh = this.needsQueue = this.isAsync;\n            }\n        }\n        watch(propertySource, propertyName) {\n            const prev = this.last;\n            const notifier = getNotifier(propertySource);\n            const current = prev === null ? this.first : {};\n            current.propertySource = propertySource;\n            current.propertyName = propertyName;\n            current.notifier = notifier;\n            notifier.subscribe(this, propertyName);\n            if (prev !== null) {\n                if (!this.needsRefresh) {\n                    // Declaring the variable prior to assignment below circumvents\n                    // a bug in Angular's optimization process causing infinite recursion\n                    // of this watch() method. Details https://github.com/microsoft/fast/issues/4969\n                    let prevValue;\n                    watcher = void 0;\n                    /* eslint-disable-next-line */\n                    prevValue = prev.propertySource[prev.propertyName];\n                    /* eslint-disable-next-line */\n                    watcher = this;\n                    if (propertySource === prevValue) {\n                        this.needsRefresh = true;\n                    }\n                }\n                prev.next = current;\n            }\n            this.last = current;\n        }\n        handleChange() {\n            if (this.needsQueue) {\n                this.needsQueue = false;\n                queueUpdate(this);\n            }\n            else if (!this.isAsync) {\n                this.call();\n            }\n        }\n        call() {\n            if (this.last !== null) {\n                this.needsQueue = this.isAsync;\n                this.notify(this);\n            }\n        }\n        *records() {\n            let next = this.first;\n            while (next !== void 0) {\n                yield next;\n                next = next.next;\n            }\n        }\n    }\n    makeSerializationNoop(ExpressionNotifierImplementation);\n    return Object.freeze({\n        /**\n         * @internal\n         * @param factory - The factory used to create array observers.\n         */\n        setArrayObserverFactory(factory) {\n            createArrayObserver = factory;\n        },\n        /**\n         * Gets a notifier for an object or Array.\n         * @param source - The object or Array to get the notifier for.\n         */\n        getNotifier,\n        /**\n         * Records a property change for a source object.\n         * @param source - The object to record the change against.\n         * @param propertyName - The property to track as changed.\n         */\n        track(source, propertyName) {\n            watcher && watcher.watch(source, propertyName);\n        },\n        /**\n         * Notifies watchers that the currently executing property getter or function is volatile\n         * with respect to its observable dependencies.\n         */\n        trackVolatile() {\n            watcher && (watcher.needsRefresh = true);\n        },\n        /**\n         * Notifies subscribers of a source object of changes.\n         * @param source - the object to notify of changes.\n         * @param args - The change args to pass to subscribers.\n         */\n        notify(source, args) {\n            /* eslint-disable-next-line @typescript-eslint/no-use-before-define */\n            getNotifier(source).notify(args);\n        },\n        /**\n         * Defines an observable property on an object or prototype.\n         * @param target - The target object to define the observable on.\n         * @param nameOrAccessor - The name of the property to define as observable;\n         * or a custom accessor that specifies the property name and accessor implementation.\n         */\n        defineProperty(target, nameOrAccessor) {\n            if (isString(nameOrAccessor)) {\n                nameOrAccessor = new DefaultObservableAccessor(nameOrAccessor);\n            }\n            getAccessors(target).push(nameOrAccessor);\n            Reflect.defineProperty(target, nameOrAccessor.name, {\n                enumerable: true,\n                get() {\n                    return nameOrAccessor.getValue(this);\n                },\n                set(newValue) {\n                    nameOrAccessor.setValue(this, newValue);\n                },\n            });\n        },\n        /**\n         * Finds all the observable accessors defined on the target,\n         * including its prototype chain.\n         * @param target - The target object to search for accessor on.\n         */\n        getAccessors,\n        /**\n         * Creates a {@link ExpressionNotifier} that can watch the\n         * provided {@link Expression} for changes.\n         * @param expression - The binding to observe.\n         * @param initialSubscriber - An initial subscriber to changes in the binding value.\n         * @param isVolatileBinding - Indicates whether the binding's dependency list must be re-evaluated on every value evaluation.\n         */\n        binding(expression, initialSubscriber, isVolatileBinding = this.isVolatileBinding(expression)) {\n            return new ExpressionNotifierImplementation(expression, initialSubscriber, isVolatileBinding);\n        },\n        /**\n         * Determines whether a binding expression is volatile and needs to have its dependency list re-evaluated\n         * on every evaluation of the value.\n         * @param expression - The binding to inspect.\n         */\n        isVolatileBinding(expression) {\n            return volatileRegex.test(expression.toString());\n        },\n    });\n});\n/**\n * Decorator: Defines an observable property on the target.\n * @param target - The target to define the observable on.\n * @param nameOrAccessor - The property name or accessor to define the observable as.\n * @public\n */\nexport function observable(target, nameOrAccessor) {\n    Observable.defineProperty(target, nameOrAccessor);\n}\n/**\n * Decorator: Marks a property getter as having volatile observable dependencies.\n * @param target - The target that the property is defined on.\n * @param name - The property name.\n * @param name - The existing descriptor.\n * @public\n */\nexport function volatile(target, name, descriptor) {\n    return Object.assign({}, descriptor, {\n        get() {\n            Observable.trackVolatile();\n            return descriptor.get.apply(this);\n        },\n    });\n}\nconst contextEvent = FAST.getById(KernelServiceId.contextEvent, () => {\n    let current = null;\n    return {\n        get() {\n            return current;\n        },\n        set(event) {\n            current = event;\n        },\n    };\n});\n/**\n * Provides additional contextual information available to behaviors and expressions.\n * @public\n */\nexport const ExecutionContext = Object.freeze({\n    /**\n     * A default execution context.\n     */\n    default: {\n        index: 0,\n        length: 0,\n        get event() {\n            return ExecutionContext.getEvent();\n        },\n        eventDetail() {\n            return this.event.detail;\n        },\n        eventTarget() {\n            return this.event.target;\n        },\n    },\n    /**\n     * Gets the current event.\n     * @returns An event object.\n     */\n    getEvent() {\n        return contextEvent.get();\n    },\n    /**\n     * Sets the current event.\n     * @param event - An event object.\n     */\n    setEvent(event) {\n        contextEvent.set(event);\n    },\n});\n","import { KernelServiceId } from \"../interfaces.js\";\nimport { FAST } from \"../platform.js\";\n/**\n * The default UpdateQueue.\n * @public\n */\nexport const Updates = FAST.getById(KernelServiceId.updateQueue, () => {\n    const tasks = [];\n    const pendingErrors = [];\n    const rAF = globalThis.requestAnimationFrame;\n    let updateAsync = true;\n    function throwFirstError() {\n        if (pendingErrors.length) {\n            throw pendingErrors.shift();\n        }\n    }\n    function tryRunTask(task) {\n        try {\n            task.call();\n        }\n        catch (error) {\n            if (updateAsync) {\n                pendingErrors.push(error);\n                setTimeout(throwFirstError, 0);\n            }\n            else {\n                tasks.length = 0;\n                throw error;\n            }\n        }\n    }\n    function process() {\n        const capacity = 1024;\n        let index = 0;\n        while (index < tasks.length) {\n            tryRunTask(tasks[index]);\n            index++;\n            // Prevent leaking memory for long chains of recursive calls to `enqueue`.\n            // If we call `enqueue` within a task scheduled by `enqueue`, the queue will\n            // grow, but to avoid an O(n) walk for every task we execute, we don't\n            // shift tasks off the queue after they have been executed.\n            // Instead, we periodically shift 1024 tasks off the queue.\n            if (index > capacity) {\n                // Manually shift all values starting at the index back to the\n                // beginning of the queue.\n                for (let scan = 0, newLength = tasks.length - index; scan < newLength; scan++) {\n                    tasks[scan] = tasks[scan + index];\n                }\n                tasks.length -= index;\n                index = 0;\n            }\n        }\n        tasks.length = 0;\n    }\n    function enqueue(callable) {\n        tasks.push(callable);\n        if (tasks.length < 2) {\n            updateAsync ? rAF(process) : process();\n        }\n    }\n    return Object.freeze({\n        enqueue,\n        next: () => new Promise(enqueue),\n        process,\n        setMode: (isAsync) => (updateAsync = isAsync),\n    });\n});\n","/**\n * An implementation of {@link Notifier} that efficiently keeps track of\n * subscribers interested in a specific change notification on an\n * observable subject.\n *\n * @remarks\n * This set is optimized for the most common scenario of 1 or 2 subscribers.\n * With this in mind, it can store a subscriber in an internal field, allowing it to avoid Array#push operations.\n * If the set ever exceeds two subscribers, it upgrades to an array automatically.\n * @public\n */\nexport class SubscriberSet {\n    /**\n     * Creates an instance of SubscriberSet for the specified subject.\n     * @param subject - The subject that subscribers will receive notifications from.\n     * @param initialSubscriber - An initial subscriber to changes.\n     */\n    constructor(subject, initialSubscriber) {\n        this.sub1 = void 0;\n        this.sub2 = void 0;\n        this.spillover = void 0;\n        this.subject = subject;\n        this.sub1 = initialSubscriber;\n    }\n    /**\n     * Checks whether the provided subscriber has been added to this set.\n     * @param subscriber - The subscriber to test for inclusion in this set.\n     */\n    has(subscriber) {\n        return this.spillover === void 0\n            ? this.sub1 === subscriber || this.sub2 === subscriber\n            : this.spillover.indexOf(subscriber) !== -1;\n    }\n    /**\n     * Subscribes to notification of changes in an object's state.\n     * @param subscriber - The object that is subscribing for change notification.\n     */\n    subscribe(subscriber) {\n        const spillover = this.spillover;\n        if (spillover === void 0) {\n            if (this.has(subscriber)) {\n                return;\n            }\n            if (this.sub1 === void 0) {\n                this.sub1 = subscriber;\n                return;\n            }\n            if (this.sub2 === void 0) {\n                this.sub2 = subscriber;\n                return;\n            }\n            this.spillover = [this.sub1, this.sub2, subscriber];\n            this.sub1 = void 0;\n            this.sub2 = void 0;\n        }\n        else {\n            const index = spillover.indexOf(subscriber);\n            if (index === -1) {\n                spillover.push(subscriber);\n            }\n        }\n    }\n    /**\n     * Unsubscribes from notification of changes in an object's state.\n     * @param subscriber - The object that is unsubscribing from change notification.\n     */\n    unsubscribe(subscriber) {\n        const spillover = this.spillover;\n        if (spillover === void 0) {\n            if (this.sub1 === subscriber) {\n                this.sub1 = void 0;\n            }\n            else if (this.sub2 === subscriber) {\n                this.sub2 = void 0;\n            }\n        }\n        else {\n            const index = spillover.indexOf(subscriber);\n            if (index !== -1) {\n                spillover.splice(index, 1);\n            }\n        }\n    }\n    /**\n     * Notifies all subscribers.\n     * @param args - Data passed along to subscribers during notification.\n     */\n    notify(args) {\n        const spillover = this.spillover;\n        const subject = this.subject;\n        if (spillover === void 0) {\n            const sub1 = this.sub1;\n            const sub2 = this.sub2;\n            if (sub1 !== void 0) {\n                sub1.handleChange(subject, args);\n            }\n            if (sub2 !== void 0) {\n                sub2.handleChange(subject, args);\n            }\n        }\n        else {\n            for (let i = 0, ii = spillover.length; i < ii; ++i) {\n                spillover[i].handleChange(subject, args);\n            }\n        }\n    }\n}\n/**\n * An implementation of Notifier that allows subscribers to be notified\n * of individual property changes on an object.\n * @public\n */\nexport class PropertyChangeNotifier {\n    /**\n     * Creates an instance of PropertyChangeNotifier for the specified subject.\n     * @param subject - The object that subscribers will receive notifications for.\n     */\n    constructor(subject) {\n        this.subscribers = {};\n        this.subjectSubscribers = null;\n        this.subject = subject;\n    }\n    /**\n     * Notifies all subscribers, based on the specified property.\n     * @param propertyName - The property name, passed along to subscribers during notification.\n     */\n    notify(propertyName) {\n        var _a, _b;\n        (_a = this.subscribers[propertyName]) === null || _a === void 0 ? void 0 : _a.notify(propertyName);\n        (_b = this.subjectSubscribers) === null || _b === void 0 ? void 0 : _b.notify(propertyName);\n    }\n    /**\n     * Subscribes to notification of changes in an object's state.\n     * @param subscriber - The object that is subscribing for change notification.\n     * @param propertyToWatch - The name of the property that the subscriber is interested in watching for changes.\n     */\n    subscribe(subscriber, propertyToWatch) {\n        var _a, _b;\n        let subscribers;\n        if (propertyToWatch) {\n            subscribers =\n                (_a = this.subscribers[propertyToWatch]) !== null && _a !== void 0 ? _a : (this.subscribers[propertyToWatch] = new SubscriberSet(this.subject));\n        }\n        else {\n            subscribers =\n                (_b = this.subjectSubscribers) !== null && _b !== void 0 ? _b : (this.subjectSubscribers = new SubscriberSet(this.subject));\n        }\n        subscribers.subscribe(subscriber);\n    }\n    /**\n     * Unsubscribes from notification of changes in an object's state.\n     * @param subscriber - The object that is unsubscribing from change notification.\n     * @param propertyToUnwatch - The name of the property that the subscriber is no longer interested in watching.\n     */\n    unsubscribe(subscriber, propertyToUnwatch) {\n        var _a, _b;\n        if (propertyToUnwatch) {\n            (_a = this.subscribers[propertyToUnwatch]) === null || _a === void 0 ? void 0 : _a.unsubscribe(subscriber);\n        }\n        else {\n            (_b = this.subjectSubscribers) === null || _b === void 0 ? void 0 : _b.unsubscribe(subscriber);\n        }\n    }\n}\n","import { emptyArray } from \"../platform.js\";\nimport { SubscriberSet } from \"./notifier.js\";\nimport { Observable } from \"./observable.js\";\nimport { Updates } from \"./update-queue.js\";\n/**\n * A splice map is a representation of how a previous array of items\n * was transformed into a new array of items. Conceptually it is a list of\n * tuples of\n *\n *   (index, removed, addedCount)\n *\n * which are kept in ascending index order of. The tuple represents that at\n * the |index|, |removed| sequence of items were removed, and counting forward\n * from |index|, |addedCount| items were added.\n * @public\n */\nexport class Splice {\n    /**\n     * Creates a splice.\n     * @param index - The index that the splice occurs at.\n     * @param removed - The items that were removed.\n     * @param addedCount - The  number of items that were added.\n     */\n    constructor(index, removed, addedCount) {\n        this.index = index;\n        this.removed = removed;\n        this.addedCount = addedCount;\n    }\n    /**\n     * Adjusts the splice index based on the provided array.\n     * @param array - The array to adjust to.\n     * @returns The same splice, mutated based on the reference array.\n     */\n    adjustTo(array) {\n        let index = this.index;\n        const arrayLength = array.length;\n        if (index > arrayLength) {\n            index = arrayLength - this.addedCount;\n        }\n        else if (index < 0) {\n            index = arrayLength + this.removed.length + index - this.addedCount;\n        }\n        this.index = index < 0 ? 0 : index;\n        return this;\n    }\n}\n/**\n * Indicates what level of feature support the splice\n * strategy provides.\n * @public\n */\nexport const SpliceStrategySupport = Object.freeze({\n    /**\n     * Only supports resets.\n     */\n    reset: 1,\n    /**\n     * Supports tracking splices and resets.\n     */\n    splice: 2,\n    /**\n     * Supports tracking splices and resets, while applying some form\n     * of optimization, such as merging, to the splices.\n     */\n    optimized: 3,\n});\nconst reset = new Splice(0, emptyArray, 0);\nreset.reset = true;\nconst resetSplices = [reset];\n// Note: This function is *based* on the computation of the Levenshtein\n// \"edit\" distance. The one change is that \"updates\" are treated as two\n// edits - not one. With Array splices, an update is really a delete\n// followed by an add. By retaining this, we optimize for \"keeping\" the\n// maximum array items in the original array. For example:\n//\n//   'xxxx123' to '123yyyy'\n//\n// With 1-edit updates, the shortest path would be just to update all seven\n// characters. With 2-edit updates, we delete 4, leave 3, and add 4. This\n// leaves the substring '123' intact.\nfunction calcEditDistances(current, currentStart, currentEnd, old, oldStart, oldEnd) {\n    // \"Deletion\" columns\n    const rowCount = oldEnd - oldStart + 1;\n    const columnCount = currentEnd - currentStart + 1;\n    const distances = new Array(rowCount);\n    let north;\n    let west;\n    // \"Addition\" rows. Initialize null column.\n    for (let i = 0; i < rowCount; ++i) {\n        distances[i] = new Array(columnCount);\n        distances[i][0] = i;\n    }\n    // Initialize null row\n    for (let j = 0; j < columnCount; ++j) {\n        distances[0][j] = j;\n    }\n    for (let i = 1; i < rowCount; ++i) {\n        for (let j = 1; j < columnCount; ++j) {\n            if (current[currentStart + j - 1] === old[oldStart + i - 1]) {\n                distances[i][j] = distances[i - 1][j - 1];\n            }\n            else {\n                north = distances[i - 1][j] + 1;\n                west = distances[i][j - 1] + 1;\n                distances[i][j] = north < west ? north : west;\n            }\n        }\n    }\n    return distances;\n}\n// This starts at the final weight, and walks \"backward\" by finding\n// the minimum previous weight recursively until the origin of the weight\n// matrix.\nfunction spliceOperationsFromEditDistances(distances) {\n    let i = distances.length - 1;\n    let j = distances[0].length - 1;\n    let current = distances[i][j];\n    const edits = [];\n    while (i > 0 || j > 0) {\n        if (i === 0) {\n            edits.push(2 /* Edit.add */);\n            j--;\n            continue;\n        }\n        if (j === 0) {\n            edits.push(3 /* Edit.delete */);\n            i--;\n            continue;\n        }\n        const northWest = distances[i - 1][j - 1];\n        const west = distances[i - 1][j];\n        const north = distances[i][j - 1];\n        let min;\n        if (west < north) {\n            min = west < northWest ? west : northWest;\n        }\n        else {\n            min = north < northWest ? north : northWest;\n        }\n        if (min === northWest) {\n            if (northWest === current) {\n                edits.push(0 /* Edit.leave */);\n            }\n            else {\n                edits.push(1 /* Edit.update */);\n                current = northWest;\n            }\n            i--;\n            j--;\n        }\n        else if (min === west) {\n            edits.push(3 /* Edit.delete */);\n            i--;\n            current = west;\n        }\n        else {\n            edits.push(2 /* Edit.add */);\n            j--;\n            current = north;\n        }\n    }\n    return edits.reverse();\n}\nfunction sharedPrefix(current, old, searchLength) {\n    for (let i = 0; i < searchLength; ++i) {\n        if (current[i] !== old[i]) {\n            return i;\n        }\n    }\n    return searchLength;\n}\nfunction sharedSuffix(current, old, searchLength) {\n    let index1 = current.length;\n    let index2 = old.length;\n    let count = 0;\n    while (count < searchLength && current[--index1] === old[--index2]) {\n        count++;\n    }\n    return count;\n}\nfunction intersect(start1, end1, start2, end2) {\n    // Disjoint\n    if (end1 < start2 || end2 < start1) {\n        return -1;\n    }\n    // Adjacent\n    if (end1 === start2 || end2 === start1) {\n        return 0;\n    }\n    // Non-zero intersect, span1 first\n    if (start1 < start2) {\n        if (end1 < end2) {\n            return end1 - start2; // Overlap\n        }\n        return end2 - start2; // Contained\n    }\n    // Non-zero intersect, span2 first\n    if (end2 < end1) {\n        return end2 - start1; // Overlap\n    }\n    return end1 - start1; // Contained\n}\n/**\n * @remarks\n * Lacking individual splice mutation information, the minimal set of\n * splices can be synthesized given the previous state and final state of an\n * array. The basic approach is to calculate the edit distance matrix and\n * choose the shortest path through it.\n *\n * Complexity: O(l * p)\n *   l: The length of the current array\n *   p: The length of the old array\n */\nfunction calc(current, currentStart, currentEnd, old, oldStart, oldEnd) {\n    let prefixCount = 0;\n    let suffixCount = 0;\n    const minLength = Math.min(currentEnd - currentStart, oldEnd - oldStart);\n    if (currentStart === 0 && oldStart === 0) {\n        prefixCount = sharedPrefix(current, old, minLength);\n    }\n    if (currentEnd === current.length && oldEnd === old.length) {\n        suffixCount = sharedSuffix(current, old, minLength - prefixCount);\n    }\n    currentStart += prefixCount;\n    oldStart += prefixCount;\n    currentEnd -= suffixCount;\n    oldEnd -= suffixCount;\n    if (currentEnd - currentStart === 0 && oldEnd - oldStart === 0) {\n        return emptyArray;\n    }\n    if (currentStart === currentEnd) {\n        const splice = new Splice(currentStart, [], 0);\n        while (oldStart < oldEnd) {\n            splice.removed.push(old[oldStart++]);\n        }\n        return [splice];\n    }\n    else if (oldStart === oldEnd) {\n        return [new Splice(currentStart, [], currentEnd - currentStart)];\n    }\n    const ops = spliceOperationsFromEditDistances(calcEditDistances(current, currentStart, currentEnd, old, oldStart, oldEnd));\n    const splices = [];\n    let splice = void 0;\n    let index = currentStart;\n    let oldIndex = oldStart;\n    for (let i = 0; i < ops.length; ++i) {\n        switch (ops[i]) {\n            case 0 /* Edit.leave */:\n                if (splice !== void 0) {\n                    splices.push(splice);\n                    splice = void 0;\n                }\n                index++;\n                oldIndex++;\n                break;\n            case 1 /* Edit.update */:\n                if (splice === void 0) {\n                    splice = new Splice(index, [], 0);\n                }\n                splice.addedCount++;\n                index++;\n                splice.removed.push(old[oldIndex]);\n                oldIndex++;\n                break;\n            case 2 /* Edit.add */:\n                if (splice === void 0) {\n                    splice = new Splice(index, [], 0);\n                }\n                splice.addedCount++;\n                index++;\n                break;\n            case 3 /* Edit.delete */:\n                if (splice === void 0) {\n                    splice = new Splice(index, [], 0);\n                }\n                splice.removed.push(old[oldIndex]);\n                oldIndex++;\n                break;\n            // no default\n        }\n    }\n    if (splice !== void 0) {\n        splices.push(splice);\n    }\n    return splices;\n}\nfunction merge(splice, splices) {\n    let inserted = false;\n    let insertionOffset = 0;\n    for (let i = 0; i < splices.length; i++) {\n        const current = splices[i];\n        current.index += insertionOffset;\n        if (inserted) {\n            continue;\n        }\n        const intersectCount = intersect(splice.index, splice.index + splice.removed.length, current.index, current.index + current.addedCount);\n        if (intersectCount >= 0) {\n            // Merge the two splices\n            splices.splice(i, 1);\n            i--;\n            insertionOffset -= current.addedCount - current.removed.length;\n            splice.addedCount += current.addedCount - intersectCount;\n            const deleteCount = splice.removed.length + current.removed.length - intersectCount;\n            if (!splice.addedCount && !deleteCount) {\n                // merged splice is a noop. discard.\n                inserted = true;\n            }\n            else {\n                let currentRemoved = current.removed;\n                if (splice.index < current.index) {\n                    // some prefix of splice.removed is prepended to current.removed.\n                    const prepend = splice.removed.slice(0, current.index - splice.index);\n                    prepend.push(...currentRemoved);\n                    currentRemoved = prepend;\n                }\n                if (splice.index + splice.removed.length >\n                    current.index + current.addedCount) {\n                    // some suffix of splice.removed is appended to current.removed.\n                    const append = splice.removed.slice(current.index + current.addedCount - splice.index);\n                    currentRemoved.push(...append);\n                }\n                splice.removed = currentRemoved;\n                if (current.index < splice.index) {\n                    splice.index = current.index;\n                }\n            }\n        }\n        else if (splice.index < current.index) {\n            // Insert splice here.\n            inserted = true;\n            splices.splice(i, 0, splice);\n            i++;\n            const offset = splice.addedCount - splice.removed.length;\n            current.index += offset;\n            insertionOffset += offset;\n        }\n    }\n    if (!inserted) {\n        splices.push(splice);\n    }\n}\nfunction project(array, changes) {\n    let splices = [];\n    const initialSplices = [];\n    for (let i = 0, ii = changes.length; i < ii; i++) {\n        merge(changes[i], initialSplices);\n    }\n    for (let i = 0, ii = initialSplices.length; i < ii; ++i) {\n        const splice = initialSplices[i];\n        if (splice.addedCount === 1 && splice.removed.length === 1) {\n            if (splice.removed[0] !== array[splice.index]) {\n                splices.push(splice);\n            }\n            continue;\n        }\n        splices = splices.concat(calc(array, splice.index, splice.index + splice.addedCount, splice.removed, 0, splice.removed.length));\n    }\n    return splices;\n}\n/**\n * A SpliceStrategy that attempts to merge all splices into the minimal set of\n * splices needed to represent the change from the old array to the new array.\n * @public\n */\nlet defaultSpliceStrategy = Object.freeze({\n    support: SpliceStrategySupport.optimized,\n    normalize(previous, current, changes) {\n        if (previous === void 0) {\n            if (changes === void 0) {\n                return emptyArray;\n            }\n            return project(current, changes);\n        }\n        return resetSplices;\n    },\n    pop(array, observer, pop, args) {\n        const notEmpty = array.length > 0;\n        const result = pop.apply(array, args);\n        if (notEmpty) {\n            observer.addSplice(new Splice(array.length, [result], 0));\n        }\n        return result;\n    },\n    push(array, observer, push, args) {\n        const result = push.apply(array, args);\n        observer.addSplice(new Splice(array.length - args.length, [], args.length).adjustTo(array));\n        return result;\n    },\n    reverse(array, observer, reverse, args) {\n        const result = reverse.apply(array, args);\n        observer.reset(array);\n        return result;\n    },\n    shift(array, observer, shift, args) {\n        const notEmpty = array.length > 0;\n        const result = shift.apply(array, args);\n        if (notEmpty) {\n            observer.addSplice(new Splice(0, [result], 0));\n        }\n        return result;\n    },\n    sort(array, observer, sort, args) {\n        const result = sort.apply(array, args);\n        observer.reset(array);\n        return result;\n    },\n    splice(array, observer, splice, args) {\n        const result = splice.apply(array, args);\n        observer.addSplice(new Splice(+args[0], result, args.length > 2 ? args.length - 2 : 0).adjustTo(array));\n        return result;\n    },\n    unshift(array, observer, unshift, args) {\n        const result = unshift.apply(array, args);\n        observer.addSplice(new Splice(0, [], args.length).adjustTo(array));\n        return result;\n    },\n});\n/**\n * Functionality related to tracking changes in arrays.\n * @public\n */\nexport const SpliceStrategy = Object.freeze({\n    /**\n     * A set of changes that represent a full array reset.\n     */\n    reset: resetSplices,\n    /**\n     * Sets the default strategy to use for array observers.\n     * @param strategy - The splice strategy to use.\n     */\n    setDefaultStrategy(strategy) {\n        defaultSpliceStrategy = strategy;\n    },\n});\nfunction setNonEnumerable(target, property, value) {\n    Reflect.defineProperty(target, property, {\n        value,\n        enumerable: false,\n    });\n}\nclass DefaultArrayObserver extends SubscriberSet {\n    constructor(subject) {\n        super(subject);\n        this.oldCollection = void 0;\n        this.splices = void 0;\n        this.needsQueue = true;\n        this._strategy = null;\n        this._lengthObserver = void 0;\n        this.call = this.flush;\n        setNonEnumerable(subject, \"$fastController\", this);\n    }\n    get strategy() {\n        return this._strategy;\n    }\n    set strategy(value) {\n        this._strategy = value;\n    }\n    get lengthObserver() {\n        let observer = this._lengthObserver;\n        if (observer === void 0) {\n            const array = this.subject;\n            this._lengthObserver = observer = {\n                length: array.length,\n                handleChange() {\n                    if (this.length !== array.length) {\n                        this.length = array.length;\n                        Observable.notify(observer, \"length\");\n                    }\n                },\n            };\n            this.subscribe(observer);\n        }\n        return observer;\n    }\n    subscribe(subscriber) {\n        this.flush();\n        super.subscribe(subscriber);\n    }\n    addSplice(splice) {\n        if (this.splices === void 0) {\n            this.splices = [splice];\n        }\n        else {\n            this.splices.push(splice);\n        }\n        this.enqueue();\n    }\n    reset(oldCollection) {\n        this.oldCollection = oldCollection;\n        this.enqueue();\n    }\n    flush() {\n        var _a;\n        const splices = this.splices;\n        const oldCollection = this.oldCollection;\n        if (splices === void 0 && oldCollection === void 0) {\n            return;\n        }\n        this.needsQueue = true;\n        this.splices = void 0;\n        this.oldCollection = void 0;\n        this.notify(((_a = this._strategy) !== null && _a !== void 0 ? _a : defaultSpliceStrategy).normalize(oldCollection, this.subject, splices));\n    }\n    enqueue() {\n        if (this.needsQueue) {\n            this.needsQueue = false;\n            Updates.enqueue(this);\n        }\n    }\n}\nlet enabled = false;\n/**\n * An observer for arrays.\n * @public\n */\nexport const ArrayObserver = Object.freeze({\n    /**\n     * Enables the array observation mechanism.\n     * @remarks\n     * Array observation is enabled automatically when using the\n     * {@link RepeatDirective}, so calling this API manually is\n     * not typically necessary.\n     */\n    enable() {\n        if (enabled) {\n            return;\n        }\n        enabled = true;\n        Observable.setArrayObserverFactory((collection) => new DefaultArrayObserver(collection));\n        const proto = Array.prototype;\n        if (!proto.$fastPatch) {\n            setNonEnumerable(proto, \"$fastPatch\", 1);\n            [\n                proto.pop,\n                proto.push,\n                proto.reverse,\n                proto.shift,\n                proto.sort,\n                proto.splice,\n                proto.unshift,\n            ].forEach(method => {\n                proto[method.name] = function (...args) {\n                    var _a;\n                    const o = this.$fastController;\n                    return o === void 0\n                        ? method.apply(this, args)\n                        : ((_a = o.strategy) !== null && _a !== void 0 ? _a : defaultSpliceStrategy)[method.name](this, o, method, args);\n                };\n            });\n        }\n    },\n});\n/**\n * Enables observing the length of an array.\n * @param array - The array to observe the length of.\n * @returns The length of the array.\n * @public\n */\nexport function lengthOf(array) {\n    if (!array) {\n        return 0;\n    }\n    let arrayObserver = array.$fastController;\n    if (arrayObserver === void 0) {\n        ArrayObserver.enable();\n        arrayObserver = Observable.getNotifier(array);\n    }\n    Observable.track(arrayObserver.lengthObserver, \"length\");\n    return array.length;\n}\n","/**\n * Captures a binding expression along with related information and capabilities.\n *\n * @public\n */\nexport class Binding {\n    /**\n     * Creates a binding.\n     * @param evaluate - Evaluates the binding.\n     * @param policy - The security policy to associate with this binding.\n     * @param isVolatile - Indicates whether the binding is volatile.\n     */\n    constructor(evaluate, policy, isVolatile = false) {\n        this.evaluate = evaluate;\n        this.policy = policy;\n        this.isVolatile = isVolatile;\n    }\n}\n","import { Observable } from \"../observation/observable.js\";\nimport { Binding } from \"./binding.js\";\nclass OneWayBinding extends Binding {\n    createObserver(subscriber) {\n        return Observable.binding(this.evaluate, subscriber, this.isVolatile);\n    }\n}\n/**\n * Creates an standard binding.\n * @param expression - The binding to refresh when changed.\n * @param policy - The security policy to associate with th binding.\n * @param isVolatile - Indicates whether the binding is volatile or not.\n * @returns A binding configuration.\n * @public\n */\nexport function oneWay(expression, policy, isVolatile = Observable.isVolatileBinding(expression)) {\n    return new OneWayBinding(expression, policy, isVolatile);\n}\n/**\n * Creates an event listener binding.\n * @param expression - The binding to invoke when the event is raised.\n * @param options - Event listener options.\n * @returns A binding configuration.\n * @public\n */\nexport function listener(expression, options) {\n    const config = new OneWayBinding(expression);\n    config.options = options;\n    return config;\n}\n","import { makeSerializationNoop } from \"../platform.js\";\nimport { Binding } from \"./binding.js\";\nclass OneTimeBinding extends Binding {\n    createObserver() {\n        return this;\n    }\n    bind(controller) {\n        return this.evaluate(controller.source, controller.context);\n    }\n}\nmakeSerializationNoop(OneTimeBinding);\n/**\n * Creates a one time binding\n * @param expression - The binding to refresh when signaled.\n * @param policy - The security policy to associate with th binding.\n * @returns A binding configuration.\n * @public\n */\nexport function oneTime(expression, policy) {\n    return new OneTimeBinding(expression, policy);\n}\n","import { isFunction } from \"../interfaces.js\";\nimport { Binding } from \"./binding.js\";\nimport { oneWay } from \"./one-way.js\";\nimport { oneTime } from \"./one-time.js\";\n/**\n * Normalizes the input value into a binding.\n * @param value - The value to create the default binding for.\n * @returns A binding configuration for the provided value.\n * @public\n */\nexport function normalizeBinding(value) {\n    return isFunction(value)\n        ? oneWay(value)\n        : value instanceof Binding\n            ? value\n            : oneTime(() => value);\n}\n","let DefaultStyleStrategy;\nfunction reduceStyles(styles) {\n    return styles\n        .map((x) => x instanceof ElementStyles ? reduceStyles(x.styles) : [x])\n        .reduce((prev, curr) => prev.concat(curr), []);\n}\n/**\n * Represents styles that can be applied to a custom element.\n * @public\n */\nexport class ElementStyles {\n    /**\n     * Creates an instance of ElementStyles.\n     * @param styles - The styles that will be associated with elements.\n     */\n    constructor(styles) {\n        this.styles = styles;\n        this.targets = new WeakSet();\n        this._strategy = null;\n        this.behaviors = styles\n            .map((x) => x instanceof ElementStyles ? x.behaviors : null)\n            .reduce((prev, curr) => (curr === null ? prev : prev === null ? curr : prev.concat(curr)), null);\n    }\n    /**\n     * Gets the StyleStrategy associated with these element styles.\n     */\n    get strategy() {\n        if (this._strategy === null) {\n            this.withStrategy(DefaultStyleStrategy);\n        }\n        return this._strategy;\n    }\n    /** @internal */\n    addStylesTo(target) {\n        this.strategy.addStylesTo(target);\n        this.targets.add(target);\n    }\n    /** @internal */\n    removeStylesFrom(target) {\n        this.strategy.removeStylesFrom(target);\n        this.targets.delete(target);\n    }\n    /** @internal */\n    isAttachedTo(target) {\n        return this.targets.has(target);\n    }\n    /**\n     * Associates behaviors with this set of styles.\n     * @param behaviors - The behaviors to associate.\n     */\n    withBehaviors(...behaviors) {\n        this.behaviors =\n            this.behaviors === null ? behaviors : this.behaviors.concat(behaviors);\n        return this;\n    }\n    /**\n     * Sets the strategy that handles adding/removing these styles for an element.\n     * @param strategy - The strategy to use.\n     */\n    withStrategy(Strategy) {\n        this._strategy = new Strategy(reduceStyles(this.styles));\n        return this;\n    }\n    /**\n     * Sets the default strategy type to use when creating style strategies.\n     * @param Strategy - The strategy type to construct.\n     */\n    static setDefaultStrategy(Strategy) {\n        DefaultStyleStrategy = Strategy;\n    }\n    /**\n     * Normalizes a set of composable style options.\n     * @param styles - The style options to normalize.\n     * @returns A singular ElementStyles instance or undefined.\n     */\n    static normalize(styles) {\n        return styles === void 0\n            ? void 0\n            : Array.isArray(styles)\n                ? new ElementStyles(styles)\n                : styles instanceof ElementStyles\n                    ? styles\n                    : new ElementStyles([styles]);\n    }\n}\n/**\n * Indicates whether the DOM supports the adoptedStyleSheets feature.\n */\nElementStyles.supportsAdoptedStyleSheets = Array.isArray(document.adoptedStyleSheets) &&\n    \"replace\" in CSSStyleSheet.prototype;\n","import { isFunction, isString } from \"../interfaces.js\";\nimport { Binding } from \"../binding/binding.js\";\nimport { oneWay } from \"../binding/one-way.js\";\nimport { CSSDirective } from \"./css-directive.js\";\nimport { ElementStyles } from \"./element-styles.js\";\nimport { CSSBindingDirective } from \"./css-binding-directive.js\";\nconst marker = `${Math.random().toString(36).substring(2, 8)}`;\nlet varId = 0;\nconst nextCSSVariable = () => `--v${marker}${++varId}`;\nfunction collectStyles(strings, values) {\n    const styles = [];\n    let cssString = \"\";\n    const behaviors = [];\n    const add = (behavior) => {\n        behaviors.push(behavior);\n    };\n    for (let i = 0, ii = strings.length - 1; i < ii; ++i) {\n        cssString += strings[i];\n        let value = values[i];\n        if (isFunction(value)) {\n            value = new CSSBindingDirective(oneWay(value), nextCSSVariable()).createCSS(add);\n        }\n        else if (value instanceof Binding) {\n            value = new CSSBindingDirective(value, nextCSSVariable()).createCSS(add);\n        }\n        else if (CSSDirective.getForInstance(value) !== void 0) {\n            value = value.createCSS(add);\n        }\n        if (value instanceof ElementStyles || value instanceof CSSStyleSheet) {\n            if (cssString.trim() !== \"\") {\n                styles.push(cssString);\n                cssString = \"\";\n            }\n            styles.push(value);\n        }\n        else {\n            cssString += value;\n        }\n    }\n    cssString += strings[strings.length - 1];\n    if (cssString.trim() !== \"\") {\n        styles.push(cssString);\n    }\n    return {\n        styles,\n        behaviors,\n    };\n}\n/**\n * Transforms a template literal string into styles.\n * @param strings - The string fragments that are interpolated with the values.\n * @param values - The values that are interpolated with the string fragments.\n * @remarks\n * The css helper supports interpolation of strings and ElementStyle instances.\n * @public\n */\nexport const css = ((strings, ...values) => {\n    const { styles, behaviors } = collectStyles(strings, values);\n    const elementStyles = new ElementStyles(styles);\n    return behaviors.length ? elementStyles.withBehaviors(...behaviors) : elementStyles;\n});\nclass CSSPartial {\n    constructor(styles, behaviors) {\n        this.behaviors = behaviors;\n        this.css = \"\";\n        const stylesheets = styles.reduce((accumulated, current) => {\n            if (isString(current)) {\n                this.css += current;\n            }\n            else {\n                accumulated.push(current);\n            }\n            return accumulated;\n        }, []);\n        if (stylesheets.length) {\n            this.styles = new ElementStyles(stylesheets);\n        }\n    }\n    createCSS(add) {\n        this.behaviors.forEach(add);\n        if (this.styles) {\n            add(this);\n        }\n        return this.css;\n    }\n    addedCallback(controller) {\n        controller.addStyles(this.styles);\n    }\n    removedCallback(controller) {\n        controller.removeStyles(this.styles);\n    }\n}\nCSSDirective.define(CSSPartial);\ncss.partial = (strings, ...values) => {\n    const { styles, behaviors } = collectStyles(strings, values);\n    return new CSSPartial(styles, behaviors);\n};\n","import { createTypeRegistry } from \"../platform.js\";\nconst registry = createTypeRegistry();\n/**\n * Instructs the css engine to provide dynamic styles or\n * associate behaviors with styles.\n * @public\n */\nexport const CSSDirective = Object.freeze({\n    /**\n     * Gets the directive definition associated with the instance.\n     * @param instance - The directive instance to retrieve the definition for.\n     */\n    getForInstance: registry.getForInstance,\n    /**\n     * Gets the directive definition associated with the specified type.\n     * @param type - The directive type to retrieve the definition for.\n     */\n    getByType: registry.getByType,\n    /**\n     * Defines a CSSDirective.\n     * @param type - The type to define as a directive.\n     */\n    define(type) {\n        registry.register({ type });\n        return type;\n    },\n});\n/**\n * Decorator: Defines a CSSDirective.\n * @public\n */\nexport function cssDirective() {\n    /* eslint-disable-next-line @typescript-eslint/explicit-function-return-type */\n    return function (type) {\n        CSSDirective.define(type);\n    };\n}\n","import { CSSDirective } from \"./css-directive.js\";\nfunction handleChange(directive, controller, observer) {\n    controller.source.style.setProperty(directive.targetAspect, observer.bind(controller));\n}\n/**\n * Enables bindings in CSS.\n *\n * @public\n */\nexport class CSSBindingDirective {\n    /**\n     * Creates an instance of CSSBindingDirective.\n     * @param dataBinding - The binding to use in CSS.\n     * @param targetAspect - The CSS property to target.\n     */\n    constructor(dataBinding, targetAspect) {\n        this.dataBinding = dataBinding;\n        this.targetAspect = targetAspect;\n    }\n    /**\n     * Creates a CSS fragment to interpolate into the CSS document.\n     * @returns - the string to interpolate into CSS\n     */\n    createCSS(add) {\n        add(this);\n        return `var(${this.targetAspect})`;\n    }\n    /**\n     * Executed when this behavior is attached to a controller.\n     * @param controller - Controls the behavior lifecycle.\n     */\n    addedCallback(controller) {\n        var _a;\n        const element = controller.source;\n        if (!element.$cssBindings) {\n            element.$cssBindings = new Map();\n            const setAttribute = element.setAttribute;\n            element.setAttribute = (attr, value) => {\n                setAttribute.call(element, attr, value);\n                if (attr === \"style\") {\n                    element.$cssBindings.forEach((v, k) => handleChange(k, v.controller, v.observer));\n                }\n            };\n        }\n        const observer = (_a = controller[this.targetAspect]) !== null && _a !== void 0 ? _a : (controller[this.targetAspect] = this.dataBinding.createObserver(this, this));\n        observer.controller = controller;\n        controller.source.$cssBindings.set(this, { controller, observer });\n    }\n    /**\n     * Executed when this behavior's host is connected.\n     * @param controller - Controls the behavior lifecycle.\n     */\n    connectedCallback(controller) {\n        handleChange(this, controller, controller[this.targetAspect]);\n    }\n    /**\n     * Executed when this behavior is detached from a controller.\n     * @param controller - Controls the behavior lifecycle.\n     */\n    removedCallback(controller) {\n        if (controller.source.$cssBindings) {\n            controller.source.$cssBindings.delete(this);\n        }\n    }\n    /**\n     * Called when a subject this instance has subscribed to changes.\n     * @param subject - The subject of the change.\n     * @param args - The event args detailing the change that occurred.\n     *\n     * @internal\n     */\n    handleChange(_, observer) {\n        handleChange(this, observer.controller, observer);\n    }\n}\nCSSDirective.define(CSSBindingDirective);\n","export {};\n","export {};\n","import { isFunction, isString } from \"../interfaces.js\";\nimport { Binding } from \"../binding/binding.js\";\nimport { FAST, makeSerializationNoop } from \"../platform.js\";\nimport { oneWay } from \"../binding/one-way.js\";\nimport { oneTime } from \"../binding/one-time.js\";\nimport { HTMLBindingDirective } from \"./html-binding-directive.js\";\nimport { Compiler } from \"./compiler.js\";\nimport { HTMLDirective, } from \"./html-directive.js\";\nimport { nextId } from \"./markup.js\";\n// Much thanks to LitHTML for working this out!\nconst lastAttributeNameRegex = \n/* eslint-disable-next-line no-control-regex */\n/([ \\x09\\x0a\\x0c\\x0d])([^\\0-\\x1F\\x7F-\\x9F \"'>=/]+)([ \\x09\\x0a\\x0c\\x0d]*=[ \\x09\\x0a\\x0c\\x0d]*(?:[^ \\x09\\x0a\\x0c\\x0d\"'`<>=]*|\"[^\"]*|'[^']*))$/;\nconst noFactories = Object.create(null);\n/**\n * Inlines a template into another template.\n * @public\n */\nexport class InlineTemplateDirective {\n    /**\n     * Creates an instance of InlineTemplateDirective.\n     * @param template - The template to inline.\n     */\n    constructor(html, factories = noFactories) {\n        this.html = html;\n        this.factories = factories;\n    }\n    /**\n     * Creates HTML to be used within a template.\n     * @param add - Can be used to add  behavior factories to a template.\n     */\n    createHTML(add) {\n        const factories = this.factories;\n        for (const key in factories) {\n            add(factories[key]);\n        }\n        return this.html;\n    }\n}\n/**\n * An empty template partial.\n */\nInlineTemplateDirective.empty = new InlineTemplateDirective(\"\");\nHTMLDirective.define(InlineTemplateDirective);\nfunction createHTML(value, prevString, add, definition = HTMLDirective.getForInstance(value)) {\n    if (definition.aspected) {\n        const match = lastAttributeNameRegex.exec(prevString);\n        if (match !== null) {\n            HTMLDirective.assignAspect(value, match[2]);\n        }\n    }\n    return value.createHTML(add);\n}\n/**\n * A template capable of creating HTMLView instances or rendering directly to DOM.\n * @public\n */\nexport class ViewTemplate {\n    /**\n     * Creates an instance of ViewTemplate.\n     * @param html - The html representing what this template will instantiate, including placeholders for directives.\n     * @param factories - The directives that will be connected to placeholders in the html.\n     * @param policy - The security policy to use when compiling this template.\n     */\n    constructor(html, factories = {}, policy) {\n        this.policy = policy;\n        this.result = null;\n        this.html = html;\n        this.factories = factories;\n    }\n    /**\n     * Creates an HTMLView instance based on this template definition.\n     * @param hostBindingTarget - The element that host behaviors will be bound to.\n     */\n    create(hostBindingTarget) {\n        if (this.result === null) {\n            this.result = Compiler.compile(this.html, this.factories, this.policy);\n        }\n        return this.result.createView(hostBindingTarget);\n    }\n    /**\n     * Returns a directive that can inline the template.\n     */\n    inline() {\n        return new InlineTemplateDirective(isString(this.html) ? this.html : this.html.innerHTML, this.factories);\n    }\n    /**\n     * Sets the DOMPolicy for this template.\n     * @param policy - The policy to associated with this template.\n     * @returns The modified template instance.\n     * @remarks\n     * The DOMPolicy can only be set once for a template and cannot be\n     * set after the template is compiled.\n     */\n    withPolicy(policy) {\n        if (this.result) {\n            throw FAST.error(1208 /* Message.cannotSetTemplatePolicyAfterCompilation */);\n        }\n        if (this.policy) {\n            throw FAST.error(1207 /* Message.onlySetTemplatePolicyOnce */);\n        }\n        this.policy = policy;\n        return this;\n    }\n    /**\n     * Creates an HTMLView from this template, binds it to the source, and then appends it to the host.\n     * @param source - The data source to bind the template to.\n     * @param host - The Element where the template will be rendered.\n     * @param hostBindingTarget - An HTML element to target the host bindings at if different from the\n     * host that the template is being attached to.\n     */\n    render(source, host, hostBindingTarget) {\n        const view = this.create(hostBindingTarget);\n        view.bind(source);\n        view.appendTo(host);\n        return view;\n    }\n    /**\n     * Creates a template based on a set of static strings and dynamic values.\n     * @param strings - The static strings to create the template with.\n     * @param values - The dynamic values to create the template with.\n     * @param policy - The DOMPolicy to associated with the template.\n     * @returns A ViewTemplate.\n     * @remarks\n     * This API should not be used directly under normal circumstances because constructing\n     * a template in this way, if not done properly, can open up the application to XSS\n     * attacks. When using this API, provide a strong DOMPolicy that can properly sanitize\n     * and also be sure to manually sanitize all static strings particularly if they can\n     * come from user input.\n     */\n    static create(strings, values, policy) {\n        let html = \"\";\n        const factories = Object.create(null);\n        const add = (factory) => {\n            var _a;\n            const id = (_a = factory.id) !== null && _a !== void 0 ? _a : (factory.id = nextId());\n            factories[id] = factory;\n            return id;\n        };\n        for (let i = 0, ii = strings.length - 1; i < ii; ++i) {\n            const currentString = strings[i];\n            let currentValue = values[i];\n            let definition;\n            html += currentString;\n            if (isFunction(currentValue)) {\n                currentValue = new HTMLBindingDirective(oneWay(currentValue));\n            }\n            else if (currentValue instanceof Binding) {\n                currentValue = new HTMLBindingDirective(currentValue);\n            }\n            else if (!(definition = HTMLDirective.getForInstance(currentValue))) {\n                const staticValue = currentValue;\n                currentValue = new HTMLBindingDirective(oneTime(() => staticValue));\n            }\n            html += createHTML(currentValue, currentString, add, definition);\n        }\n        return new ViewTemplate(html + strings[strings.length - 1], factories, policy);\n    }\n}\nmakeSerializationNoop(ViewTemplate);\n/**\n * Transforms a template literal string into a ViewTemplate.\n * @param strings - The string fragments that are interpolated with the values.\n * @param values - The values that are interpolated with the string fragments.\n * @remarks\n * The html helper supports interpolation of strings, numbers, binding expressions,\n * other template instances, and Directive instances.\n * @public\n */\nexport const html = ((strings, ...values) => {\n    if (Array.isArray(strings) && Array.isArray(strings.raw)) {\n        return ViewTemplate.create(strings, values);\n    }\n    throw FAST.error(1206 /* Message.directCallToHTMLTagNotAllowed */);\n});\nhtml.partial = (html) => {\n    return new InlineTemplateDirective(html);\n};\n","import \"../interfaces.js\";\nimport { ExecutionContext, } from \"../observation/observable.js\";\nimport { FAST } from \"../platform.js\";\nimport { DOM, DOMAspect } from \"../dom.js\";\nimport { HTMLDirective, } from \"./html-directive.js\";\nimport { Markup } from \"./markup.js\";\nfunction updateContent(target, aspect, value, controller) {\n    // If there's no actual value, then this equates to the\n    // empty string for the purposes of content bindings.\n    if (value === null || value === undefined) {\n        value = \"\";\n    }\n    // If the value has a \"create\" method, then it's a ContentTemplate.\n    if (value.create) {\n        target.textContent = \"\";\n        let view = target.$fastView;\n        // If there's no previous view that we might be able to\n        // reuse then create a new view from the template.\n        if (view === void 0) {\n            view = value.create();\n        }\n        else {\n            // If there is a previous view, but it wasn't created\n            // from the same template as the new value, then we\n            // need to remove the old view if it's still in the DOM\n            // and create a new view from the template.\n            if (target.$fastTemplate !== value) {\n                if (view.isComposed) {\n                    view.remove();\n                    view.unbind();\n                }\n                view = value.create();\n            }\n        }\n        // It's possible that the value is the same as the previous template\n        // and that there's actually no need to compose it.\n        if (!view.isComposed) {\n            view.isComposed = true;\n            view.bind(controller.source, controller.context);\n            view.insertBefore(target);\n            target.$fastView = view;\n            target.$fastTemplate = value;\n        }\n        else if (view.needsBindOnly) {\n            view.needsBindOnly = false;\n            view.bind(controller.source, controller.context);\n        }\n    }\n    else {\n        const view = target.$fastView;\n        // If there is a view and it's currently composed into\n        // the DOM, then we need to remove it.\n        if (view !== void 0 && view.isComposed) {\n            view.isComposed = false;\n            view.remove();\n            if (view.needsBindOnly) {\n                view.needsBindOnly = false;\n            }\n            else {\n                view.unbind();\n            }\n        }\n        target.textContent = value;\n    }\n}\nfunction updateTokenList(target, aspect, value) {\n    var _a;\n    const lookup = `${this.id}-t`;\n    const state = (_a = target[lookup]) !== null && _a !== void 0 ? _a : (target[lookup] = { v: 0, cv: Object.create(null) });\n    const classVersions = state.cv;\n    let version = state.v;\n    const tokenList = target[aspect];\n    // Add the classes, tracking the version at which they were added.\n    if (value !== null && value !== undefined && value.length) {\n        const names = value.split(/\\s+/);\n        for (let i = 0, ii = names.length; i < ii; ++i) {\n            const currentName = names[i];\n            if (currentName === \"\") {\n                continue;\n            }\n            classVersions[currentName] = version;\n            tokenList.add(currentName);\n        }\n    }\n    state.v = version + 1;\n    // If this is the first call to add classes, there's no need to remove old ones.\n    if (version === 0) {\n        return;\n    }\n    // Remove classes from the previous version.\n    version -= 1;\n    for (const name in classVersions) {\n        if (classVersions[name] === version) {\n            tokenList.remove(name);\n        }\n    }\n}\nconst sinkLookup = {\n    [DOMAspect.attribute]: DOM.setAttribute,\n    [DOMAspect.booleanAttribute]: DOM.setBooleanAttribute,\n    [DOMAspect.property]: (t, a, v) => (t[a] = v),\n    [DOMAspect.content]: updateContent,\n    [DOMAspect.tokenList]: updateTokenList,\n    [DOMAspect.event]: () => void 0,\n};\n/**\n * A directive that applies bindings.\n * @public\n */\nexport class HTMLBindingDirective {\n    /**\n     * Creates an instance of HTMLBindingDirective.\n     * @param dataBinding - The binding configuration to apply.\n     */\n    constructor(dataBinding) {\n        this.dataBinding = dataBinding;\n        this.updateTarget = null;\n        /**\n         * The type of aspect to target.\n         */\n        this.aspectType = DOMAspect.content;\n    }\n    /**\n     * Creates HTML to be used within a template.\n     * @param add - Can be used to add  behavior factories to a template.\n     */\n    createHTML(add) {\n        return Markup.interpolation(add(this));\n    }\n    /**\n     * Creates a behavior.\n     */\n    createBehavior() {\n        var _a;\n        if (this.updateTarget === null) {\n            const sink = sinkLookup[this.aspectType];\n            const policy = (_a = this.dataBinding.policy) !== null && _a !== void 0 ? _a : this.policy;\n            if (!sink) {\n                throw FAST.error(1205 /* Message.unsupportedBindingBehavior */);\n            }\n            this.data = `${this.id}-d`;\n            this.updateTarget = policy.protect(this.targetTagName, this.aspectType, this.targetAspect, sink);\n        }\n        return this;\n    }\n    /** @internal */\n    bind(controller) {\n        var _a;\n        const target = controller.targets[this.targetNodeId];\n        switch (this.aspectType) {\n            case DOMAspect.event:\n                target[this.data] = controller;\n                target.addEventListener(this.targetAspect, this, this.dataBinding.options);\n                break;\n            case DOMAspect.content:\n                controller.onUnbind(this);\n            // intentional fall through\n            default:\n                const observer = (_a = target[this.data]) !== null && _a !== void 0 ? _a : (target[this.data] = this.dataBinding.createObserver(this, this));\n                observer.target = target;\n                observer.controller = controller;\n                this.updateTarget(target, this.targetAspect, observer.bind(controller), controller);\n                break;\n        }\n    }\n    /** @internal */\n    unbind(controller) {\n        const target = controller.targets[this.targetNodeId];\n        const view = target.$fastView;\n        if (view !== void 0 && view.isComposed) {\n            view.unbind();\n            view.needsBindOnly = true;\n        }\n    }\n    /** @internal */\n    handleEvent(event) {\n        const controller = event.currentTarget[this.data];\n        if (controller.isBound) {\n            ExecutionContext.setEvent(event);\n            const result = this.dataBinding.evaluate(controller.source, controller.context);\n            ExecutionContext.setEvent(null);\n            if (result !== true) {\n                event.preventDefault();\n            }\n        }\n    }\n    /** @internal */\n    handleChange(binding, observer) {\n        const target = observer.target;\n        const controller = observer.controller;\n        this.updateTarget(target, this.targetAspect, observer.bind(controller), controller);\n    }\n}\nHTMLDirective.define(HTMLBindingDirective, { aspected: true });\n","import { DOMAspect } from \"../dom.js\";\nimport { createTypeRegistry, makeSerializationNoop } from \"../platform.js\";\nimport { Markup } from \"./markup.js\";\nconst registry = createTypeRegistry();\n/**\n * Instructs the template engine to apply behavior to a node.\n * @public\n */\nexport const HTMLDirective = Object.freeze({\n    /**\n     * Gets the directive definition associated with the instance.\n     * @param instance - The directive instance to retrieve the definition for.\n     */\n    getForInstance: registry.getForInstance,\n    /**\n     * Gets the directive definition associated with the specified type.\n     * @param type - The directive type to retrieve the definition for.\n     */\n    getByType: registry.getByType,\n    /**\n     * Defines an HTMLDirective based on the options.\n     * @param type - The type to define as a directive.\n     * @param options - Options that specify the directive's application.\n     */\n    define(type, options) {\n        options = options || {};\n        options.type = type;\n        registry.register(options);\n        return type;\n    },\n    /**\n     *\n     * @param directive - The directive to assign the aspect to.\n     * @param value - The value to base the aspect determination on.\n     * @remarks\n     * If a falsy value is provided, then the content aspect will be assigned.\n     */\n    assignAspect(directive, value) {\n        if (!value) {\n            directive.aspectType = DOMAspect.content;\n            return;\n        }\n        directive.sourceAspect = value;\n        switch (value[0]) {\n            case \":\":\n                directive.targetAspect = value.substring(1);\n                directive.aspectType =\n                    directive.targetAspect === \"classList\"\n                        ? DOMAspect.tokenList\n                        : DOMAspect.property;\n                break;\n            case \"?\":\n                directive.targetAspect = value.substring(1);\n                directive.aspectType = DOMAspect.booleanAttribute;\n                break;\n            case \"@\":\n                directive.targetAspect = value.substring(1);\n                directive.aspectType = DOMAspect.event;\n                break;\n            default:\n                directive.targetAspect = value;\n                directive.aspectType = DOMAspect.attribute;\n                break;\n        }\n    },\n});\n/**\n * Decorator: Defines an HTMLDirective.\n * @param options - Provides options that specify the directive's application.\n * @public\n */\nexport function htmlDirective(options) {\n    /* eslint-disable-next-line @typescript-eslint/explicit-function-return-type */\n    return function (type) {\n        HTMLDirective.define(type, options);\n    };\n}\n/**\n * A base class used for attribute directives that don't need internal state.\n * @public\n */\nexport class StatelessAttachedAttributeDirective {\n    /**\n     * Creates an instance of RefDirective.\n     * @param options - The options to use in configuring the directive.\n     */\n    constructor(options) {\n        this.options = options;\n    }\n    /**\n     * Creates a placeholder string based on the directive's index within the template.\n     * @param index - The index of the directive within the template.\n     * @remarks\n     * Creates a custom attribute placeholder.\n     */\n    createHTML(add) {\n        return Markup.attribute(add(this));\n    }\n    /**\n     * Creates a behavior.\n     * @param targets - The targets available for behaviors to be attached to.\n     */\n    createBehavior() {\n        return this;\n    }\n}\nmakeSerializationNoop(StatelessAttachedAttributeDirective);\n","const marker = `fast-${Math.random().toString(36).substring(2, 8)}`;\nconst interpolationStart = `${marker}{`;\nconst interpolationEnd = `}${marker}`;\nconst interpolationEndLength = interpolationEnd.length;\nlet id = 0;\n/** @internal */\nexport const nextId = () => `${marker}-${++id}`;\n/**\n * Common APIs related to markup generation.\n * @public\n */\nexport const Markup = Object.freeze({\n    /**\n     * Creates a placeholder string suitable for marking out a location *within*\n     * an attribute value or HTML content.\n     * @param index - The directive index to create the placeholder for.\n     * @remarks\n     * Used internally by binding directives.\n     */\n    interpolation: (id) => `${interpolationStart}${id}${interpolationEnd}`,\n    /**\n     * Creates a placeholder that manifests itself as an attribute on an\n     * element.\n     * @param attributeName - The name of the custom attribute.\n     * @param index - The directive index to create the placeholder for.\n     * @remarks\n     * Used internally by attribute directives such as `ref`, `slotted`, and `children`.\n     */\n    attribute: (id) => `${nextId()}=\"${interpolationStart}${id}${interpolationEnd}\"`,\n    /**\n     * Creates a placeholder that manifests itself as a marker within the DOM structure.\n     * @param index - The directive index to create the placeholder for.\n     * @remarks\n     * Used internally by structural directives such as `repeat`.\n     */\n    comment: (id) => `<!--${interpolationStart}${id}${interpolationEnd}-->`,\n});\n/**\n * Common APIs related to content parsing.\n * @public\n */\nexport const Parser = Object.freeze({\n    /**\n     * Parses text content or HTML attribute content, separating out the static strings\n     * from the directives.\n     * @param value - The content or attribute string to parse.\n     * @param factories - A list of directives to search for in the string.\n     * @returns A heterogeneous array of static strings interspersed with\n     * directives or null if no directives are found in the string.\n     */\n    parse(value, factories) {\n        const parts = value.split(interpolationStart);\n        if (parts.length === 1) {\n            return null;\n        }\n        const result = [];\n        for (let i = 0, ii = parts.length; i < ii; ++i) {\n            const current = parts[i];\n            const index = current.indexOf(interpolationEnd);\n            let literal;\n            if (index === -1) {\n                literal = current;\n            }\n            else {\n                const factoryId = current.substring(0, index);\n                result.push(factories[factoryId]);\n                literal = current.substring(index + interpolationEndLength);\n            }\n            if (literal !== \"\") {\n                result.push(literal);\n            }\n        }\n        return result;\n    },\n});\n","import { isFunction, isString } from \"../interfaces.js\";\nimport { FAST } from \"../platform.js\";\nimport { DOM } from \"../dom.js\";\nimport { oneTime } from \"../binding/one-time.js\";\nimport { nextId, Parser } from \"./markup.js\";\nimport { HTMLBindingDirective } from \"./html-binding-directive.js\";\nimport { HTMLDirective, } from \"./html-directive.js\";\nimport { HTMLView } from \"./view.js\";\nconst targetIdFrom = (parentId, nodeIndex) => `${parentId}.${nodeIndex}`;\nconst descriptorCache = {};\n// used to prevent creating lots of objects just to track node and index while compiling\nconst next = {\n    index: 0,\n    node: null,\n};\nfunction tryWarn(name) {\n    if (!name.startsWith(\"fast-\")) {\n        FAST.warn(1204 /* Message.hostBindingWithoutHost */, { name });\n    }\n}\nconst warningHost = new Proxy(document.createElement(\"div\"), {\n    get(target, property) {\n        tryWarn(property);\n        const value = Reflect.get(target, property);\n        return isFunction(value) ? value.bind(target) : value;\n    },\n    set(target, property, value) {\n        tryWarn(property);\n        return Reflect.set(target, property, value);\n    },\n});\nclass CompilationContext {\n    constructor(fragment, directives, policy) {\n        this.fragment = fragment;\n        this.directives = directives;\n        this.policy = policy;\n        this.proto = null;\n        this.nodeIds = new Set();\n        this.descriptors = {};\n        this.factories = [];\n    }\n    addFactory(factory, parentId, nodeId, targetIndex, tagName) {\n        var _a, _b;\n        if (!this.nodeIds.has(nodeId)) {\n            this.nodeIds.add(nodeId);\n            this.addTargetDescriptor(parentId, nodeId, targetIndex);\n        }\n        factory.id = (_a = factory.id) !== null && _a !== void 0 ? _a : nextId();\n        factory.targetNodeId = nodeId;\n        factory.targetTagName = tagName;\n        factory.policy = (_b = factory.policy) !== null && _b !== void 0 ? _b : this.policy;\n        this.factories.push(factory);\n    }\n    freeze() {\n        this.proto = Object.create(null, this.descriptors);\n        return this;\n    }\n    addTargetDescriptor(parentId, targetId, targetIndex) {\n        const descriptors = this.descriptors;\n        if (targetId === \"r\" || // root\n            targetId === \"h\" || // host\n            descriptors[targetId]) {\n            return;\n        }\n        if (!descriptors[parentId]) {\n            const index = parentId.lastIndexOf(\".\");\n            const grandparentId = parentId.substring(0, index);\n            const childIndex = parseInt(parentId.substring(index + 1));\n            this.addTargetDescriptor(grandparentId, parentId, childIndex);\n        }\n        let descriptor = descriptorCache[targetId];\n        if (!descriptor) {\n            const field = `_${targetId}`;\n            descriptorCache[targetId] = descriptor = {\n                get() {\n                    var _a;\n                    return ((_a = this[field]) !== null && _a !== void 0 ? _a : (this[field] = this[parentId].childNodes[targetIndex]));\n                },\n            };\n        }\n        descriptors[targetId] = descriptor;\n    }\n    createView(hostBindingTarget) {\n        const fragment = this.fragment.cloneNode(true);\n        const targets = Object.create(this.proto);\n        targets.r = fragment;\n        targets.h = hostBindingTarget !== null && hostBindingTarget !== void 0 ? hostBindingTarget : warningHost;\n        for (const id of this.nodeIds) {\n            targets[id]; // trigger locator\n        }\n        return new HTMLView(fragment, this.factories, targets);\n    }\n}\nfunction compileAttributes(context, parentId, node, nodeId, nodeIndex, includeBasicValues = false) {\n    const attributes = node.attributes;\n    const directives = context.directives;\n    for (let i = 0, ii = attributes.length; i < ii; ++i) {\n        const attr = attributes[i];\n        const attrValue = attr.value;\n        const parseResult = Parser.parse(attrValue, directives);\n        let result = null;\n        if (parseResult === null) {\n            if (includeBasicValues) {\n                result = new HTMLBindingDirective(oneTime(() => attrValue, context.policy));\n                HTMLDirective.assignAspect(result, attr.name);\n            }\n        }\n        else {\n            /* eslint-disable-next-line @typescript-eslint/no-use-before-define */\n            result = Compiler.aggregate(parseResult, context.policy);\n        }\n        if (result !== null) {\n            node.removeAttributeNode(attr);\n            i--;\n            ii--;\n            context.addFactory(result, parentId, nodeId, nodeIndex, node.tagName);\n        }\n    }\n}\nfunction compileContent(context, node, parentId, nodeId, nodeIndex) {\n    const parseResult = Parser.parse(node.textContent, context.directives);\n    if (parseResult === null) {\n        next.node = node.nextSibling;\n        next.index = nodeIndex + 1;\n        return next;\n    }\n    let currentNode;\n    let lastNode = (currentNode = node);\n    for (let i = 0, ii = parseResult.length; i < ii; ++i) {\n        const currentPart = parseResult[i];\n        if (i !== 0) {\n            nodeIndex++;\n            nodeId = targetIdFrom(parentId, nodeIndex);\n            currentNode = lastNode.parentNode.insertBefore(document.createTextNode(\"\"), lastNode.nextSibling);\n        }\n        if (isString(currentPart)) {\n            currentNode.textContent = currentPart;\n        }\n        else {\n            currentNode.textContent = \" \";\n            HTMLDirective.assignAspect(currentPart);\n            context.addFactory(currentPart, parentId, nodeId, nodeIndex, null);\n        }\n        lastNode = currentNode;\n    }\n    next.index = nodeIndex + 1;\n    next.node = lastNode.nextSibling;\n    return next;\n}\nfunction compileChildren(context, parent, parentId) {\n    let nodeIndex = 0;\n    let childNode = parent.firstChild;\n    while (childNode) {\n        /* eslint-disable-next-line @typescript-eslint/no-use-before-define */\n        const result = compileNode(context, parentId, childNode, nodeIndex);\n        childNode = result.node;\n        nodeIndex = result.index;\n    }\n}\nfunction compileNode(context, parentId, node, nodeIndex) {\n    const nodeId = targetIdFrom(parentId, nodeIndex);\n    switch (node.nodeType) {\n        case 1: // element node\n            compileAttributes(context, parentId, node, nodeId, nodeIndex);\n            compileChildren(context, node, nodeId);\n            break;\n        case 3: // text node\n            return compileContent(context, node, parentId, nodeId, nodeIndex);\n        case 8: // comment\n            const parts = Parser.parse(node.data, context.directives);\n            if (parts !== null) {\n                context.addFactory(\n                /* eslint-disable-next-line @typescript-eslint/no-use-before-define */\n                Compiler.aggregate(parts), parentId, nodeId, nodeIndex, null);\n            }\n            break;\n    }\n    next.index = nodeIndex + 1;\n    next.node = node.nextSibling;\n    return next;\n}\nfunction isMarker(node, directives) {\n    return (node &&\n        node.nodeType == 8 &&\n        Parser.parse(node.data, directives) !== null);\n}\nconst templateTag = \"TEMPLATE\";\n/**\n * Common APIs related to compilation.\n * @public\n */\nexport const Compiler = {\n    /**\n     * Compiles a template and associated directives into a compilation\n     * result which can be used to create views.\n     * @param html - The html string or template element to compile.\n     * @param factories - The behavior factories referenced by the template.\n     * @param policy - The security policy to compile the html with.\n     * @remarks\n     * The template that is provided for compilation is altered in-place\n     * and cannot be compiled again. If the original template must be preserved,\n     * it is recommended that you clone the original and pass the clone to this API.\n     * @public\n     */\n    compile(html, factories, policy = DOM.policy) {\n        let template;\n        if (isString(html)) {\n            template = document.createElement(templateTag);\n            template.innerHTML = policy.createHTML(html);\n            const fec = template.content.firstElementChild;\n            if (fec !== null && fec.tagName === templateTag) {\n                template = fec;\n            }\n        }\n        else {\n            template = html;\n        }\n        if (!template.content.firstChild && !template.content.lastChild) {\n            template.content.appendChild(document.createComment(\"\"));\n        }\n        // https://bugs.chromium.org/p/chromium/issues/detail?id=1111864\n        const fragment = document.adoptNode(template.content);\n        const context = new CompilationContext(fragment, factories, policy);\n        compileAttributes(context, \"\", template, /* host */ \"h\", 0, true);\n        if (\n        // If the first node in a fragment is a marker, that means it's an unstable first node,\n        // because something like a when, repeat, etc. could add nodes before the marker.\n        // To mitigate this, we insert a stable first node. However, if we insert a node,\n        // that will alter the result of the TreeWalker. So, we also need to offset the target index.\n        isMarker(fragment.firstChild, factories) ||\n            // Or if there is only one node and a directive, it means the template's content\n            // is *only* the directive. In that case, HTMLView.dispose() misses any nodes inserted by\n            // the directive. Inserting a new node ensures proper disposal of nodes added by the directive.\n            (fragment.childNodes.length === 1 && Object.keys(factories).length > 0)) {\n            fragment.insertBefore(document.createComment(\"\"), fragment.firstChild);\n        }\n        compileChildren(context, fragment, /* root */ \"r\");\n        next.node = null; // prevent leaks\n        return context.freeze();\n    },\n    /**\n     * Sets the default compilation strategy that will be used by the ViewTemplate whenever\n     * it needs to compile a view preprocessed with the html template function.\n     * @param strategy - The compilation strategy to use when compiling templates.\n     */\n    setDefaultStrategy(strategy) {\n        this.compile = strategy;\n    },\n    /**\n     * Aggregates an array of strings and directives into a single directive.\n     * @param parts - A heterogeneous array of static strings interspersed with\n     * directives.\n     * @param policy - The security policy to use with the aggregated bindings.\n     * @returns A single inline directive that aggregates the behavior of all the parts.\n     */\n    aggregate(parts, policy = DOM.policy) {\n        if (parts.length === 1) {\n            return parts[0];\n        }\n        let sourceAspect;\n        let binding;\n        let isVolatile = false;\n        let bindingPolicy = void 0;\n        const partCount = parts.length;\n        const finalParts = parts.map((x) => {\n            if (isString(x)) {\n                return () => x;\n            }\n            sourceAspect = x.sourceAspect || sourceAspect;\n            binding = x.dataBinding || binding;\n            isVolatile = isVolatile || x.dataBinding.isVolatile;\n            bindingPolicy = bindingPolicy || x.dataBinding.policy;\n            return x.dataBinding.evaluate;\n        });\n        const expression = (scope, context) => {\n            let output = \"\";\n            for (let i = 0; i < partCount; ++i) {\n                output += finalParts[i](scope, context);\n            }\n            return output;\n        };\n        binding.evaluate = expression;\n        binding.isVolatile = isVolatile;\n        binding.policy = bindingPolicy !== null && bindingPolicy !== void 0 ? bindingPolicy : policy;\n        const directive = new HTMLBindingDirective(binding);\n        HTMLDirective.assignAspect(directive, sourceAspect);\n        return directive;\n    },\n};\n","import { ExecutionContext, Observable, SourceLifetime, } from \"../observation/observable.js\";\nimport { makeSerializationNoop } from \"../platform.js\";\nfunction removeNodeSequence(firstNode, lastNode) {\n    const parent = firstNode.parentNode;\n    let current = firstNode;\n    let next;\n    while (current !== lastNode) {\n        next = current.nextSibling;\n        parent.removeChild(current);\n        current = next;\n    }\n    parent.removeChild(lastNode);\n}\n/**\n * The standard View implementation, which also implements ElementView and SyntheticView.\n * @public\n */\nexport class HTMLView {\n    /**\n     * Constructs an instance of HTMLView.\n     * @param fragment - The html fragment that contains the nodes for this view.\n     * @param behaviors - The behaviors to be applied to this view.\n     */\n    constructor(fragment, factories, targets) {\n        this.fragment = fragment;\n        this.factories = factories;\n        this.targets = targets;\n        this.behaviors = null;\n        this.unbindables = [];\n        /**\n         * The data that the view is bound to.\n         */\n        this.source = null;\n        /**\n         * Indicates whether the controller is bound.\n         */\n        this.isBound = false;\n        /**\n         * Indicates how the source's lifetime relates to the controller's lifetime.\n         */\n        this.sourceLifetime = SourceLifetime.unknown;\n        /**\n         * The execution context the view is running within.\n         */\n        this.context = this;\n        /**\n         * The index of the current item within a repeat context.\n         */\n        this.index = 0;\n        /**\n         * The length of the current collection within a repeat context.\n         */\n        this.length = 0;\n        this.firstChild = fragment.firstChild;\n        this.lastChild = fragment.lastChild;\n    }\n    /**\n     * The current event within an event handler.\n     */\n    get event() {\n        return ExecutionContext.getEvent();\n    }\n    /**\n     * Indicates whether the current item within a repeat context\n     * has an even index.\n     */\n    get isEven() {\n        return this.index % 2 === 0;\n    }\n    /**\n     * Indicates whether the current item within a repeat context\n     * has an odd index.\n     */\n    get isOdd() {\n        return this.index % 2 !== 0;\n    }\n    /**\n     * Indicates whether the current item within a repeat context\n     * is the first item in the collection.\n     */\n    get isFirst() {\n        return this.index === 0;\n    }\n    /**\n     * Indicates whether the current item within a repeat context\n     * is somewhere in the middle of the collection.\n     */\n    get isInMiddle() {\n        return !this.isFirst && !this.isLast;\n    }\n    /**\n     * Indicates whether the current item within a repeat context\n     * is the last item in the collection.\n     */\n    get isLast() {\n        return this.index === this.length - 1;\n    }\n    /**\n     * Returns the typed event detail of a custom event.\n     */\n    eventDetail() {\n        return this.event.detail;\n    }\n    /**\n     * Returns the typed event target of the event.\n     */\n    eventTarget() {\n        return this.event.target;\n    }\n    /**\n     * Appends the view's DOM nodes to the referenced node.\n     * @param node - The parent node to append the view's DOM nodes to.\n     */\n    appendTo(node) {\n        node.appendChild(this.fragment);\n    }\n    /**\n     * Inserts the view's DOM nodes before the referenced node.\n     * @param node - The node to insert the view's DOM before.\n     */\n    insertBefore(node) {\n        if (this.fragment.hasChildNodes()) {\n            node.parentNode.insertBefore(this.fragment, node);\n        }\n        else {\n            const end = this.lastChild;\n            if (node.previousSibling === end)\n                return;\n            const parentNode = node.parentNode;\n            let current = this.firstChild;\n            let next;\n            while (current !== end) {\n                next = current.nextSibling;\n                parentNode.insertBefore(current, node);\n                current = next;\n            }\n            parentNode.insertBefore(end, node);\n        }\n    }\n    /**\n     * Removes the view's DOM nodes.\n     * The nodes are not disposed and the view can later be re-inserted.\n     */\n    remove() {\n        const fragment = this.fragment;\n        const end = this.lastChild;\n        let current = this.firstChild;\n        let next;\n        while (current !== end) {\n            next = current.nextSibling;\n            fragment.appendChild(current);\n            current = next;\n        }\n        fragment.appendChild(end);\n    }\n    /**\n     * Removes the view and unbinds its behaviors, disposing of DOM nodes afterward.\n     * Once a view has been disposed, it cannot be inserted or bound again.\n     */\n    dispose() {\n        removeNodeSequence(this.firstChild, this.lastChild);\n        this.unbind();\n    }\n    onUnbind(behavior) {\n        this.unbindables.push(behavior);\n    }\n    /**\n     * Binds a view's behaviors to its binding source.\n     * @param source - The binding source for the view's binding behaviors.\n     * @param context - The execution context to run the behaviors within.\n     */\n    bind(source, context = this) {\n        if (this.source === source) {\n            return;\n        }\n        let behaviors = this.behaviors;\n        if (behaviors === null) {\n            this.source = source;\n            this.context = context;\n            this.behaviors = behaviors = new Array(this.factories.length);\n            const factories = this.factories;\n            for (let i = 0, ii = factories.length; i < ii; ++i) {\n                const behavior = factories[i].createBehavior();\n                behavior.bind(this);\n                behaviors[i] = behavior;\n            }\n        }\n        else {\n            if (this.source !== null) {\n                this.evaluateUnbindables();\n            }\n            this.isBound = false;\n            this.source = source;\n            this.context = context;\n            for (let i = 0, ii = behaviors.length; i < ii; ++i) {\n                behaviors[i].bind(this);\n            }\n        }\n        this.isBound = true;\n    }\n    /**\n     * Unbinds a view's behaviors from its binding source.\n     */\n    unbind() {\n        if (!this.isBound || this.source === null) {\n            return;\n        }\n        this.evaluateUnbindables();\n        this.source = null;\n        this.context = this;\n        this.isBound = false;\n    }\n    evaluateUnbindables() {\n        const unbindables = this.unbindables;\n        for (let i = 0, ii = unbindables.length; i < ii; ++i) {\n            unbindables[i].unbind(this);\n        }\n        unbindables.length = 0;\n    }\n    /**\n     * Efficiently disposes of a contiguous range of synthetic view instances.\n     * @param views - A contiguous range of views to be disposed.\n     */\n    static disposeContiguousBatch(views) {\n        if (views.length === 0) {\n            return;\n        }\n        removeNodeSequence(views[0].firstChild, views[views.length - 1].lastChild);\n        for (let i = 0, ii = views.length; i < ii; ++i) {\n            views[i].unbind();\n        }\n    }\n}\nmakeSerializationNoop(HTMLView);\nObservable.defineProperty(HTMLView.prototype, \"index\");\nObservable.defineProperty(HTMLView.prototype, \"length\");\n","import { isFunction } from \"../interfaces.js\";\nconst noTemplate = () => null;\nfunction normalizeBinding(value) {\n    return value === undefined ? noTemplate : isFunction(value) ? value : () => value;\n}\n/**\n * A directive that enables basic conditional rendering in a template.\n * @param condition - The condition to test for rendering.\n * @param templateOrTemplateBinding - The template or a binding that gets\n * the template to render when the condition is true.\n * @param elseTemplateOrTemplateBinding - Optional template or binding that that\n * gets the template to render when the conditional is false.\n * @public\n */\nexport function when(condition, templateOrTemplateBinding, elseTemplateOrTemplateBinding) {\n    const dataBinding = isFunction(condition) ? condition : () => condition;\n    const templateBinding = normalizeBinding(templateOrTemplateBinding);\n    const elseBinding = normalizeBinding(elseTemplateOrTemplateBinding);\n    return (source, context) => dataBinding(source, context)\n        ? templateBinding(source, context)\n        : elseBinding(source, context);\n}\n","import { Observable } from \"../observation/observable.js\";\nimport { emptyArray } from \"../platform.js\";\nimport { ArrayObserver } from \"../observation/arrays.js\";\nimport { normalizeBinding } from \"../binding/normalize.js\";\nimport { Markup } from \"./markup.js\";\nimport { HTMLDirective, } from \"./html-directive.js\";\nimport { HTMLView } from \"./view.js\";\nconst defaultRepeatOptions = Object.freeze({\n    positioning: false,\n    recycle: true,\n});\nfunction bindWithoutPositioning(view, items, index, controller) {\n    view.context.parent = controller.source;\n    view.context.parentContext = controller.context;\n    view.bind(items[index]);\n}\nfunction bindWithPositioning(view, items, index, controller) {\n    view.context.parent = controller.source;\n    view.context.parentContext = controller.context;\n    view.context.length = items.length;\n    view.context.index = index;\n    view.bind(items[index]);\n}\n/**\n * A behavior that renders a template for each item in an array.\n * @public\n */\nexport class RepeatBehavior {\n    /**\n     * Creates an instance of RepeatBehavior.\n     * @param location - The location in the DOM to render the repeat.\n     * @param dataBinding - The array to render.\n     * @param isItemsBindingVolatile - Indicates whether the items binding has volatile dependencies.\n     * @param templateBinding - The template to render for each item.\n     * @param isTemplateBindingVolatile - Indicates whether the template binding has volatile dependencies.\n     * @param options - Options used to turn on special repeat features.\n     */\n    constructor(directive) {\n        this.directive = directive;\n        this.items = null;\n        this.itemsObserver = null;\n        this.bindView = bindWithoutPositioning;\n        /** @internal */\n        this.views = [];\n        this.itemsBindingObserver = directive.dataBinding.createObserver(this, directive);\n        this.templateBindingObserver = directive.templateBinding.createObserver(this, directive);\n        if (directive.options.positioning) {\n            this.bindView = bindWithPositioning;\n        }\n    }\n    /**\n     * Bind this behavior.\n     * @param controller - The view controller that manages the lifecycle of this behavior.\n     */\n    bind(controller) {\n        this.location = controller.targets[this.directive.targetNodeId];\n        this.controller = controller;\n        this.items = this.itemsBindingObserver.bind(controller);\n        this.template = this.templateBindingObserver.bind(controller);\n        this.observeItems(true);\n        this.refreshAllViews();\n        controller.onUnbind(this);\n    }\n    /**\n     * Unbinds this behavior.\n     */\n    unbind() {\n        if (this.itemsObserver !== null) {\n            this.itemsObserver.unsubscribe(this);\n        }\n        this.unbindAllViews();\n    }\n    /**\n     * Handles changes in the array, its items, and the repeat template.\n     * @param source - The source of the change.\n     * @param args - The details about what was changed.\n     */\n    handleChange(source, args) {\n        if (args === this.itemsBindingObserver) {\n            this.items = this.itemsBindingObserver.bind(this.controller);\n            this.observeItems();\n            this.refreshAllViews();\n        }\n        else if (args === this.templateBindingObserver) {\n            this.template = this.templateBindingObserver.bind(this.controller);\n            this.refreshAllViews(true);\n        }\n        else if (!args[0]) {\n            return;\n        }\n        else if (args[0].reset) {\n            this.refreshAllViews();\n        }\n        else {\n            this.updateViews(args);\n        }\n    }\n    observeItems(force = false) {\n        if (!this.items) {\n            this.items = emptyArray;\n            return;\n        }\n        const oldObserver = this.itemsObserver;\n        const newObserver = (this.itemsObserver = Observable.getNotifier(this.items));\n        const hasNewObserver = oldObserver !== newObserver;\n        if (hasNewObserver && oldObserver !== null) {\n            oldObserver.unsubscribe(this);\n        }\n        if (hasNewObserver || force) {\n            newObserver.subscribe(this);\n        }\n    }\n    updateViews(splices) {\n        const views = this.views;\n        const bindView = this.bindView;\n        const items = this.items;\n        const template = this.template;\n        const controller = this.controller;\n        const recycle = this.directive.options.recycle;\n        const leftoverViews = [];\n        let leftoverIndex = 0;\n        let availableViews = 0;\n        for (let i = 0, ii = splices.length; i < ii; ++i) {\n            const splice = splices[i];\n            const removed = splice.removed;\n            let removeIndex = 0;\n            let addIndex = splice.index;\n            const end = addIndex + splice.addedCount;\n            const removedViews = views.splice(splice.index, removed.length);\n            const totalAvailableViews = (availableViews =\n                leftoverViews.length + removedViews.length);\n            for (; addIndex < end; ++addIndex) {\n                const neighbor = views[addIndex];\n                const location = neighbor ? neighbor.firstChild : this.location;\n                let view;\n                if (recycle && availableViews > 0) {\n                    if (removeIndex <= totalAvailableViews && removedViews.length > 0) {\n                        view = removedViews[removeIndex];\n                        removeIndex++;\n                    }\n                    else {\n                        view = leftoverViews[leftoverIndex];\n                        leftoverIndex++;\n                    }\n                    availableViews--;\n                }\n                else {\n                    view = template.create();\n                }\n                views.splice(addIndex, 0, view);\n                bindView(view, items, addIndex, controller);\n                view.insertBefore(location);\n            }\n            if (removedViews[removeIndex]) {\n                leftoverViews.push(...removedViews.slice(removeIndex));\n            }\n        }\n        for (let i = leftoverIndex, ii = leftoverViews.length; i < ii; ++i) {\n            leftoverViews[i].dispose();\n        }\n        if (this.directive.options.positioning) {\n            for (let i = 0, viewsLength = views.length; i < viewsLength; ++i) {\n                const context = views[i].context;\n                context.length = viewsLength;\n                context.index = i;\n            }\n        }\n    }\n    refreshAllViews(templateChanged = false) {\n        const items = this.items;\n        const template = this.template;\n        const location = this.location;\n        const bindView = this.bindView;\n        const controller = this.controller;\n        let itemsLength = items.length;\n        let views = this.views;\n        let viewsLength = views.length;\n        if (itemsLength === 0 || templateChanged || !this.directive.options.recycle) {\n            // all views need to be removed\n            HTMLView.disposeContiguousBatch(views);\n            viewsLength = 0;\n        }\n        if (viewsLength === 0) {\n            // all views need to be created\n            this.views = views = new Array(itemsLength);\n            for (let i = 0; i < itemsLength; ++i) {\n                const view = template.create();\n                bindView(view, items, i, controller);\n                views[i] = view;\n                view.insertBefore(location);\n            }\n        }\n        else {\n            // attempt to reuse existing views with new data\n            let i = 0;\n            for (; i < itemsLength; ++i) {\n                if (i < viewsLength) {\n                    const view = views[i];\n                    bindView(view, items, i, controller);\n                }\n                else {\n                    const view = template.create();\n                    bindView(view, items, i, controller);\n                    views.push(view);\n                    view.insertBefore(location);\n                }\n            }\n            const removed = views.splice(i, viewsLength - i);\n            for (i = 0, itemsLength = removed.length; i < itemsLength; ++i) {\n                removed[i].dispose();\n            }\n        }\n    }\n    unbindAllViews() {\n        const views = this.views;\n        for (let i = 0, ii = views.length; i < ii; ++i) {\n            views[i].unbind();\n        }\n    }\n}\n/**\n * A directive that configures list rendering.\n * @public\n */\nexport class RepeatDirective {\n    /**\n     * Creates an instance of RepeatDirective.\n     * @param dataBinding - The binding that provides the array to render.\n     * @param templateBinding - The template binding used to obtain a template to render for each item in the array.\n     * @param options - Options used to turn on special repeat features.\n     */\n    constructor(dataBinding, templateBinding, options) {\n        this.dataBinding = dataBinding;\n        this.templateBinding = templateBinding;\n        this.options = options;\n        ArrayObserver.enable();\n    }\n    /**\n     * Creates a placeholder string based on the directive's index within the template.\n     * @param index - The index of the directive within the template.\n     */\n    createHTML(add) {\n        return Markup.comment(add(this));\n    }\n    /**\n     * Creates a behavior for the provided target node.\n     * @param target - The node instance to create the behavior for.\n     */\n    createBehavior() {\n        return new RepeatBehavior(this);\n    }\n}\nHTMLDirective.define(RepeatDirective);\n/**\n * A directive that enables list rendering.\n * @param items - The array to render.\n * @param template - The template or a template binding used obtain a template\n * to render for each item in the array.\n * @param options - Options used to turn on special repeat features.\n * @public\n */\nexport function repeat(items, template, options = defaultRepeatOptions) {\n    const dataBinding = normalizeBinding(items);\n    const templateBinding = normalizeBinding(template);\n    return new RepeatDirective(dataBinding, templateBinding, Object.assign(Object.assign({}, defaultRepeatOptions), options));\n}\n","import { isString } from \"../interfaces.js\";\nimport { HTMLDirective } from \"./html-directive.js\";\nimport { NodeObservationDirective } from \"./node-observation.js\";\nconst slotEvent = \"slotchange\";\n/**\n * The runtime behavior for slotted node observation.\n * @public\n */\nexport class SlottedDirective extends NodeObservationDirective {\n    /**\n     * Begins observation of the nodes.\n     * @param target - The target to observe.\n     */\n    observe(target) {\n        target.addEventListener(slotEvent, this);\n    }\n    /**\n     * Disconnects observation of the nodes.\n     * @param target - The target to unobserve.\n     */\n    disconnect(target) {\n        target.removeEventListener(slotEvent, this);\n    }\n    /**\n     * Retrieves the raw nodes that should be assigned to the source property.\n     * @param target - The target to get the node to.\n     */\n    getNodes(target) {\n        return target.assignedNodes(this.options);\n    }\n    /** @internal */\n    handleEvent(event) {\n        const target = event.currentTarget;\n        this.updateTarget(this.getSource(target), this.computeNodes(target));\n    }\n}\nHTMLDirective.define(SlottedDirective);\n/**\n * A directive that observes the `assignedNodes()` of a slot and updates a property\n * whenever they change.\n * @param propertyOrOptions - The options used to configure slotted node observation.\n * @public\n */\nexport function slotted(propertyOrOptions) {\n    if (isString(propertyOrOptions)) {\n        propertyOrOptions = { property: propertyOrOptions };\n    }\n    return new SlottedDirective(propertyOrOptions);\n}\n","import { emptyArray } from \"../platform.js\";\nimport { StatelessAttachedAttributeDirective } from \"./html-directive.js\";\nconst selectElements = (value) => value.nodeType === 1;\n/**\n * Creates a function that can be used to filter a Node array, selecting only elements.\n * @param selector - An optional selector to restrict the filter to.\n * @public\n */\nexport const elements = (selector) => selector\n    ? value => value.nodeType === 1 && value.matches(selector)\n    : selectElements;\n/**\n * A base class for node observation.\n * @public\n * @remarks\n * Internally used by the SlottedDirective and the ChildrenDirective.\n */\nexport class NodeObservationDirective extends StatelessAttachedAttributeDirective {\n    /**\n     * The unique id of the factory.\n     */\n    get id() {\n        return this._id;\n    }\n    set id(value) {\n        this._id = value;\n        this._controllerProperty = `${value}-c`;\n    }\n    /**\n     * Bind this behavior to the source.\n     * @param source - The source to bind to.\n     * @param context - The execution context that the binding is operating within.\n     * @param targets - The targets that behaviors in a view can attach to.\n     */\n    bind(controller) {\n        const target = controller.targets[this.targetNodeId];\n        target[this._controllerProperty] = controller;\n        this.updateTarget(controller.source, this.computeNodes(target));\n        this.observe(target);\n        controller.onUnbind(this);\n    }\n    /**\n     * Unbinds this behavior from the source.\n     * @param source - The source to unbind from.\n     * @param context - The execution context that the binding is operating within.\n     * @param targets - The targets that behaviors in a view can attach to.\n     */\n    unbind(controller) {\n        const target = controller.targets[this.targetNodeId];\n        this.updateTarget(controller.source, emptyArray);\n        this.disconnect(target);\n        target[this._controllerProperty] = null;\n    }\n    /**\n     * Gets the data source for the target.\n     * @param target - The target to get the source for.\n     * @returns The source.\n     */\n    getSource(target) {\n        return target[this._controllerProperty].source;\n    }\n    /**\n     * Updates the source property with the computed nodes.\n     * @param source - The source object to assign the nodes property to.\n     * @param value - The nodes to assign to the source object property.\n     */\n    updateTarget(source, value) {\n        source[this.options.property] = value;\n    }\n    /**\n     * Computes the set of nodes that should be assigned to the source property.\n     * @param target - The target to compute the nodes for.\n     * @returns The computed nodes.\n     * @remarks\n     * Applies filters if provided.\n     */\n    computeNodes(target) {\n        let nodes = this.getNodes(target);\n        if (\"filter\" in this.options) {\n            nodes = nodes.filter(this.options.filter);\n        }\n        return nodes;\n    }\n}\n","import { isString, noop } from \"../interfaces.js\";\nimport { HTMLDirective } from \"./html-directive.js\";\nimport { NodeObservationDirective } from \"./node-observation.js\";\n/**\n * The runtime behavior for child node observation.\n * @public\n */\nexport class ChildrenDirective extends NodeObservationDirective {\n    /**\n     * Creates an instance of ChildrenDirective.\n     * @param options - The options to use in configuring the child observation behavior.\n     */\n    constructor(options) {\n        super(options);\n        this.observerProperty = Symbol();\n        this.handleEvent = (mutations, observer) => {\n            const target = observer.target;\n            this.updateTarget(this.getSource(target), this.computeNodes(target));\n        };\n        options.childList = true;\n    }\n    /**\n     * Begins observation of the nodes.\n     * @param target - The target to observe.\n     */\n    observe(target) {\n        let observer = target[this.observerProperty];\n        if (!observer) {\n            observer = new MutationObserver(this.handleEvent);\n            observer.toJSON = noop;\n            target[this.observerProperty] = observer;\n        }\n        observer.target = target;\n        observer.observe(target, this.options);\n    }\n    /**\n     * Disconnects observation of the nodes.\n     * @param target - The target to unobserve.\n     */\n    disconnect(target) {\n        const observer = target[this.observerProperty];\n        observer.target = null;\n        observer.disconnect();\n    }\n    /**\n     * Retrieves the raw nodes that should be assigned to the source property.\n     * @param target - The target to get the node to.\n     */\n    getNodes(target) {\n        if (\"selector\" in this.options) {\n            return Array.from(target.querySelectorAll(this.options.selector));\n        }\n        return Array.from(target.childNodes);\n    }\n}\nHTMLDirective.define(ChildrenDirective);\n/**\n * A directive that observes the `childNodes` of an element and updates a property\n * whenever they change.\n * @param propertyOrOptions - The options used to configure child node observation.\n * @public\n */\nexport function children(propertyOrOptions) {\n    if (isString(propertyOrOptions)) {\n        propertyOrOptions = {\n            property: propertyOrOptions,\n        };\n    }\n    return new ChildrenDirective(propertyOrOptions);\n}\n","import { isFunction } from \"../interfaces.js\";\nimport { ElementController } from \"./element-controller.js\";\nimport { FASTElementDefinition, } from \"./fast-definitions.js\";\n/* eslint-disable-next-line @typescript-eslint/explicit-function-return-type */\nfunction createFASTElement(BaseType) {\n    const type = class extends BaseType {\n        constructor() {\n            /* eslint-disable-next-line */\n            super();\n            ElementController.forCustomElement(this);\n        }\n        $emit(type, detail, options) {\n            return this.$fastController.emit(type, detail, options);\n        }\n        connectedCallback() {\n            this.$fastController.connect();\n        }\n        disconnectedCallback() {\n            this.$fastController.disconnect();\n        }\n        attributeChangedCallback(name, oldValue, newValue) {\n            this.$fastController.onAttributeChangedCallback(name, oldValue, newValue);\n        }\n    };\n    FASTElementDefinition.registerBaseType(type);\n    return type;\n}\nfunction compose(type, nameOrDef) {\n    if (isFunction(type)) {\n        return FASTElementDefinition.compose(type, nameOrDef);\n    }\n    return FASTElementDefinition.compose(this, type);\n}\nfunction define(type, nameOrDef) {\n    if (isFunction(type)) {\n        return FASTElementDefinition.compose(type, nameOrDef).define().type;\n    }\n    return FASTElementDefinition.compose(this, type).define().type;\n}\nfunction from(BaseType) {\n    return createFASTElement(BaseType);\n}\n/**\n * A minimal base class for FASTElements that also provides\n * static helpers for working with FASTElements.\n * @public\n */\nexport const FASTElement = Object.assign(createFASTElement(HTMLElement), {\n    /**\n     * Creates a new FASTElement base class inherited from the\n     * provided base type.\n     * @param BaseType - The base element type to inherit from.\n     */\n    from,\n    /**\n     * Defines a platform custom element based on the provided type and definition.\n     * @param type - The custom element type to define.\n     * @param nameOrDef - The name of the element to define or a definition object\n     * that describes the element to define.\n     */\n    define,\n    /**\n     * Defines metadata for a FASTElement which can be used to later define the element.\n     * @public\n     */\n    compose,\n});\n/**\n * Decorator: Defines a platform custom element based on `FASTElement`.\n * @param nameOrDef - The name of the element to define or a definition object\n * that describes the element to define.\n * @public\n */\nexport function customElement(nameOrDef) {\n    /* eslint-disable-next-line @typescript-eslint/explicit-function-return-type */\n    return function (type) {\n        define(type, nameOrDef);\n    };\n}\n","import \"../interfaces.js\";\nimport { PropertyChangeNotifier } from \"../observation/notifier.js\";\nimport { ExecutionContext, Observable, SourceLifetime, } from \"../observation/observable.js\";\nimport { FAST, makeSerializationNoop } from \"../platform.js\";\nimport { ElementStyles } from \"../styles/element-styles.js\";\nimport { FASTElementDefinition } from \"./fast-definitions.js\";\nconst defaultEventOptions = {\n    bubbles: true,\n    composed: true,\n    cancelable: true,\n};\nconst isConnectedPropertyName = \"isConnected\";\nconst shadowRoots = new WeakMap();\nfunction getShadowRoot(element) {\n    var _a, _b;\n    return (_b = (_a = element.shadowRoot) !== null && _a !== void 0 ? _a : shadowRoots.get(element)) !== null && _b !== void 0 ? _b : null;\n}\nlet elementControllerStrategy;\n/**\n * Controls the lifecycle and rendering of a `FASTElement`.\n * @public\n */\nexport class ElementController extends PropertyChangeNotifier {\n    /**\n     * Creates a Controller to control the specified element.\n     * @param element - The element to be controlled by this controller.\n     * @param definition - The element definition metadata that instructs this\n     * controller in how to handle rendering and other platform integrations.\n     * @internal\n     */\n    constructor(element, definition) {\n        super(element);\n        this.boundObservables = null;\n        this.needsInitialization = true;\n        this.hasExistingShadowRoot = false;\n        this._template = null;\n        this.stage = 3 /* Stages.disconnected */;\n        /**\n         * A guard against connecting behaviors multiple times\n         * during connect in scenarios where a behavior adds\n         * another behavior during it's connectedCallback\n         */\n        this.guardBehaviorConnection = false;\n        this.behaviors = null;\n        this._mainStyles = null;\n        /**\n         * This allows Observable.getNotifier(...) to return the Controller\n         * when the notifier for the Controller itself is being requested. The\n         * result is that the Observable system does not need to create a separate\n         * instance of Notifier for observables on the Controller. The component and\n         * the controller will now share the same notifier, removing one-object construct\n         * per web component instance.\n         */\n        this.$fastController = this;\n        /**\n         * The view associated with the custom element.\n         * @remarks\n         * If `null` then the element is managing its own rendering.\n         */\n        this.view = null;\n        this.source = element;\n        this.definition = definition;\n        const shadowOptions = definition.shadowOptions;\n        if (shadowOptions !== void 0) {\n            let shadowRoot = element.shadowRoot;\n            if (shadowRoot) {\n                this.hasExistingShadowRoot = true;\n            }\n            else {\n                shadowRoot = element.attachShadow(shadowOptions);\n                if (shadowOptions.mode === \"closed\") {\n                    shadowRoots.set(element, shadowRoot);\n                }\n            }\n        }\n        // Capture any observable values that were set by the binding engine before\n        // the browser upgraded the element. Then delete the property since it will\n        // shadow the getter/setter that is required to make the observable operate.\n        // Later, in the connect callback, we'll re-apply the values.\n        const accessors = Observable.getAccessors(element);\n        if (accessors.length > 0) {\n            const boundObservables = (this.boundObservables = Object.create(null));\n            for (let i = 0, ii = accessors.length; i < ii; ++i) {\n                const propertyName = accessors[i].name;\n                const value = element[propertyName];\n                if (value !== void 0) {\n                    delete element[propertyName];\n                    boundObservables[propertyName] = value;\n                }\n            }\n        }\n    }\n    /**\n     * Indicates whether or not the custom element has been\n     * connected to the document.\n     */\n    get isConnected() {\n        Observable.track(this, isConnectedPropertyName);\n        return this.stage === 1 /* Stages.connected */;\n    }\n    /**\n     * The context the expression is evaluated against.\n     */\n    get context() {\n        var _a, _b;\n        return (_b = (_a = this.view) === null || _a === void 0 ? void 0 : _a.context) !== null && _b !== void 0 ? _b : ExecutionContext.default;\n    }\n    /**\n     * Indicates whether the controller is bound.\n     */\n    get isBound() {\n        var _a, _b;\n        return (_b = (_a = this.view) === null || _a === void 0 ? void 0 : _a.isBound) !== null && _b !== void 0 ? _b : false;\n    }\n    /**\n     * Indicates how the source's lifetime relates to the controller's lifetime.\n     */\n    get sourceLifetime() {\n        var _a;\n        return (_a = this.view) === null || _a === void 0 ? void 0 : _a.sourceLifetime;\n    }\n    /**\n     * Gets/sets the template used to render the component.\n     * @remarks\n     * This value can only be accurately read after connect but can be set at any time.\n     */\n    get template() {\n        var _a;\n        // 1. Template overrides take top precedence.\n        if (this._template === null) {\n            const definition = this.definition;\n            if (this.source.resolveTemplate) {\n                // 2. Allow for element instance overrides next.\n                this._template = this.source.resolveTemplate();\n            }\n            else if (definition.template) {\n                // 3. Default to the static definition.\n                this._template = (_a = definition.template) !== null && _a !== void 0 ? _a : null;\n            }\n        }\n        return this._template;\n    }\n    set template(value) {\n        if (this._template === value) {\n            return;\n        }\n        this._template = value;\n        if (!this.needsInitialization) {\n            this.renderTemplate(value);\n        }\n    }\n    /**\n     * The main set of styles used for the component, independent\n     * of any dynamically added styles.\n     */\n    get mainStyles() {\n        var _a;\n        // 1. Styles overrides take top precedence.\n        if (this._mainStyles === null) {\n            const definition = this.definition;\n            if (this.source.resolveStyles) {\n                // 2. Allow for element instance overrides next.\n                this._mainStyles = this.source.resolveStyles();\n            }\n            else if (definition.styles) {\n                // 3. Default to the static definition.\n                this._mainStyles = (_a = definition.styles) !== null && _a !== void 0 ? _a : null;\n            }\n        }\n        return this._mainStyles;\n    }\n    set mainStyles(value) {\n        if (this._mainStyles === value) {\n            return;\n        }\n        if (this._mainStyles !== null) {\n            this.removeStyles(this._mainStyles);\n        }\n        this._mainStyles = value;\n        if (!this.needsInitialization) {\n            this.addStyles(value);\n        }\n    }\n    /**\n     * Registers an unbind handler with the controller.\n     * @param behavior - An object to call when the controller unbinds.\n     */\n    onUnbind(behavior) {\n        var _a;\n        (_a = this.view) === null || _a === void 0 ? void 0 : _a.onUnbind(behavior);\n    }\n    /**\n     * Adds the behavior to the component.\n     * @param behavior - The behavior to add.\n     */\n    addBehavior(behavior) {\n        var _a, _b;\n        const targetBehaviors = (_a = this.behaviors) !== null && _a !== void 0 ? _a : (this.behaviors = new Map());\n        const count = (_b = targetBehaviors.get(behavior)) !== null && _b !== void 0 ? _b : 0;\n        if (count === 0) {\n            targetBehaviors.set(behavior, 1);\n            behavior.addedCallback && behavior.addedCallback(this);\n            if (behavior.connectedCallback &&\n                !this.guardBehaviorConnection &&\n                (this.stage === 1 /* Stages.connected */ || this.stage === 0 /* Stages.connecting */)) {\n                behavior.connectedCallback(this);\n            }\n        }\n        else {\n            targetBehaviors.set(behavior, count + 1);\n        }\n    }\n    /**\n     * Removes the behavior from the component.\n     * @param behavior - The behavior to remove.\n     * @param force - Forces removal even if this behavior was added more than once.\n     */\n    removeBehavior(behavior, force = false) {\n        const targetBehaviors = this.behaviors;\n        if (targetBehaviors === null) {\n            return;\n        }\n        const count = targetBehaviors.get(behavior);\n        if (count === void 0) {\n            return;\n        }\n        if (count === 1 || force) {\n            targetBehaviors.delete(behavior);\n            if (behavior.disconnectedCallback && this.stage !== 3 /* Stages.disconnected */) {\n                behavior.disconnectedCallback(this);\n            }\n            behavior.removedCallback && behavior.removedCallback(this);\n        }\n        else {\n            targetBehaviors.set(behavior, count - 1);\n        }\n    }\n    /**\n     * Adds styles to this element. Providing an HTMLStyleElement will attach the element instance to the shadowRoot.\n     * @param styles - The styles to add.\n     */\n    addStyles(styles) {\n        var _a;\n        if (!styles) {\n            return;\n        }\n        const source = this.source;\n        if (styles instanceof HTMLElement) {\n            const target = (_a = getShadowRoot(source)) !== null && _a !== void 0 ? _a : this.source;\n            target.append(styles);\n        }\n        else if (!styles.isAttachedTo(source)) {\n            const sourceBehaviors = styles.behaviors;\n            styles.addStylesTo(source);\n            if (sourceBehaviors !== null) {\n                for (let i = 0, ii = sourceBehaviors.length; i < ii; ++i) {\n                    this.addBehavior(sourceBehaviors[i]);\n                }\n            }\n        }\n    }\n    /**\n     * Removes styles from this element. Providing an HTMLStyleElement will detach the element instance from the shadowRoot.\n     * @param styles - the styles to remove.\n     */\n    removeStyles(styles) {\n        var _a;\n        if (!styles) {\n            return;\n        }\n        const source = this.source;\n        if (styles instanceof HTMLElement) {\n            const target = (_a = getShadowRoot(source)) !== null && _a !== void 0 ? _a : source;\n            target.removeChild(styles);\n        }\n        else if (styles.isAttachedTo(source)) {\n            const sourceBehaviors = styles.behaviors;\n            styles.removeStylesFrom(source);\n            if (sourceBehaviors !== null) {\n                for (let i = 0, ii = sourceBehaviors.length; i < ii; ++i) {\n                    this.removeBehavior(sourceBehaviors[i]);\n                }\n            }\n        }\n    }\n    /**\n     * Runs connected lifecycle behavior on the associated element.\n     */\n    connect() {\n        if (this.stage !== 3 /* Stages.disconnected */) {\n            return;\n        }\n        this.stage = 0 /* Stages.connecting */;\n        // If we have any observables that were bound, re-apply their values.\n        if (this.boundObservables !== null) {\n            const element = this.source;\n            const boundObservables = this.boundObservables;\n            const propertyNames = Object.keys(boundObservables);\n            for (let i = 0, ii = propertyNames.length; i < ii; ++i) {\n                const propertyName = propertyNames[i];\n                element[propertyName] = boundObservables[propertyName];\n            }\n            this.boundObservables = null;\n        }\n        const behaviors = this.behaviors;\n        if (behaviors !== null) {\n            this.guardBehaviorConnection = true;\n            for (const key of behaviors.keys()) {\n                key.connectedCallback && key.connectedCallback(this);\n            }\n            this.guardBehaviorConnection = false;\n        }\n        if (this.needsInitialization) {\n            this.renderTemplate(this.template);\n            this.addStyles(this.mainStyles);\n            this.needsInitialization = false;\n        }\n        else if (this.view !== null) {\n            this.view.bind(this.source);\n        }\n        this.stage = 1 /* Stages.connected */;\n        Observable.notify(this, isConnectedPropertyName);\n    }\n    /**\n     * Runs disconnected lifecycle behavior on the associated element.\n     */\n    disconnect() {\n        if (this.stage !== 1 /* Stages.connected */) {\n            return;\n        }\n        this.stage = 2 /* Stages.disconnecting */;\n        Observable.notify(this, isConnectedPropertyName);\n        if (this.view !== null) {\n            this.view.unbind();\n        }\n        const behaviors = this.behaviors;\n        if (behaviors !== null) {\n            for (const key of behaviors.keys()) {\n                key.disconnectedCallback && key.disconnectedCallback(this);\n            }\n        }\n        this.stage = 3 /* Stages.disconnected */;\n    }\n    /**\n     * Runs the attribute changed callback for the associated element.\n     * @param name - The name of the attribute that changed.\n     * @param oldValue - The previous value of the attribute.\n     * @param newValue - The new value of the attribute.\n     */\n    onAttributeChangedCallback(name, oldValue, newValue) {\n        const attrDef = this.definition.attributeLookup[name];\n        if (attrDef !== void 0) {\n            attrDef.onAttributeChangedCallback(this.source, newValue);\n        }\n    }\n    /**\n     * Emits a custom HTML event.\n     * @param type - The type name of the event.\n     * @param detail - The event detail object to send with the event.\n     * @param options - The event options. By default bubbles and composed.\n     * @remarks\n     * Only emits events if connected.\n     */\n    emit(type, detail, options) {\n        if (this.stage === 1 /* Stages.connected */) {\n            return this.source.dispatchEvent(new CustomEvent(type, Object.assign(Object.assign({ detail }, defaultEventOptions), options)));\n        }\n        return false;\n    }\n    renderTemplate(template) {\n        var _a;\n        // When getting the host to render to, we start by looking\n        // up the shadow root. If there isn't one, then that means\n        // we're doing a Light DOM render to the element's direct children.\n        const element = this.source;\n        const host = (_a = getShadowRoot(element)) !== null && _a !== void 0 ? _a : element;\n        if (this.view !== null) {\n            // If there's already a view, we need to unbind and remove through dispose.\n            this.view.dispose();\n            this.view = null;\n        }\n        else if (!this.needsInitialization || this.hasExistingShadowRoot) {\n            this.hasExistingShadowRoot = false;\n            // If there was previous custom rendering, we need to clear out the host.\n            for (let child = host.firstChild; child !== null; child = host.firstChild) {\n                host.removeChild(child);\n            }\n        }\n        if (template) {\n            // If a new template was provided, render it.\n            this.view = template.render(element, host, element);\n            this.view.sourceLifetime =\n                SourceLifetime.coupled;\n        }\n    }\n    /**\n     * Locates or creates a controller for the specified element.\n     * @param element - The element to return the controller for.\n     * @remarks\n     * The specified element must have a {@link FASTElementDefinition}\n     * registered either through the use of the {@link customElement}\n     * decorator or a call to `FASTElement.define`.\n     */\n    static forCustomElement(element) {\n        const controller = element.$fastController;\n        if (controller !== void 0) {\n            return controller;\n        }\n        const definition = FASTElementDefinition.getForInstance(element);\n        if (definition === void 0) {\n            throw FAST.error(1401 /* Message.missingElementDefinition */);\n        }\n        return (element.$fastController = new elementControllerStrategy(element, definition));\n    }\n    /**\n     * Sets the strategy that ElementController.forCustomElement uses to construct\n     * ElementController instances for an element.\n     * @param strategy - The strategy to use.\n     */\n    static setStrategy(strategy) {\n        elementControllerStrategy = strategy;\n    }\n}\nmakeSerializationNoop(ElementController);\n// Set default strategy for ElementController\nElementController.setStrategy(ElementController);\n/**\n * Converts a styleTarget into the operative target. When the provided target is an Element\n * that is a FASTElement, the function will return the ShadowRoot for that element. Otherwise,\n * it will return the root node for the element.\n * @param target\n * @returns\n */\nfunction normalizeStyleTarget(target) {\n    var _a;\n    if (\"adoptedStyleSheets\" in target) {\n        return target;\n    }\n    else {\n        return ((_a = getShadowRoot(target)) !== null && _a !== void 0 ? _a : target.getRootNode());\n    }\n}\n// Default StyleStrategy implementations are defined in this module because they\n// require access to element shadowRoots, and we don't want to leak shadowRoot\n// objects out of this module.\n/**\n * https://wicg.github.io/construct-stylesheets/\n * https://developers.google.com/web/updates/2019/02/constructable-stylesheets\n *\n * @internal\n */\nexport class AdoptedStyleSheetsStrategy {\n    constructor(styles) {\n        const styleSheetCache = AdoptedStyleSheetsStrategy.styleSheetCache;\n        this.sheets = styles.map((x) => {\n            if (x instanceof CSSStyleSheet) {\n                return x;\n            }\n            let sheet = styleSheetCache.get(x);\n            if (sheet === void 0) {\n                sheet = new CSSStyleSheet();\n                sheet.replaceSync(x);\n                styleSheetCache.set(x, sheet);\n            }\n            return sheet;\n        });\n    }\n    addStylesTo(target) {\n        addAdoptedStyleSheets(normalizeStyleTarget(target), this.sheets);\n    }\n    removeStylesFrom(target) {\n        removeAdoptedStyleSheets(normalizeStyleTarget(target), this.sheets);\n    }\n}\nAdoptedStyleSheetsStrategy.styleSheetCache = new Map();\nlet id = 0;\nconst nextStyleId = () => `fast-${++id}`;\nfunction usableStyleTarget(target) {\n    return target === document ? document.body : target;\n}\n/**\n * @internal\n */\nexport class StyleElementStrategy {\n    constructor(styles) {\n        this.styles = styles;\n        this.styleClass = nextStyleId();\n    }\n    addStylesTo(target) {\n        target = usableStyleTarget(normalizeStyleTarget(target));\n        const styles = this.styles;\n        const styleClass = this.styleClass;\n        for (let i = 0; i < styles.length; i++) {\n            const element = document.createElement(\"style\");\n            element.innerHTML = styles[i];\n            element.className = styleClass;\n            target.append(element);\n        }\n    }\n    removeStylesFrom(target) {\n        target = usableStyleTarget(normalizeStyleTarget(target));\n        const styles = target.querySelectorAll(`.${this.styleClass}`);\n        for (let i = 0, ii = styles.length; i < ii; ++i) {\n            target.removeChild(styles[i]);\n        }\n    }\n}\nlet addAdoptedStyleSheets = (target, sheets) => {\n    target.adoptedStyleSheets = [...target.adoptedStyleSheets, ...sheets];\n};\nlet removeAdoptedStyleSheets = (target, sheets) => {\n    target.adoptedStyleSheets = target.adoptedStyleSheets.filter((x) => sheets.indexOf(x) === -1);\n};\nif (ElementStyles.supportsAdoptedStyleSheets) {\n    try {\n        // Test if browser implementation uses FrozenArray.\n        // If not, use push / splice to alter the stylesheets\n        // in place. This circumvents a bug in Safari 16.4 where\n        // periodically, assigning the array would previously\n        // cause sheets to be removed.\n        document.adoptedStyleSheets.push();\n        document.adoptedStyleSheets.splice();\n        addAdoptedStyleSheets = (target, sheets) => {\n            target.adoptedStyleSheets.push(...sheets);\n        };\n        removeAdoptedStyleSheets = (target, sheets) => {\n            for (const sheet of sheets) {\n                const index = target.adoptedStyleSheets.indexOf(sheet);\n                if (index !== -1) {\n                    target.adoptedStyleSheets.splice(index, 1);\n                }\n            }\n        };\n    }\n    catch (e) {\n        // Do nothing if an error is thrown, the default\n        // case handles FrozenArray.\n    }\n    ElementStyles.setDefaultStrategy(AdoptedStyleSheetsStrategy);\n}\nelse {\n    ElementStyles.setDefaultStrategy(StyleElementStrategy);\n}\n","import { isString, KernelServiceId } from \"../interfaces.js\";\nimport { Observable } from \"../observation/observable.js\";\nimport { createTypeRegistry, FAST } from \"../platform.js\";\nimport { ElementStyles } from \"../styles/element-styles.js\";\nimport { AttributeDefinition } from \"./attributes.js\";\nconst defaultShadowOptions = { mode: \"open\" };\nconst defaultElementOptions = {};\nconst fastElementBaseTypes = new Set();\nconst fastElementRegistry = FAST.getById(KernelServiceId.elementRegistry, () => createTypeRegistry());\n/**\n * Defines metadata for a FASTElement.\n * @public\n */\nexport class FASTElementDefinition {\n    constructor(type, nameOrConfig = type.definition) {\n        var _a;\n        this.platformDefined = false;\n        if (isString(nameOrConfig)) {\n            nameOrConfig = { name: nameOrConfig };\n        }\n        this.type = type;\n        this.name = nameOrConfig.name;\n        this.template = nameOrConfig.template;\n        this.registry = (_a = nameOrConfig.registry) !== null && _a !== void 0 ? _a : customElements;\n        const proto = type.prototype;\n        const attributes = AttributeDefinition.collect(type, nameOrConfig.attributes);\n        const observedAttributes = new Array(attributes.length);\n        const propertyLookup = {};\n        const attributeLookup = {};\n        for (let i = 0, ii = attributes.length; i < ii; ++i) {\n            const current = attributes[i];\n            observedAttributes[i] = current.attribute;\n            propertyLookup[current.name] = current;\n            attributeLookup[current.attribute] = current;\n            Observable.defineProperty(proto, current);\n        }\n        Reflect.defineProperty(type, \"observedAttributes\", {\n            value: observedAttributes,\n            enumerable: true,\n        });\n        this.attributes = attributes;\n        this.propertyLookup = propertyLookup;\n        this.attributeLookup = attributeLookup;\n        this.shadowOptions =\n            nameOrConfig.shadowOptions === void 0\n                ? defaultShadowOptions\n                : nameOrConfig.shadowOptions === null\n                    ? void 0\n                    : Object.assign(Object.assign({}, defaultShadowOptions), nameOrConfig.shadowOptions);\n        this.elementOptions =\n            nameOrConfig.elementOptions === void 0\n                ? defaultElementOptions\n                : Object.assign(Object.assign({}, defaultElementOptions), nameOrConfig.elementOptions);\n        this.styles = ElementStyles.normalize(nameOrConfig.styles);\n        fastElementRegistry.register(this);\n    }\n    /**\n     * Indicates if this element has been defined in at least one registry.\n     */\n    get isDefined() {\n        return this.platformDefined;\n    }\n    /**\n     * Defines a custom element based on this definition.\n     * @param registry - The element registry to define the element in.\n     * @remarks\n     * This operation is idempotent per registry.\n     */\n    define(registry = this.registry) {\n        const type = this.type;\n        if (!registry.get(this.name)) {\n            this.platformDefined = true;\n            registry.define(this.name, type, this.elementOptions);\n        }\n        return this;\n    }\n    /**\n     * Creates an instance of FASTElementDefinition.\n     * @param type - The type this definition is being created for.\n     * @param nameOrDef - The name of the element to define or a config object\n     * that describes the element to define.\n     */\n    static compose(type, nameOrDef) {\n        if (fastElementBaseTypes.has(type) || fastElementRegistry.getByType(type)) {\n            return new FASTElementDefinition(class extends type {\n            }, nameOrDef);\n        }\n        return new FASTElementDefinition(type, nameOrDef);\n    }\n    /**\n     * Registers a FASTElement base type.\n     * @param type - The type to register as a base type.\n     * @internal\n     */\n    static registerBaseType(type) {\n        fastElementBaseTypes.add(type);\n    }\n}\n/**\n * Gets the element definition associated with the specified type.\n * @param type - The custom element type to retrieve the definition for.\n */\nFASTElementDefinition.getByType = fastElementRegistry.getByType;\n/**\n * Gets the element definition associated with the instance.\n * @param instance - The custom element instance to retrieve the definition for.\n */\nFASTElementDefinition.getForInstance = fastElementRegistry.getForInstance;\n","import { Observable } from \"../observation/observable.js\";\nimport { isString } from \"../interfaces.js\";\nimport { Updates } from \"../observation/update-queue.js\";\nimport { DOM } from \"../dom.js\";\nimport { createMetadataLocator } from \"../platform.js\";\nconst booleanMode = \"boolean\";\nconst reflectMode = \"reflect\";\n/**\n * Metadata used to configure a custom attribute's behavior.\n * @public\n */\nexport const AttributeConfiguration = Object.freeze({\n    /**\n     * Locates all attribute configurations associated with a type.\n     */\n    locate: createMetadataLocator(),\n});\n/**\n * A {@link ValueConverter} that converts to and from `boolean` values.\n * @remarks\n * Used automatically when the `boolean` {@link AttributeMode} is selected.\n * @public\n */\nexport const booleanConverter = {\n    toView(value) {\n        return value ? \"true\" : \"false\";\n    },\n    fromView(value) {\n        return value === null ||\n            value === void 0 ||\n            value === \"false\" ||\n            value === false ||\n            value === 0\n            ? false\n            : true;\n    },\n};\n/**\n * A {@link ValueConverter} that converts to and from `boolean` values. `null`, `undefined`, `\"\"`, and `void` values are converted to `null`.\n * @public\n */\nexport const nullableBooleanConverter = {\n    toView(value) {\n        return typeof value === \"boolean\" ? value.toString() : \"\";\n    },\n    fromView(value) {\n        return [null, undefined, void 0].includes(value)\n            ? null\n            : booleanConverter.fromView(value);\n    },\n};\nfunction toNumber(value) {\n    if (value === null || value === undefined) {\n        return null;\n    }\n    const number = value * 1;\n    return isNaN(number) ? null : number;\n}\n/**\n * A {@link ValueConverter} that converts to and from `number` values.\n * @remarks\n * This converter allows for nullable numbers, returning `null` if the\n * input was `null`, `undefined`, or `NaN`.\n * @public\n */\nexport const nullableNumberConverter = {\n    toView(value) {\n        const output = toNumber(value);\n        return output ? output.toString() : output;\n    },\n    fromView: toNumber,\n};\n/**\n * An implementation of {@link Accessor} that supports reactivity,\n * change callbacks, attribute reflection, and type conversion for\n * custom elements.\n * @public\n */\nexport class AttributeDefinition {\n    /**\n     * Creates an instance of AttributeDefinition.\n     * @param Owner - The class constructor that owns this attribute.\n     * @param name - The name of the property associated with the attribute.\n     * @param attribute - The name of the attribute in HTML.\n     * @param mode - The {@link AttributeMode} that describes the behavior of this attribute.\n     * @param converter - A {@link ValueConverter} that integrates with the property getter/setter\n     * to convert values to and from a DOM string.\n     */\n    constructor(Owner, name, attribute = name.toLowerCase(), mode = reflectMode, converter) {\n        this.guards = new Set();\n        this.Owner = Owner;\n        this.name = name;\n        this.attribute = attribute;\n        this.mode = mode;\n        this.converter = converter;\n        this.fieldName = `_${name}`;\n        this.callbackName = `${name}Changed`;\n        this.hasCallback = this.callbackName in Owner.prototype;\n        if (mode === booleanMode && converter === void 0) {\n            this.converter = booleanConverter;\n        }\n    }\n    /**\n     * Sets the value of the attribute/property on the source element.\n     * @param source - The source element to access.\n     * @param value - The value to set the attribute/property to.\n     */\n    setValue(source, newValue) {\n        const oldValue = source[this.fieldName];\n        const converter = this.converter;\n        if (converter !== void 0) {\n            newValue = converter.fromView(newValue);\n        }\n        if (oldValue !== newValue) {\n            source[this.fieldName] = newValue;\n            this.tryReflectToAttribute(source);\n            if (this.hasCallback) {\n                source[this.callbackName](oldValue, newValue);\n            }\n            source.$fastController.notify(this.name);\n        }\n    }\n    /**\n     * Gets the value of the attribute/property on the source element.\n     * @param source - The source element to access.\n     */\n    getValue(source) {\n        Observable.track(source, this.name);\n        return source[this.fieldName];\n    }\n    /** @internal */\n    onAttributeChangedCallback(element, value) {\n        if (this.guards.has(element)) {\n            return;\n        }\n        this.guards.add(element);\n        this.setValue(element, value);\n        this.guards.delete(element);\n    }\n    tryReflectToAttribute(element) {\n        const mode = this.mode;\n        const guards = this.guards;\n        if (guards.has(element) || mode === \"fromView\") {\n            return;\n        }\n        Updates.enqueue(() => {\n            guards.add(element);\n            const latestValue = element[this.fieldName];\n            switch (mode) {\n                case reflectMode:\n                    const converter = this.converter;\n                    DOM.setAttribute(element, this.attribute, converter !== void 0 ? converter.toView(latestValue) : latestValue);\n                    break;\n                case booleanMode:\n                    DOM.setBooleanAttribute(element, this.attribute, latestValue);\n                    break;\n            }\n            guards.delete(element);\n        });\n    }\n    /**\n     * Collects all attribute definitions associated with the owner.\n     * @param Owner - The class constructor to collect attribute for.\n     * @param attributeLists - Any existing attributes to collect and merge with those associated with the owner.\n     * @internal\n     */\n    static collect(Owner, ...attributeLists) {\n        const attributes = [];\n        attributeLists.push(AttributeConfiguration.locate(Owner));\n        for (let i = 0, ii = attributeLists.length; i < ii; ++i) {\n            const list = attributeLists[i];\n            if (list === void 0) {\n                continue;\n            }\n            for (let j = 0, jj = list.length; j < jj; ++j) {\n                const config = list[j];\n                if (isString(config)) {\n                    attributes.push(new AttributeDefinition(Owner, config));\n                }\n                else {\n                    attributes.push(new AttributeDefinition(Owner, config.property, config.attribute, config.mode, config.converter));\n                }\n            }\n        }\n        return attributes;\n    }\n}\nexport function attr(configOrTarget, prop) {\n    let config;\n    function decorator($target, $prop) {\n        if (arguments.length > 1) {\n            // Non invocation:\n            // - @attr\n            // Invocation with or w/o opts:\n            // - @attr()\n            // - @attr({...opts})\n            config.property = $prop;\n        }\n        AttributeConfiguration.locate($target.constructor).push(config);\n    }\n    if (arguments.length > 1) {\n        // Non invocation:\n        // - @attr\n        config = {};\n        decorator(configOrTarget, prop);\n        return;\n    }\n    // Invocation with or w/o opts:\n    // - @attr()\n    // - @attr({...opts})\n    config = configOrTarget === void 0 ? {} : configOrTarget;\n    return decorator;\n}\n",null,"export { State } from './models/state.js';\nexport { createState } from './createState.js';","import { Notifier, Observable } from \"@microsoft/fast-element\";\n\n/** \n * La classe `State` gère et suit les valeurs d'état avec des capacités d'historique et d'abonnement.\n */\nexport class State<T = any>{\n\n  /** \n   * Propriété privée pour stocker l'historique des valeurs d'état, limitée aux 10 dernières entrées.\n  */\n  private _history : T[] = [];\n\n  /** \n   * Propriété privée pour stocker la valeur actuelle de l'état, initialisée à `null`.\n  */\n  private _value:T = null;\n\n  /** \n   * Propriété privée pour notifier les observateurs des changements d'état, initialisée avec `Observable.getNotifier`.\n  */\n  private _notifier:Notifier = Observable.getNotifier( this );\n\n  constructor( value = null ){\n    this._value = value;\n  }\n\n\n  /** \n   * Getter pour la valeur actuelle de l'état. Utilise `Observable.track` pour suivre les changements.\n  */\n  get value() {\n    Observable.track(this, 'value');\n    return this._value;\n  };\n\n  /**\n   * Setter pour mettre à jour la valeur de l'état. Ajoute la valeur actuelle à l'historique et notifie\n   * les observateurs du changement.\n   * @param {T} value - Nouvelle valeur de l'état.\n  */\n  set value(value: T) {\n    this._value = value;\n\n    this._history = [ this._value , ...this._history.reverse() ].reduce(( results , value ) => {\n      if(results.length > 10){\n        results.push( value );\n      };\n      return results;\n    } , []).reverse();\n\n    Observable.notify(this, 'value');\n  }\n\n  /**\n   * Méthode statique pour initialiser un nouvel objet `State` avec une valeur initiale facultative.\n   * @param {T} [value=null] - Valeur initiale de l'état.\n   * @returns Une nouvelle instance de `State` avec la valeur spécifiée.\n  */\n  static init<T = any>( value : T = null ){\n    return new State<T>( value );\n  }\n\n  /**\n   * Renvoie un tableau avec l'état actuel et une fonction pour mettre à jour l'état.\n   * @returns Un tableau contenant l'état actuel et une fonction de mise à jour.\n  */\n  get mutator():[ State<T> & T , ( newValue:T ) => void ]{\n    return [ this as any , ( value:T ) => {\n      this.value = value;\n    } ]\n  }\n\n  /** \n   * Abonne une fonction de rappel qui sera appelée à chaque changement de valeur de l'état.\n   * @param {function} callback - Fonction à appeler lors d'un changement de valeur.\n  */\n  subscribe( callback:(newValue: any) => void ){\n    this._notifier.subscribe( { handleChange : ( state , key ) => {\n      callback( state[key] );\n    } } );\n  };\n\n  /**\n   * Convertit l'état en une valeur primitive pour les objets, ou en Proxy pour les objets complexes.\n   * @returns La valeur primitive ou un Proxy pour les objets complexes.\n  */\n  [Symbol.toPrimitive](){\n    return typeof this.value != \"object\" ? this.value : new Proxy( this.value , {\n      get( target , key ){\n        return target[key] ? target[key] : undefined;\n      }\n    } )\n  }\n\n}","import { State } from \"./models/state.js\";\n\n/**\n * La fonction createState crée un état avec une valeur initiale et renvoie son mutateur.\n * @param {T} [value=null] - Le paramètre `value` dans la fonction `createState` est la valeur initiale\n * que vous souhaitez définir pour l'état. Il est facultatif et la valeur par défaut est « null » si\n * aucune valeur n'est fournie lors de l'appel de la fonction.\n * @returns La fonction `createState` renvoie la fonction `mutator` à partir de l'objet `State`\n * initialisé avec la `valeur` fournie.\n * ## Exemple \n * ```typescript\n * let [ counter , setCounter ] = createState<number>(0);\n * \n * counter.subscribe(( newValue ) => {\n *  \n *  console.log({newValue})\n * \n * })\n * ```\n */\nexport function createState< T = any >( value:T = null ):State< T >[\"mutator\"]{\n\n  return State.init( value ).mutator;\n\n}",null,"export { createStorage } from './create-storage.js';\nexport type { Storage , StorageKeys , StorageValues , StateValidator } from './models/storage.js'","import { _storage, Storage, StateValidator } from './models/storage.js';\n\n/**\n * La fonction `createStorage` crée un objet proxy pour gérer le stockage avec des méthodes d'accès et de mise à jour des données.\n * @template RECORD - Le type de l'enregistrement de stockage.\n * @param {Partial<RECORD>} [records={}] - Un objet partiel de type `RECORD`, contenant des données initiales pour le stockage. \n * @param {StateValidator} [stateValidator] - Une fonction de validation optionnelle appelée lors de la modification d'un état.\n * @returns {Storage<RECORD>} Un objet Proxy qui entoure l'objet de stockage créé en appelant `_storage.init` avec les enregistrements fournis.\n * @example\n * ```typescript\n * const initialData = { counter: 0, name: \"Alice\" };\n * const validator: StateValidator<number> = (key, previousValue, newValue) => newValue >= 0;\n * const storage = createStorage(initialData, validator);\n * \n * let [ counter , setCounter ] = storage.get('counter');\n * setCounter( 10 ); // met à jour la valeur si la validation réussit\n * console.log(+counter); // affiche 10\n * ```\n */\nexport function createStorage<RECORD extends Record<string, any>>(records: Partial<RECORD> = {}, stateValidator?: StateValidator): Storage<RECORD> {\n\n  // Création d'un proxy contenant le stockage\n  return new Proxy(_storage.init<RECORD>(records as RECORD, stateValidator), {\n\n    /**\n     * Intercepte les opérations d'accès aux propriétés du stockage.\n     * @param {Storage<RECORD>} target - L'objet cible auquel les opérations sont appliquées.\n     * @param {string} key - La clé de l'état ou de la méthode accédée.\n     * @param {any} receiver - L'objet Proxy qui intercepte l'opération.\n     * @returns {any} La méthode ou la valeur de l'état correspondant à la clé.\n     * @example\n     * ```typescript\n     * const storage = createStorage({ count: 0 });\n     * console.log(storage.count[0].value); // affiche 0\n     * storage.count ; // met à jour la valeur de count à 5\n     * ```\n    */\n    get(target, key: string & any, receiver) {\n      // Retourne les méthodes du stockage\n      if (target[key]) {\n        if (typeof target[key] == \"function\") return (target[key] as any).bind(target);\n        // Retourne les variables du stockage\n        else return target[key];\n      }\n      // Si la clé n'est pas dans le stockage\n      // Vérification de la présence de la clé dans le map du stockage\n      // Si présence de celle-ci, elle est retournée\n      else if (target.has(key)) return target.get(key);\n      // Sinon la clé n'existe pas et retourne undefined\n      else return undefined;\n    },\n\n    /**\n     * Intercepte les opérations de mise à jour des propriétés du stockage.\n     * @param {Storage<RECORD>} target - L'objet cible auquel les opérations sont appliquées.\n     * @param {string} key - La clé de l'état à mettre à jour.\n     * @param {any} newValue - La nouvelle valeur à assigner à l'état.\n     * @param {any} receiver - L'objet Proxy qui intercepte l'opération.\n     * @returns {boolean} Un indicateur de succès de la mise à jour.\n     * @example\n     * ```typescript\n     * const storage = createStorage({ count: 0 });\n     * storage.count ; // met à jour la valeur de count à 5\n     * console.log(storage.count[0].value); // affiche 5\n     * ```\n    */\n    set(target, key: string & any, newValue, receiver) {\n      if (target.has(key)) {\n        // Mise à jour du state contenant la valeur\n        target.get(key)[1](newValue);\n        return true;\n      }\n      // Sinon return undefined\n      else return undefined;\n    }\n  }) as any;\n\n}\n","import { State, createState } from '@lithium-framework/state';\n\n/**\n * Représente la fonction appelée lors du changement d'un état.\n * Cette fonction permet de valider la nouvelle valeur avant de l'appliquer à l'état.\n * La nouvelle valeur est stockée dans le state correspondant en fonction du succès ou de l'échec de l'opération.\n *\n * @template T - Le type de la valeur de l'état.\n * @param {string} key - La clé de l'état en cours de modification.\n * @param {T} previousValue - La valeur précédente de l'état avant la modification.\n * @param {T} newValue - La nouvelle valeur proposée pour l'état.\n * @returns {Promise<any> | boolean} - Une promesse ou une valeur booléenne indiquant le succès ou l'échec de la modification.\n * @example\n * ```typescript\n * const validator: StateValidator<number> = (key, previousValue, newValue) => {\n *   if (newValue >= 0) return true;\n *   return false;\n * };\n * ```\n */\nexport type StateValidator<T = any> = (key: string, previousValue: T, newValue: T) => Promise<any> | boolean;\n\n/** \n * Type représentant les clés des valeurs d'un enregistrement.\n * @template RECORD - Le type de l'enregistrement.\n */\nexport type StorageKeys<RECORD> = keyof RECORD;\n\n/** \n * Type représentant les mutateurs des valeurs d'un enregistrement.\n * @template RECORD - Le type de l'enregistrement.\n */\nexport type StorageValues<RECORD> = State<RECORD[StorageKeys<RECORD>]>[\"mutator\"];\n\n/** \n * La classe `_storage` étend `Map` pour stocker les valeurs d'état et fournit des méthodes\n * d'initialisation et d'accès aux mutateurs par clé.\n * @template RECORD - Le type de l'enregistrement stocké.\n */\nexport class _storage<RECORD extends Record<string, any>> extends Map<StorageKeys<RECORD>, StorageValues<RECORD>> {\n\n  private _validator: StateValidator = null;\n\n  /**\n   * Initialise une nouvelle instance de la classe `_storage` avec des enregistrements initiaux facultatifs et un validateur optionnel.\n   * @param {RECORD} [records] - Un objet contenant des paires clé-valeur représentant des enregistrements de données.\n   * @param {StateValidator} [validator] - Une fonction de validation optionnelle appelée lors de la modification d'un état.\n   * @returns {Storage<RECORD>} Une nouvelle instance de la classe `_storage` initialisée avec les enregistrements et le validateur fournis.\n   * @example\n   * ```typescript\n   * const records = { count: 0, name: \"John\" };\n   * const storage = _storage.init(records);\n   * ```\n   */\n  static init<RECORD extends Record<string, any>>(records?: RECORD, validator?: StateValidator): Storage<RECORD> {\n    return new _storage<RECORD>(records, validator) as Storage<RECORD>;\n  }\n\n  /**\n   * Constructeur qui initialise la classe `_storage` avec des enregistrements optionnels et un validateur.\n   * @param {RECORD} [records] - Un objet contenant des paires clé-valeur représentant des enregistrements de données.\n   * @param {StateValidator} [validator] - Une fonction de validation optionnelle appelée lors de la modification d'un état.\n   */\n  constructor(records?: RECORD, validator?: StateValidator) {\n    super();\n\n    if (validator) this._validator = validator;\n\n    // Si des enregistrements sont fournis, les ajouter au _storage\n    if (records) {\n      Object.keys(records).forEach((key) => {\n        this.set(key, createState(records[key]));\n      });\n    }\n  }\n\n  /**\n   * Récupère la valeur du stockage en fonction d'une clé spécifiée.\n   * Si un validateur est défini, il valide la nouvelle valeur avant de l'appliquer.\n   * @template T - Le type de la valeur de l'état.\n   * @param {StorageKeys<RECORD>} key - La clé utilisée pour accéder à un enregistrement spécifique en stockage.\n   * @returns {State<T>[\"mutator\"]} La fonction `mutator` associée à la clé spécifiée de l'objet `State`.\n   * @example\n   * ```typescript\n   * const storage = _storage.init({ count: 0 });\n   * const [count, setCount] = storage.get(\"count\");\n   * setCount(10); // met à jour la valeur si la validation réussit\n   * ```\n   */\n  get<T = any>(key: StorageKeys<RECORD>): State<T>[\"mutator\"] {\n    if (!this._validator) return super.get(key)!;\n\n    else {\n      let [state, setter] = super.get(key)!;\n      return [state, (newValue: T) => {\n        let previousValue = state.value;\n        let result = this._validator(key as string, previousValue, newValue);\n\n        if (result instanceof Promise) {\n          result\n            .then(() => setter(newValue as any))\n            .catch((error) => console.error(error));\n        } else if (result == true) {\n          setter(newValue as any);\n        }\n      }];\n    }\n  }\n}\n\n/** \n * Type `Storage` qui étend partiellement `_storage`.\n * @template RECORD - Le type de l'enregistrement.\n */\nexport type Storage<RECORD extends Record<string, any>> = _storage<RECORD> & { [key in StorageKeys<RECORD>]: StorageValues<RECORD> };\n",null,"// ===============================================\n// https://www.npmjs.com/package/get-random-values\n// ===============================================\nimport { default as getRandomValues } from 'get-random-values';\n\nexport type FixedLengthString<Length extends number> = string & { __fixedLength: Length };\nexport type ComponentId = FixedLengthString<12>;\nexport type Segment = FixedLengthString<4>;\nexport type ParentSegementId = `${Segment}-${Segment}-${Segment}`;\nexport type CollectionId = FixedLengthString<12>;\nexport type HUID = `${ComponentId}-${ParentSegementId}-${CollectionId}`;\n\n/** \n * Interface pour les options de l'UUID hiérarchique.\n */\nexport interface HierarchicalUUIDOptions {\n  /** \n   * Identifiant parent (optionnel). \n   */\n  parentId?: FixedLengthString<12>;\n\n  /**\n   * Identifiant de collection (optionnel).\n   */\n  collectionId?: FixedLengthString<12>;\n}\n\n/** \n * Classe _HUID pour manipuler les UUID hiérarchiques.\n*/\nexport class _HUID extends String{\n\n  /**\n   * Obtient l'identifiant de composant en extrayant la première partie de l'UUID.\n   * @returns L'identifiant de composant.\n   * @example\n   * ```typescript\n   *  const uuid = new _HUID('123456789012-1234-5678-90ab-abcdefabcdef');\n   *  console.log(uuid.componentId); // '123456789012'\n   * ```\n  */\n  get componentId(){ return this.split('-')[0] as ComponentId; }\n\n  /**\n   * Obtient la première section de l'UUID après division par '-'.\n   * @returns La première section de l'UUID.\n   * @example\n   * ```typescript\n   *  const uuid = new _HUID('123456789012-1234-5678-90ab-abcdefabcdef');\n   *  console.log(uuid.section1); // '1234'\n   * ```\n  */\n  get section1(){ return this.split('-')[1] as Segment; }\n\n  /**\n   * Obtient la deuxième section de l'UUID après division par '-'.\n   * @returns La deuxième section de l'UUID.\n   * @example\n   * ```typescipt\n   *  const uuid = new _HUID('123456789012-1234-5678-90ab-abcdefabcdef');\n   *  console.log(uuid.section2); // '5678'\n   * ```\n  */\n  get section2(){ return this.split('-')[2] as Segment; }\n\n  /**\n   * Obtient la troisième section de l'UUID après division par '-'.\n   * @returns La troisième section de l'UUID.\n   * @example\n   * ```typescript\n   *  const uuid = new _HUID('123456789012-1234-5678-90ab-abcdefabcdef');\n   *  console.log(uuid.section3); // '90ab'\n   * ```\n  */\n  get section3(){ return this.split('-')[3] as Segment; }\n\n  /**\n   * Obtient l'identifiant de collection en extrayant la cinquième partie de l'UUID.\n   * @returns L'identifiant de collection.\n   * @example\n   * ```typescript\n   *  const uuid = new _HUID('123456789012-1234-5678-90ab-abcdefabcdef');\n   *  console.log(uuid.collectionId); // 'abcdefabcdef'\n   * ```\n  */\n  get collectionId(){ return this.split('-')[4] as CollectionId; }\n\n  /**\n   * Obtient l'identifiant parent en concaténant les sections 1, 2 et 3.\n   * @returns L'identifiant parent.\n   * @example\n   * ```typescript\n   *  const uuid = new _HUID('123456789012-1234-5678-90ab-abcdefabcdef');\n   *  console.log(uuid.parentId); // '1234567890ab'\n   * ```\n  */\n  get parentId(){ return [this.section1,this.section2,this.section3].join('') as FixedLengthString<12>; }\n\n  /**\n   * Étend l'UUID hiérarchique avec des options personnalisées.\n   * @param {HierarchicalUUIDOptions} [options] - Options pour personnaliser l'UUID.\n   * @returns Un nouvel UUID hiérarchique (_HUID).\n   * @example\n   * ```typescript\n   *  const uuid = new _HUID('123456789012-1234-5678-90ab-abcdefabcdef');\n   *  const extendedUUID = uuid.extend({ parentId: '098765432109', collectionId: 'abcdefabcdef' });\n   *  console.log(extendedUUID); // Un nouvel _HUID avec les sections mises à jour.\n   * ```\n  */\n  extend(options?:HierarchicalUUIDOptions){\n\n    return uuid.hv1({\n      parentId : this.componentId,\n      collectionId : this.collectionId,\n    })\n\n  }\n\n}\n\n/** \n * Classe pour générer des UUID.\n*/\nexport class uuid{\n\n  /**\n   * Obtient une valeur par défaut pour l'identifiant de composant.\n   * @returns '000000000000' en tant que ComponentId.\n  */\n  static get componentId(){ return '000000000000' as ComponentId; }\n\n  /**\n   * Obtient une valeur par défaut pour la première section de l'UUID.\n   * @returns '0000' en tant que Segment.\n  */\n  static get segment1(){ return '0000' as Segment; }\n\n  /**\n   * Obtient une valeur par défaut pour la deuxième section de l'UUID.\n   * @returns '0000' en tant que Segment.\n  */\n  static get segment2(){ return '0000' as Segment; }\n\n  /**\n   * Obtient une valeur par défaut pour la troisième section de l'UUID.\n   * @returns '0000' en tant que Segment.\n  */\n  static get segment3(){ return '0000' as Segment; }\n\n  /**\n   * Obtient une valeur par défaut pour l'identifiant de collection.\n   * @returns '000000000000' en tant que CollectionId.\n  */\n  static get collectionId(){ return '000000000000' as CollectionId; }\n\n  /**\n   * Obtient un UUID NIL (null) par défaut.\n   * @returns L'UUID NIL sous forme de chaîne.\n  */\n  static get NIL(){ return new _HUID(`${uuid.componentId}-${uuid.segment1}-${uuid.segment2}-${uuid.segment3}-${uuid.collectionId}`); }\n\n  /**\n   * Encode une chaîne de longueur fixe en remplaçant certains caractères par des valeurs hexadécimales aléatoires.\n   * @param chaine - Une chaîne de longueur fixe.\n   * @returns Une chaîne de longueur fixe avec des valeurs hexadécimales aléatoires.\n   * @example\n   * ```typescript\n   *  const encoded = uuid.encode('123456789012');\n   *  console.log(encoded); // '1a2b3c4d5e6f'\n   * ```\n  */\n  static encode< N extends number = 4 | 12 >( chaine:FixedLengthString<N> ){\n    return chaine.replace(/[018]/g, (c:any) =>\n    {\n      return (c ^ getRandomValues(new Uint8Array(1))[0] & 15 >> c / 4).toString(16)\n    }) as FixedLengthString<N> | FixedLengthString<N>\n  }\n\n  /**\n   * Génère un UUID de version 4 en utilisant des valeurs aléatoires.\n   * @returns Un UUID de version 4 sous forme de chaîne.\n   * @example\n   * ```typescript\n   *  const uuidV4 = uuid.v4();\n   *  console.log(uuidV4); // Un UUID de version 4.\n   * ```\n  */\n  static v4(  ) {\n\n    return uuid.NIL.replace(/[018]/g, (c:any) =>\n      {\n        return (c ^ getRandomValues(new Uint8Array(1))[0] & 15 >> c / 4).toString(16)\n      }\n    ) as `${string}-${string}-${string}-${string}-${string}`;\n\n  }\n\n  /**\n   * Génère un UUID hiérarchique en fonction des options fournies.\n   * @param {HierarchicalUUIDOptions} [options] - Options pour personnaliser l'UUID.\n   * @returns Un nouvel UUID hiérarchique (_HUID).\n   * @example\n   * ```typescript\n   *  const hierarchicalUUID = uuid.hv1({ parentId: '123456789012', collectionId: 'abcdefabcdef' });\n   *  console.log(hierarchicalUUID); // Un nouvel UUID hiérarchique (_HUID).\n   * ```\n  */\n  static hv1( options?:HierarchicalUUIDOptions ) {\n\n    if(!options)options = {\n      parentId : null,\n      collectionId : null\n    };\n\n    let componentId = uuid.encode( uuid.componentId );\n    let segment1 = uuid.encode( uuid.segment1 );\n    let segment2 = uuid.encode( uuid.segment2 );\n    let segment3 = uuid.encode( uuid.segment3 );\n    let collectionId = uuid.encode( uuid.collectionId );\n\n    if(options.parentId && options.parentId.length == 12){\n      segment1 = options.parentId.slice(0,4) as FixedLengthString<4>;\n      segment2 = options.parentId.slice(4,8) as FixedLengthString<4>;\n      segment3 = options.parentId.slice(8,12) as FixedLengthString<4>;\n    }\n    else console.error( 'parentId.length exeded 12 char length.' )\n\n    if(options.collectionId)collectionId = options.collectionId;\n\n    return new _HUID(`${ componentId }-${ segment1 }-${ segment2 }-${ segment3 }-${ collectionId }`);\n\n  }\n\n}","/* eslint-disable no-var, operator-linebreak */\n\nvar window = require('global/window');\nvar nodeCrypto = require('crypto');\n\n/**\n * @template {ArrayBufferView | null} T\n * @param {T} buf\n * @returns {T}\n */\nfunction getRandomValues(buf) {\n  if (window.crypto && window.crypto.getRandomValues) {\n    return window.crypto.getRandomValues(buf);\n  }\n  if (typeof window.msCrypto === 'object' && typeof window.msCrypto.getRandomValues === 'function') {\n    return window.msCrypto.getRandomValues(buf);\n  }\n  if (nodeCrypto.randomBytes) {\n    if (!(buf instanceof Uint8Array)) {\n      throw new TypeError('expected Uint8Array');\n    }\n    if (buf.length > 65536) {\n      var e = new Error();\n      // @ts-expect-error\n      e.code = 22;\n      e.message = 'Failed to execute \\'getRandomValues\\' on \\'Crypto\\': The ' +\n        'ArrayBufferView\\'s byte length (' + buf.length + ') exceeds the ' +\n        'number of bytes of entropy available via this API (65536).';\n      e.name = 'QuotaExceededError';\n      throw e;\n    }\n    var bytes = nodeCrypto.randomBytes(buf.length);\n    buf.set(bytes);\n    return buf;\n  }\n  else {\n    throw new Error('No secure random number generator available.');\n  }\n}\n\nmodule.exports = getRandomValues;\n","var win;\n\nif (typeof window !== \"undefined\") {\n    win = window;\n} else if (typeof global !== \"undefined\") {\n    win = global;\n} else if (typeof self !== \"undefined\"){\n    win = self;\n} else {\n    win = {};\n}\n\nmodule.exports = win;\n","\"use strict\";","import { render , html , css } from '@lithium-framework/core';\nimport { NavigatorInformations } from '../navigator-informations';\n\nexport function HelloWorld(){\n\n  return html`<div>\n    <h1>Hello World !</h1>\n    ${NavigatorInformations()}\n  </div>`;\n\n}","import { html } from '@lithium-framework/core';\n\nexport function NavigatorInformations(){\n\n  return html`<div>\n    <h3>running on</h3>\n    <p>${navigator.userAgent}</p>\n  </div>`\n\n}"],"names":["render","html","HelloWorld","document","body","global","HTMLElementTagNameMap","ViewTemplate","ObservableObject","state","_state_keys","_classPrivateFieldLooseKey","ComponentExecutionContext","Record","states","$states","constructor","data","T","init","Object","defineProperty","writable","value","createState","key","States","setter","newValue","_classPrivateFieldLooseBase","includes","useState","get","JSON","parse","set","push","stringify","fromEntries","Map","Array","from","console","log","createConsumable","assign","ComponentContext","template","container","HTMLElement","context","Observable","createObservableObject","initialObject","Key","Value","observabe","createProxy","$data","keys","forEach","Proxy","store","propKey","result","undefined","error","DecoratorAttributeConfiguration","attr","attrState","options","target","propertyKey","observable","constructible","enumerable","configurable","when","repeat","children","elements","slotted","HTMLDirective","HTMLBindingDirective","HTMLView","Binding","Subscriber","BindingDirective","ExpressionObserver","AsyncAppendBindig","createObserver","subscriber","directive","bind","controller","AsyncAppendDirective","fn","Promise","callback","x","createBehavior","targetNodeId","source","targets","then","parentElement","catch","unbind","use","define","asyncAppend","StatelessAttachedAttributeDirective","IElementRef","Node","createRef","RefDirective","lastChild","ref","State","StateBindig","StateDirective","_state","mutator","_callback","view","subscribe","dispose","textContent","Properties","StyleBindig","StyleDirective","css","style","UntilBindig","UntilDirective","loading","until","createStorage","uuid","customElement","volatile","WebComponent","FASTElement","connectedCallback","Notifier","_history","_value","_notifier","getNotifier","track","reverse","reduce","results","length","notify","handleChange","Symbol","toPrimitive","Storage","StorageKeys","StorageValues","StateValidator","_storage","records","Partial","RECORD","stateValidator","receiver","has","previousValue","validator","_validator","default","getRandomValues","FixedLengthString","__fixedLength","Length","ComponentId","Segment","ParentSegementId","CollectionId","HUID","HierarchicalUUIDOptions","parentId","collectionId","_HUID","String","componentId","split","section1","section2","section3","join","extend","hv1","segment1","segment2","segment3","NIL","encode","chaine","N","replace","c","Uint8Array","toString","v4","slice","NavigatorInformations","navigator","userAgent"],"version":3,"file":"index.b71e74eb.js.map","sourceRoot":"/__parcel_source_root/"}